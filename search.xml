<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TSCTF 2022 校内赛 逆向部分</title>
      <link href="/2022/04/24/tsctf-2022-re/"/>
      <url>/2022/04/24/tsctf-2022-re/</url>
      
        <content type="html"><![CDATA[<p>感觉没人打比赛啊…都是自己人</p><h2 id="happy-mota"><a href="#happy-mota" class="headerlink" title="happy_mota"></a>happy_mota</h2><p>main.exe可以得到一些信息，根据script文件夹下的解密运行一次得到三块flag</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424033856293.png" alt="image-20220424033856293"></p><p>根据提示看出11到19层的地图形状为字符，其中少了一层，根据后半flag猜测为Enjoy</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424034203991.png" alt="image-20220424034203991" style="zoom:33%;"><img src="/2022/04/24/tsctf-2022-re/image-20220424034218700.png" alt="image-20220424034218700" style="zoom:33%;"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;TSCTF&#123;Enj&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">f2 = <span class="string">b&#x27;\xf8\xb0\x95\xfc\x84\x88&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(f2)):</span><br><span class="line">    s += bytes([f2[i] ^ i ^ <span class="number">0xC8</span>])</span><br><span class="line">print(s.decode(),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">f3 = <span class="string">b&#x27;\xeb\xe7\x85\xe1\xd5\xc3\x87\xd6\x85\xdc\xd3\xda\x9e&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(f3)):</span><br><span class="line">    s += bytes([f3[i] ^ i ^ <span class="number">0xB4</span>])</span><br><span class="line">print(s.decode(),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">f4 = <span class="string">b&#x27;\xee\x97\xd4\xcc\xe7\x91\xf7\xd4\x92\xdc\xe3\xc5\xcb\xcf\x8a\xd5&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(f4)):</span><br><span class="line">    s += bytes([(f4[i] ^ (len(f4) - i) ^ <span class="number">0xA9</span>)])</span><br><span class="line">print(s.decode(),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="PatternLock"><a href="#PatternLock" class="headerlink" title="PatternLock"></a>PatternLock</h2><p>java绕了dex半天还是一样的，native JNI_Load异或后可以看出，大致猜是一个hook（没细看），异或一下即可。</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424034820662.png" alt="image-20220424034820662"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v9 = list(<span class="string">&#x27;cig`o&#x27;</span>)</span><br><span class="line">v11 = list(<span class="string">&#x27;(Mhbrd)kigm$_y|f~v):N&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>): v9[i] = chr(ord(v9[i])^i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">21</span>): v11[i] = chr(ord(v11[i])^i)</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(v9))</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(v11))</span><br><span class="line"></span><br><span class="line">data = [<span class="number">97</span>, <span class="number">14</span>, <span class="number">20</span>, <span class="number">35</span>, <span class="number">10</span>, <span class="number">68</span>, <span class="number">11</span>, <span class="number">86</span>, <span class="number">55</span>, <span class="number">91</span>, <span class="number">4</span>, <span class="number">42</span>, <span class="number">4</span>, <span class="number">76</span>, <span class="number">107</span>, <span class="number">89</span>, <span class="number">68</span>, <span class="number">32</span>, <span class="number">95</span>, <span class="number">77</span>, <span class="number">15</span>, <span class="number">6</span>, <span class="number">55</span>, <span class="number">9</span>, <span class="number">86</span>, <span class="number">47</span>, <span class="number">87</span>, <span class="number">26</span>, <span class="number">109</span>, <span class="number">86</span>, <span class="number">68</span>, <span class="number">116</span>, <span class="number">11</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">54</span>, <span class="number">12</span>, <span class="number">87</span>, <span class="number">122</span>]</span><br><span class="line">cipher = list(<span class="string">&quot;TSCTF2022!!!!!&quot;</span>)</span><br><span class="line">enc = <span class="string">&quot;\r&lt;6\x12)G^VfIDjDX&quot;</span></span><br><span class="line">cipher = [ord(enc[i])^ord(cipher[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cipher))]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">    print(chr(data[i]^cipher[i%len(cipher)]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="happy-string"><a href="#happy-string" class="headerlink" title="happy_string"></a>happy_string</h2><p>题目是linux下的smc，前面ptrace反调试，过掉就行。</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424035554644.png" alt="image-20220424035554644"></p><p>明显Tea，主程序用v2比较，而v2就算经过加密后也是不变的，用v2加密后的字节解密v1</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424035614646.png" alt="image-20220424035614646"></p><p>findcrypto显示blowfish，参考相关源码，没有sub_557DBE6B8493这一项</p><p><img src="/2022/04/24/tsctf-2022-re/image-20220424035742234.png" alt="image-20220424035742234"></p><p>sub_557DBE6B8B6B是blowfish_decrypt，而输入的key为W3lc0meT0TSCTF!!，对前面的v2进行加密。由于题目是动态flag，所以还是需要还原一次v2的加密过程，其中sub_557DBE6B8493直接复制粘贴伪代码即可。</p><p>my_blowfish脚本，库是<a href="https://github.com/Rupan/blowfish">https://github.com/Rupan/blowfish</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;blowfish.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> _DWORD;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> _BYTE;</span><br><span class="line"></span><br><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_55640047F493</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span>* a1, <span class="keyword">int</span> a2, _DWORD* a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>* v3; <span class="comment">// rax</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>* v4; <span class="comment">// rax</span></span><br><span class="line">    __int64 result; <span class="comment">// rax</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>* v6; <span class="comment">// rax</span></span><br><span class="line">    <span class="keyword">int</span> v7; <span class="comment">// [rsp+Ch] [rbp-3Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v8; <span class="comment">// [rsp+24h] [rbp-24h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v9; <span class="comment">// [rsp+24h] [rbp-24h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v10; <span class="comment">// [rsp+28h] [rbp-20h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v11; <span class="comment">// [rsp+28h] [rbp-20h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v12; <span class="comment">// [rsp+28h] [rbp-20h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v13; <span class="comment">// [rsp+2Ch] [rbp-1Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v14; <span class="comment">// [rsp+2Ch] [rbp-1Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> j; <span class="comment">// [rsp+30h] [rbp-18h]</span></span><br><span class="line">    <span class="keyword">int</span> i; <span class="comment">// [rsp+30h] [rbp-18h]</span></span><br><span class="line">    <span class="keyword">int</span> v17; <span class="comment">// [rsp+34h] [rbp-14h]</span></span><br><span class="line">    <span class="keyword">int</span> v18; <span class="comment">// [rsp+34h] [rbp-14h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v19; <span class="comment">// [rsp+38h] [rbp-10h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v20; <span class="comment">// [rsp+38h] [rbp-10h]</span></span><br><span class="line">    <span class="keyword">int</span> v21; <span class="comment">// [rsp+38h] [rbp-10h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v22; <span class="comment">// [rsp+38h] [rbp-10h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v23; <span class="comment">// [rsp+3Ch] [rbp-Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v24; <span class="comment">// [rsp+3Ch] [rbp-Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v25; <span class="comment">// [rsp+3Ch] [rbp-Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v26; <span class="comment">// [rsp+3Ch] [rbp-Ch]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v27; <span class="comment">// [rsp+40h] [rbp-8h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v28; <span class="comment">// [rsp+40h] [rbp-8h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v29; <span class="comment">// [rsp+40h] [rbp-8h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v30; <span class="comment">// [rsp+40h] [rbp-8h]</span></span><br><span class="line">    <span class="keyword">int</span> v31; <span class="comment">// [rsp+44h] [rbp-4h]</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v32; <span class="comment">// [rsp+44h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a2 &lt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a2 &lt; <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            v21 = <span class="number">-1091581186</span>;</span><br><span class="line">            v25 = (<span class="number">0xBEEFCAFE</span> &gt;&gt; (<span class="number">4</span> * a3[<span class="number">3</span>])) ^ (<span class="number">0xBEEFCAFE</span> &gt;&gt; (<span class="number">6</span> * a3[<span class="number">2</span>])) ^ (<span class="number">-1091581186</span> &lt;&lt; (<span class="number">2</span> * a3[<span class="number">1</span>])) ^ (<span class="number">0xBEEFCAFE</span> &gt;&gt; (<span class="number">2</span> * *a3)) ^ <span class="number">0xF77E57F0</span>;</span><br><span class="line">            v29 = (<span class="number">0xBEEFCAFE</span> &gt;&gt; (<span class="number">4</span> * *((_BYTE*)a3 + <span class="number">12</span>))) ^ (v25 &gt;&gt; (<span class="number">6</span> * a3[<span class="number">2</span>])) ^ (<span class="number">-1091581186</span> &lt;&lt; (<span class="number">2</span> * a3[<span class="number">1</span>])) ^ (v25 &gt;&gt; (<span class="number">2</span> * *a3)) ^ (<span class="number">8</span> * v25);</span><br><span class="line">            v7 = -a2;</span><br><span class="line">            v18 = <span class="number">52</span> / -a2 + <span class="number">6</span>;</span><br><span class="line">            v14 = <span class="number">-559038737</span> * v18;</span><br><span class="line">            v9 = *a1;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                v22 = v21 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">                v26 = v25 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">                v30 = v29 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">                v32 = (v14 &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">for</span> (i = v7 - <span class="number">1</span>; i; --i)</span><br><span class="line">                &#123;</span><br><span class="line">                    v11 = a1[i - <span class="number">1</span>];</span><br><span class="line">                    v26 |= v22;</span><br><span class="line">                    v30 = v26;</span><br><span class="line">                    v22 = v26;</span><br><span class="line">                    v6 = &amp;a1[i];</span><br><span class="line">                    *v6 -= ((v9 ^ v14) + (v11 ^ a3[v32 ^ i &amp; <span class="number">3</span>])) ^ (((<span class="number">4</span> * v9) ^ (v11 &gt;&gt; <span class="number">5</span>)) + ((v9 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v11)));</span><br><span class="line">                    v9 = *v6;</span><br><span class="line">                &#125;</span><br><span class="line">                v12 = a1[v7 - <span class="number">1</span>];</span><br><span class="line">                *a1 -= (((<span class="number">4</span> * v9) ^ (v12 &gt;&gt; <span class="number">5</span>)) + ((v9 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v12))) ^ ((v9 ^ v14) + (v12 ^ a3[v32]));</span><br><span class="line">                result = *a1;</span><br><span class="line">                v9 = *a1;</span><br><span class="line">                v21 = v22 + <span class="number">559038737</span>;</span><br><span class="line">                v25 = v26 + <span class="number">559038737</span>;</span><br><span class="line">                v29 = v30 + <span class="number">559038737</span>;</span><br><span class="line">                v14 += <span class="number">559038737</span>;</span><br><span class="line">                --v18;</span><br><span class="line">            &#125; <span class="keyword">while</span> (v18);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        v19 = <span class="number">-889274641</span>;</span><br><span class="line">        v23 = (<span class="number">-889274641</span> &lt;&lt; (<span class="number">4</span> * a3[<span class="number">3</span>])) ^ (<span class="number">-889274641</span> &lt;&lt; (<span class="number">6</span> * a3[<span class="number">2</span>])) ^ (<span class="number">0xCAFEBEEF</span> &gt;&gt; (<span class="number">2</span> * a3[<span class="number">1</span>])) ^ (<span class="number">-889274641</span> &lt;&lt; (<span class="number">2</span> * *a3)) ^ <span class="number">0x195FD7DD</span>;</span><br><span class="line">        v27 = (<span class="number">-889274641</span> &lt;&lt; (<span class="number">4</span> * *((_BYTE*)a3 + <span class="number">12</span>))) ^ (v23 &lt;&lt; (<span class="number">6</span> * a3[<span class="number">2</span>])) ^ (<span class="number">0xCAFEBEEF</span> &gt;&gt; (<span class="number">2</span> * a3[<span class="number">1</span>])) ^ (v23 &lt;&lt; (<span class="number">2</span> * *a3)) ^ (v23 &gt;&gt; <span class="number">3</span>);</span><br><span class="line">        v17 = <span class="number">52</span> / a2 + <span class="number">6</span>;</span><br><span class="line">        v13 = <span class="number">0</span>;</span><br><span class="line">        v10 = a1[a2 - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            v13 -= <span class="number">559038737</span>;</span><br><span class="line">            v20 = v19 - <span class="number">559038737</span>;</span><br><span class="line">            v24 = v23 - <span class="number">559038737</span>;</span><br><span class="line">            v28 = v27 - <span class="number">559038737</span>;</span><br><span class="line">            v31 = (v13 &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; a2 - <span class="number">1</span>; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                v8 = a1[j + <span class="number">1</span>];</span><br><span class="line">                v24 |= v20;</span><br><span class="line">                v28 = v24;</span><br><span class="line">                v20 = v24;</span><br><span class="line">                v3 = &amp;a1[j];</span><br><span class="line">                *v3 += ((v8 ^ v13) + (v10 ^ a3[v31 ^ j &amp; <span class="number">3</span>])) ^ (((<span class="number">4</span> * v8) ^ (v10 &gt;&gt; <span class="number">5</span>)) + ((v8 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v10)));</span><br><span class="line">                v10 = *v3;</span><br><span class="line">            &#125;</span><br><span class="line">            v19 = v20 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">            v23 = v24 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">            v27 = v28 ^ <span class="number">0xDEADBEEF</span>;</span><br><span class="line">            v4 = &amp;a1[a2 - <span class="number">1</span>];</span><br><span class="line">            *v4 += ((*a1 ^ v13) + (v10 ^ a3[v31 ^ j &amp; <span class="number">3</span>])) ^ (((<span class="number">4</span> * *a1) ^ (v10 &gt;&gt; <span class="number">5</span>)) + ((*a1 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v10)));</span><br><span class="line">            result = *v4;</span><br><span class="line">            v10 = result;</span><br><span class="line">            --v17;</span><br><span class="line">        &#125; <span class="keyword">while</span> (v17);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> L[] = &#123; <span class="number">0x5E430F45</span>, <span class="number">0x704A90BA</span>&#125;;</span><br><span class="line">  scanf_s(<span class="string">&quot;%x %x&quot;</span>,&amp;L[<span class="number">0</span>],&amp;L[<span class="number">1</span>]);</span><br><span class="line">  BLOWFISH_CTX ctx;</span><br><span class="line"></span><br><span class="line">  sub_55640047F493(&amp;L, <span class="number">0xFFFFFFFE</span>, (_DWORD*)<span class="string">&quot;W3lc0meT0TSCTF!!&quot;</span>);</span><br><span class="line">  Blowfish_Init (&amp;ctx, (<span class="keyword">uint8_t</span> *)<span class="string">&quot;W3lc0meT0TSCTF!!&quot;</span>, <span class="number">16</span>);</span><br><span class="line">  Blowfish_Decrypt(&amp;ctx, &amp;L[<span class="number">0</span>], &amp;L[<span class="number">1</span>]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%08lX %08lX\n&quot;</span>, (<span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>)L[<span class="number">0</span>], (<span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>)L[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态flag，相关脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">src = [ord(s) for s in &quot;frYVQ)VtT5cctvhM&quot;]</span></span><br><span class="line"><span class="string">text = &quot;13m0nAde i5 mes5ing arounD saf3 and s0und.Please d0 not tell Ver 0v0! I will show you the Key to decrypt sth!&quot;</span></span><br><span class="line"><span class="string">for i in range(16):</span></span><br><span class="line"><span class="string">    src[i] ^= ord(text[5*i])</span></span><br><span class="line"><span class="string">src = &quot;&quot;.join([chr(s) for s in src])</span></span><br><span class="line"><span class="string">print(src)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">conn = remote(<span class="string">&#x27;10.7.2.136&#x27;</span>,<span class="number">45530</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">byteArr2intArr</span>(<span class="params">data,order=<span class="string">&#x27;little&#x27;</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> [int.from_bytes(data[i:i+<span class="number">4</span>],byteorder=order) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(data),<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intArr2byteArr</span>(<span class="params">data,order=<span class="string">&#x27;little&#x27;</span></span>):</span></span><br><span class="line">    out = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> data: out += s.to_bytes(<span class="number">4</span>,order) </span><br><span class="line">    <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">v, k</span>):</span></span><br><span class="line">    v0 = v[<span class="number">0</span>]; v1 = v[<span class="number">1</span>]</span><br><span class="line">    k0 = k[<span class="number">0</span>]; k1 = k[<span class="number">1</span>]; k2 = k[<span class="number">2</span>]; k3 = k[<span class="number">3</span>]</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    delta = <span class="number">0x21524111</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        x -= delta; x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        v0 += ((v1 &lt;&lt; <span class="number">4</span>) + k0) ^ (v1 + x) ^ ((v1 &gt;&gt; <span class="number">5</span>) + k1); v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        v1 += ((v0 &lt;&lt; <span class="number">4</span>) + k2) ^ (v0 + x) ^ ((v0 &gt;&gt; <span class="number">5</span>) + k3); v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    v[<span class="number">0</span>] = v0</span><br><span class="line">    v[<span class="number">1</span>] = v1</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">v, k</span>):</span></span><br><span class="line">    v0 = v[<span class="number">0</span>]; v1 = v[<span class="number">1</span>]</span><br><span class="line">    k0 = k[<span class="number">0</span>]; k1 = k[<span class="number">1</span>]; k2 = k[<span class="number">2</span>]; k3 = k[<span class="number">3</span>]</span><br><span class="line">    x = <span class="number">0xD5B7DDE0</span></span><br><span class="line">    delta = <span class="number">0x21524111</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        v1 -= ((v0 &lt;&lt; <span class="number">4</span>) + k2) ^ (v0 + x) ^ ((v0 &gt;&gt; <span class="number">5</span>) + k3); v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        v0 -= ((v1 &lt;&lt; <span class="number">4</span>) + k0) ^ (v1 + x) ^ ((v1 &gt;&gt; <span class="number">5</span>) + k1); v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        x += delta; x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    v[<span class="number">0</span>] = v0</span><br><span class="line">    v[<span class="number">1</span>] = v1</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_once</span>(<span class="params">i</span>):</span></span><br><span class="line">    elf_name = <span class="string">&#x27;tmp%d.elf&#x27;</span>%i</span><br><span class="line">    feedback = conn.recvline()</span><br><span class="line">    filedata = base64.b64decode(feedback.decode())</span><br><span class="line">    <span class="keyword">with</span> open(elf_name,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f: f.write(filedata)</span><br><span class="line">    conn.recvuntil(<span class="string">b&#x27;&gt;NOW? Show me Your Answer!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    e=ELF(<span class="string">&#x27;./%s&#x27;</span>%elf_name)</span><br><span class="line">    tmp = e.read(<span class="number">0x2040B8</span>,<span class="number">8</span>)</span><br><span class="line">    elf_key = hex(int.from_bytes(tmp,<span class="string">&#x27;little&#x27;</span>))</span><br><span class="line">    ret = subprocess.Popen(</span><br><span class="line">            <span class="string">&quot;my_blowfish.exe&quot;</span>,</span><br><span class="line">            stdout=subprocess.PIPE,</span><br><span class="line">            stdin=subprocess.PIPE,</span><br><span class="line">            stderr=subprocess.PIPE,</span><br><span class="line">        )</span><br><span class="line">    ret.stdin.write((<span class="string">&quot;%s %s\n&quot;</span>%(elf_key[<span class="number">10</span>:],elf_key[<span class="number">2</span>:<span class="number">10</span>])).encode())</span><br><span class="line">    ret.stdin.flush()</span><br><span class="line">    result = ret.stdout.readline().decode()</span><br><span class="line">    blow_key = eval(<span class="string">&quot;0x%s%s&quot;</span>%(result[<span class="number">9</span>:<span class="number">17</span>],result[:<span class="number">8</span>]))</span><br><span class="line">    enc = byteArr2intArr(blow_key.to_bytes(<span class="number">8</span>,byteorder=<span class="string">&#x27;little&#x27;</span>))</span><br><span class="line">    key = byteArr2intArr(<span class="string">b&#x27;W3lc0meT0TSCTF!!&#x27;</span>)</span><br><span class="line">    flag = intArr2byteArr(decrypt(enc,key))</span><br><span class="line">    conn.sendline(flag)</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">b&#x27;&gt;Ready to recv(Y|N)?\n&#x27;</span>, drop=<span class="literal">True</span>)</span><br><span class="line">conn.sendline(<span class="string">b&#x27;Y&#x27;</span>)</span><br><span class="line">solve_once(<span class="number">1</span>)</span><br><span class="line">conn.recvuntil(<span class="string">b&quot;&gt;GREAT!!! very interesting,Here&#x27;s Your Half flag:\&quot;TSCTF&#123;ug1y&amp;13OriNg_En\&quot; But I still want one more!\n&quot;</span>)</span><br><span class="line">solve_once(<span class="number">2</span>)</span><br><span class="line">conn.interactive()</span><br><span class="line"><span class="comment"># TSCTF&#123;ug1y&amp;13OriNg_EncD3c_Ich0OseEmu1t@v@&#125;</span></span><br></pre></td></tr></table></figure><h2 id="digdig"><a href="#digdig" class="headerlink" title="digdig"></a>digdig</h2><p>go语言，一堆digdig_tree函数，正确会输出right，前面main_convert将输入的字符串转为二进制，每个digdig_tree函数会判断一个比特，从而跳转完成二叉树跳转。写个脚本建立二叉树，再找到遍历找到输出right的地方，利用输出right的节点的父节点向上，再判断每一位应当是0或1即可还原flag。</p><p>idapython脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ida_name</span><br><span class="line"><span class="keyword">import</span> idc</span><br><span class="line"><span class="keyword">import</span> idautils</span><br><span class="line"><span class="keyword">import</span> ida_kernwin</span><br><span class="line"><span class="keyword">import</span> ida_idp</span><br><span class="line"><span class="keyword">import</span> ida_funcs</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">&quot;graph.dot&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">file.write(<span class="string">&quot;digraph R &#123;\n&quot;</span>)</span><br><span class="line">end = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,elem,parent</span>):</span></span><br><span class="line">        self.addr = elem</span><br><span class="line">        self.parent = parent</span><br><span class="line">        self.l = <span class="literal">None</span></span><br><span class="line">        self.r = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sub_fun</span>(<span class="params">addr</span>):</span></span><br><span class="line">    <span class="keyword">global</span> all_fun</span><br><span class="line">    dism_addr = list(idautils.FuncItems(addr))</span><br><span class="line">    xref_froms = []</span><br><span class="line">    right = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> ea <span class="keyword">in</span> dism_addr:</span><br><span class="line">        asm = idc.GetDisasm(ea)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;wrong&quot;</span> <span class="keyword">in</span> asm <span class="keyword">and</span> <span class="string">&quot;lea&quot;</span> <span class="keyword">in</span> asm: right &amp;= <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> ida_idp.is_call_insn(ea) <span class="keyword">is</span> <span class="literal">False</span>: <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            callee = get_first_fcref_from(ea)</span><br><span class="line">            <span class="keyword">if</span> callee != addr <span class="keyword">and</span> callee <span class="keyword">not</span> <span class="keyword">in</span> all_fun: </span><br><span class="line">                name = ida_funcs.get_func_name(callee).replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;_&quot;</span>)</span><br><span class="line">                root_name = ida_funcs.get_func_name(addr).replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;_&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;Exit&quot;</span> <span class="keyword">in</span> name: xref_froms.append(int(right))</span><br><span class="line">                <span class="keyword">elif</span> name == <span class="string">&quot;fmt_Fprintln&quot;</span>: xref_froms.append(int(right))</span><br><span class="line">                <span class="keyword">elif</span> <span class="string">&quot;digdig_tree&quot;</span> <span class="keyword">in</span> name <span class="keyword">and</span> <span class="string">&quot;wrong&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">                    xref_froms.append(callee)</span><br><span class="line">                    file.write(<span class="string">&quot;  %s-&gt;%s\n&quot;</span>%(root_name,name))</span><br><span class="line">                <span class="keyword">elif</span> <span class="string">&quot;wrong&quot;</span> <span class="keyword">in</span> name: <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">elif</span> <span class="string">&quot;runtime&quot;</span> <span class="keyword">in</span> name: <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>: print(name)</span><br><span class="line"></span><br><span class="line">    xref_froms = list(set(xref_froms))</span><br><span class="line">    <span class="keyword">return</span> xref_froms</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loop_graph</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">global</span> all_fun</span><br><span class="line">    fun = get_sub_fun(n.addr)</span><br><span class="line">    <span class="keyword">if</span> len(fun)&gt;<span class="number">2</span>: </span><br><span class="line">        n.l = Node(fun[<span class="number">0</span>],n); n.r = Node(fun[<span class="number">1</span>],n)</span><br><span class="line">    <span class="keyword">elif</span> len(fun)==<span class="number">2</span>:</span><br><span class="line">        n.l = Node(fun[<span class="number">0</span>],n); n.r = Node(fun[<span class="number">1</span>],n)</span><br><span class="line">    <span class="keyword">elif</span> len(fun)==<span class="number">1</span>: n.l = Node(fun[<span class="number">0</span>],n)</span><br><span class="line">    all_fun.extend(fun)</span><br><span class="line">    all_fun = list(set(all_fun))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> n.l != <span class="literal">None</span> <span class="keyword">and</span> n.l != <span class="number">0</span> <span class="keyword">and</span> n.l != <span class="number">1</span>: loop_graph(n.l)</span><br><span class="line">    <span class="keyword">if</span> n.r != <span class="literal">None</span> <span class="keyword">and</span> n.r != <span class="number">0</span> <span class="keyword">and</span> n.l != <span class="number">1</span>: loop_graph(n.r)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preorderTraversal</span>(<span class="params">root: Node</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">helper</span>(<span class="params">node</span>):</span></span><br><span class="line">        <span class="keyword">if</span> node == <span class="literal">None</span>: <span class="keyword">return</span> </span><br><span class="line">        <span class="keyword">if</span> node.addr == <span class="number">1</span>: res.append(node)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            helper(node.l)</span><br><span class="line">            helper(node.r)</span><br><span class="line">    helper(root)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">flag_bit = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_parent</span>(<span class="params">n: Node,child_name</span>):</span></span><br><span class="line">    <span class="keyword">global</span> flag_bit</span><br><span class="line">    <span class="keyword">if</span> n == <span class="literal">None</span>: <span class="keyword">return</span></span><br><span class="line">    dism_addr = list(idautils.FuncItems(n.addr))</span><br><span class="line">    name = ida_funcs.get_func_name(n.addr).replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;_&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> child_name != <span class="string">&quot;fmt_Fprintln&quot;</span>:</span><br><span class="line">        <span class="keyword">for</span> ea <span class="keyword">in</span> dism_addr:</span><br><span class="line">            <span class="keyword">if</span> ida_idp.is_call_insn(ea) <span class="keyword">is</span> <span class="literal">False</span>: <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                callee = get_first_fcref_from(ea)</span><br><span class="line">                tmp = ida_funcs.get_func_name(callee).replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;_&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;wrong&quot;</span> <span class="keyword">in</span> tmp: <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;digdig_tree&quot;</span> <span class="keyword">in</span> tmp:</span><br><span class="line">                    flag_bit = str(int(tmp==child_name))+flag_bit</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">    get_parent(n.parent,name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">all_fun = []</span><br><span class="line">addr = <span class="number">0x49B7E0</span> <span class="comment"># digdig_tree.AztyfJahWAIYmgn</span></span><br><span class="line">n = loop_graph(Node(addr,<span class="literal">None</span>))</span><br><span class="line">res = preorderTraversal(n)</span><br><span class="line">get_parent(res[<span class="number">0</span>].parent,<span class="string">&quot;fmt_Fprintln&quot;</span>)</span><br><span class="line">flag = [chr(int(flag_bit[i:i+<span class="number">8</span>],<span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(flag_bit),<span class="number">8</span>)]</span><br><span class="line">flag = <span class="string">&quot;&quot;</span>.join(flag)</span><br><span class="line">file.write(<span class="string">&quot;&#125;\n&quot;</span>)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常见的加密算法</title>
      <link href="/2022/01/11/crypto/"/>
      <url>/2022/01/11/crypto/</url>
      
        <content type="html"><![CDATA[<h2 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h2><h2 id="RC5"><a href="#RC5" class="headerlink" title="RC5"></a>RC5</h2><h2 id="RC6"><a href="#RC6" class="headerlink" title="RC6"></a>RC6</h2><h2 id="TEA-XTEA-XXTEA"><a href="#TEA-XTEA-XXTEA" class="headerlink" title="TEA/XTEA/XXTEA"></a>TEA/XTEA/XXTEA</h2><h2 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h2><h2 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h2><h2 id="SM4"><a href="#SM4" class="headerlink" title="SM4"></a>SM4</h2><h2 id="Salsa20"><a href="#Salsa20" class="headerlink" title="Salsa20"></a>Salsa20</h2><h2 id="chacha20"><a href="#chacha20" class="headerlink" title="chacha20"></a>chacha20</h2><h2 id="Blowfish"><a href="#Blowfish" class="headerlink" title="Blowfish"></a>Blowfish</h2><h2 id="TwoFish"><a href="#TwoFish" class="headerlink" title="TwoFish"></a>TwoFish</h2><h2 id="Serpent"><a href="#Serpent" class="headerlink" title="Serpent"></a>Serpent</h2><h2 id="ZUC"><a href="#ZUC" class="headerlink" title="ZUC"></a>ZUC</h2>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF 2021 逆向题目</title>
      <link href="/2022/01/11/mrctf-2021-re/"/>
      <url>/2022/01/11/mrctf-2021-re/</url>
      
        <content type="html"><![CDATA[<p>开个坑，有空复现一下，先复现安卓题目</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>近期做过的一些题目</title>
      <link href="/2022/01/11/note2/"/>
      <url>/2022/01/11/note2/</url>
      
        <content type="html"><![CDATA[<h1 id="近期做过的一些题目"><a href="#近期做过的一些题目" class="headerlink" title="近期做过的一些题目"></a>近期做过的一些题目</h1><p>学业&amp;机器人挺忙的，逆向做一题就很耗时间，实在是不太有时间认真做题，准备直接找一堆wp复现一遍</p><h2 id="湖湘杯-Hideit-Hideit"><a href="#湖湘杯-Hideit-Hideit" class="headerlink" title="湖湘杯 Hideit Hideit"></a>湖湘杯 Hideit <a href="Hideit.zip">Hideit</a></h2><p>进程序大致能找到这个函数</p><p><img src="/2022/01/11/note2/image-20220111010145631.png" alt="image-20220111010145631"></p><p>能看出是向进程内存注入了一个函数，然后根据内存地址调用该函数，断点进入函数，一直跟进去，会发现TestEv1l.dll已注入，具体注入流程尚未分析。</p><p><img src="/2022/01/11/note2/image-20220111012146523.png" alt="image-20220111012146523"></p><p>找到加密函数，开头有个修改注册表函数，隐藏了key</p><p><img src="/2022/01/11/note2/image-20220111012911648.png" alt="image-20220111012911648"></p><p><img src="/2022/01/11/note2/image-20220111013550525.png" alt="image-20220111013550525"></p><p>进一步分析发现先做了一次xxtea，需要令v12这个输入值正确，成功进入if后再进行一次加密，然后最后再判断是否一致</p><p><img src="/2022/01/11/note2/image-20220111013704574.png" alt="image-20220111013704574"></p><p>xtea解密，解密得到第一个密匙为dotitsit</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span>* v, <span class="keyword">int</span>* k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>], i;           <span class="comment">/* set up */</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> sum = <span class="number">0xC6EF3720</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> delta = <span class="number">0x61C88647</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       <span class="comment">/* basic cycle start */</span></span><br><span class="line">index = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">v1 -= ((sum ^ v0) + (v0 ^ k[index ^ <span class="number">1</span>])) ^ (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">3</span>)) + ((v0 &gt;&gt; <span class="number">5</span>) ^ (v0 &lt;&lt; <span class="number">2</span>)));</span><br><span class="line">v0 -= ((sum ^ v1) + (v1 ^ k[index])) ^ (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">3</span>)) + ((v1 &gt;&gt; <span class="number">5</span>) ^ (v1 &lt;&lt; <span class="number">2</span>)));</span><br><span class="line">sum += delta;</span><br><span class="line">&#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">v[<span class="number">0</span>] = v0; v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> key[<span class="number">4</span>] = &#123; <span class="number">114</span>, <span class="number">514</span>, <span class="number">19</span>, <span class="number">19</span> &#125;;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v[<span class="number">2</span>] = &#123; <span class="number">288407067</span>,<span class="number">1668576323</span> &#125;;</span><br><span class="line">decrypt((<span class="keyword">unsigned</span> <span class="keyword">int</span>*)v, key);</span><br><span class="line"><span class="keyword">char</span>* ptr = (<span class="keyword">char</span>*)v; <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *(ptr+i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用findcrypt插件提示为salsa20加密，一直尝试无果，最后发现了是chacha20，编写脚本即可</p><p><img src="/2022/01/11/note2/image-20220111015157822.png" alt="image-20220111015157822"></p><p>最后的解密脚本：（怎么看出nonce就是dotitist我忘了，大致是动调的结果）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ChaCha20</span><br><span class="line">secret = <span class="string">&quot;0N3@aYI_M3l0dy_KurOm1_W_Suk1dqy0&quot;</span>.encode()</span><br><span class="line">ciphertext = bytes([<span class="number">0xEB</span>, <span class="number">0x8E</span>, <span class="number">0x5C</span>, <span class="number">0xA5</span>, <span class="number">0x62</span>, <span class="number">0xB4</span>, <span class="number">0x1C</span>, <span class="number">0x84</span>, <span class="number">0x5C</span>, <span class="number">0x59</span>,<span class="number">0xFC</span>, <span class="number">0x0D</span>, <span class="number">0x43</span>, <span class="number">0x3C</span>, <span class="number">0xAB</span>, <span class="number">0x20</span>, <span class="number">0xD8</span>, <span class="number">0x93</span>, <span class="number">0x33</span>, <span class="number">0x13</span>,<span class="number">0xA1</span>, <span class="number">0x9E</span>, <span class="number">0x39</span>, <span class="number">0x00</span>, <span class="number">0x76</span>, <span class="number">0x14</span>, <span class="number">0xB5</span>, <span class="number">0x04</span>, <span class="number">0x58</span>, <span class="number">0x9D</span>,<span class="number">0x06</span>, <span class="number">0xB8</span>])</span><br><span class="line">nonce = <span class="string">&quot;dotitsit&quot;</span>.encode()</span><br><span class="line">cipher = ChaCha20.new(key=secret, nonce=nonce)</span><br><span class="line">plaintext = cipher.decrypt(ciphertext)</span><br><span class="line"></span><br><span class="line">print(plaintext)</span><br></pre></td></tr></table></figure><p>得到flag{F1NDM3_4f73r_7H3_5h3LLC0D3}</p><h2 id="强网拟态-babyre-babyre"><a href="#强网拟态-babyre-babyre" class="headerlink" title="强网拟态 babyre babyre"></a>强网拟态 babyre <a href="RE1-babyre.zip">babyre</a></h2><p>其实题目挺简单，我硬是没看出这只是个查表法的aes解密，其余啥都没做。</p><p>扔进ida能大致发现应该是个upx，脱壳后进行分析。</p><h2 id="强网拟态-babytms-babytms"><a href="#强网拟态-babytms-babytms" class="headerlink" title="强网拟态 babytms babytms"></a>强网拟态 babytms <a href="RE2-babytms.zip">babytms</a></h2><p>已经搭建好动调环境，有空学习一波arm指令然后复现一次。</p><h2 id="MBCrackme-MBCrackme"><a href="#MBCrackme-MBCrackme" class="headerlink" title="MBCrackme MBCrackme"></a>MBCrackme <a href="MBCrackme.rar">MBCrackme</a></h2><p>crazyman大佬发的题目，一个exe里就有三题，废物我只做了第一题，主要是思路挺有意思的。.net题目</p><p><img src="/2022/01/11/note2/image-20220111020726584.png" alt="image-20220111020726584"></p><p>按下第一个检查密码按钮进入button1_click函数，可见输入的密码作为密匙解密resources文件，然后将所得到的字节保存并执行。</p><p><img src="/2022/01/11/note2/image-20220111020750665.png" alt="image-20220111020750665"></p><p>解密过程为将resource图片的像素点的颜色值提取出来，然后循环取每位密码的字节作异或</p><p><img src="/2022/01/11/note2/image-20220111021339163.png" alt="image-20220111021339163"></p><p>先将异或前的值提取出来，然后由于最后生成的程序需要执行，不妨假设最后解密后的数据开头是pe的文件头，所以用pe头做密匙异或即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#上文b的值</span></span><br><span class="line">arr = <span class="literal">None</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;b&quot;</span>,<span class="string">&quot;rb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  arr = f.read()</span><br><span class="line"></span><br><span class="line">pe_head = [</span><br><span class="line">  <span class="number">0x4D</span>,<span class="number">0x5A</span>,<span class="number">0x90</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0xB8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(len(pe_head)):</span><br><span class="line">  print(chr(arr[j]^pe_head[j]),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment">#得到easy_level_one_almost_done_xor_pe_and_keep_going!easy_level_</span></span><br><span class="line"><span class="comment">#因为解密为循环去每位密码字节，所以会有重复部分，删除即可</span></span><br><span class="line"></span><br><span class="line">pwd = <span class="string">&quot;easy_level_one_almost_done_xor_pe_and_keep_going!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;level2.exe&quot;</span>,<span class="string">&quot;wb+&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)):</span><br><span class="line">    f.write((ord(pwd[i%len(pwd)])^arr[i]).to_bytes(length=<span class="number">1</span>,byteorder=<span class="string">&quot;big&quot;</span>,signed=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><p>最后得到level2.exe</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一些需要用脚本的逆向题目</title>
      <link href="/2022/01/11/script/"/>
      <url>/2022/01/11/script/</url>
      
        <content type="html"><![CDATA[<p>有空把需要idapython脚本解的题目找出来，每个都复现一次，但首先把安卓和不同加密都搞明白先</p>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TSCTF 2021 逆向题目</title>
      <link href="/2022/01/11/tsctf-2021-re/"/>
      <url>/2022/01/11/tsctf-2021-re/</url>
      
        <content type="html"><![CDATA[<h1 id="Android签到题"><a href="#Android签到题" class="headerlink" title="Android签到题"></a>Android签到题</h1><p>看wp <a href="https://jameshoi.github.io/2021/05/23/tsctf-2021/">https://jameshoi.github.io/2021/05/23/tsctf-2021/</a><br>​</p><h1 id="BabyEasyUWP-BabyEasyUWP-1-0-0-0-Test-rar"><a href="#BabyEasyUWP-BabyEasyUWP-1-0-0-0-Test-rar" class="headerlink" title="BabyEasyUWP BabyEasyUWP_1.0.0.0_Test.rar"></a>BabyEasyUWP <a href="BabyEasyUWP_1.0.0.0_Test.rar">BabyEasyUWP_1.0.0.0_Test.rar</a></h1><p>吐了…这么简单的题目竟然比赛的时候没做出来，主要还是一开始没找到字符串进行定位，ida里面用shift+f12没找到，用火绒剑找到的。<br><img src="/2022/01/11/tsctf-2021-re/1622018958280-2547f687-d981-4ee4-bb87-0012e0602ed3.png" alt="image.png"><br>ps: 原来其实可以不用火绒剑，在string里面右键选择setup修改查找字符串编码<br><img src="/2022/01/11/tsctf-2021-re/1622019524226-429ce1a2-a874-4986-86b1-00f5a0149577.png" alt="image.png"><br>查找效果<br><img src="/2022/01/11/tsctf-2021-re/1622019580341-3dbf74eb-47ef-48af-b060-e657206a9cd8.png" alt="image.png"><br>根据这个地址+基址找到字符串，然后查看交叉引用，找到了关键函数，可见需让v22为0才成功<br><img src="/2022/01/11/tsctf-2021-re/1622019020633-a9f2af4c-b86b-482c-971b-2d0cb4e64cb8.png" alt="image.png"><br>这里判断flag是否相等<br><img src="/2022/01/11/tsctf-2021-re/1622019061845-756abbf9-2e72-434b-a89d-ff39975aa67d.png" alt="image.png"><br>sub那个函数动调发现应该是做了凯撒加密，v11动调发现就是输入的字符串<br><img src="/2022/01/11/tsctf-2021-re/1622019091321-9c4ef5c4-b988-4369-8695-27e8cb835491.png" alt="image.png"><br>因为uwp要依靠ApplicationFrameHost运行，所以只能附加进程进行调试。然而一开始想着是不是还得开个没进行反编译的ida进行附加到进程，然后再定位到关键代码再断点。其实完全不用，分析完后点断点，直接附加进程即可。<br><img src="/2022/01/11/tsctf-2021-re/1622019317811-85716fd1-01a8-46fe-9b09-5f0d45b0a6c1.png" alt="image.png"><br>题外话说多了，继续分析<br>（剩下的后补吧…赶作业先）<br>​</p><h1 id="not-wasm-not-wasm-zip"><a href="#not-wasm-not-wasm-zip" class="headerlink" title="not-wasm not-wasm.zip"></a>not-wasm <a href="not-wasm.zip">not-wasm.zip</a></h1><p>一开始看起来挺恶心的，但其实很好理解，主要这题还是对aes不熟悉…看了五小时硬是没看出是aes<br>​</p><h1 id="ez-stlez-stl-zip"><a href="#ez-stlez-stl-zip" class="headerlink" title="ez_stlez_stl.zip"></a>ez_stl<a href="ez_stl.zip">ez_stl.zip</a></h1><h1 id="yet-another-lua-ext-yet-another-lua-ext-zip"><a href="#yet-another-lua-ext-yet-another-lua-ext-zip" class="headerlink" title="yet-another-lua-ext yet-another-lua-ext.zip"></a>yet-another-lua-ext <a href="yet-another-lua-ext.zip">yet-another-lua-ext.zip</a></h1>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TSCTF-J 2021 Reverse Official WP</title>
      <link href="/2022/01/11/tsctf-j-2021-re/"/>
      <url>/2022/01/11/tsctf-j-2021-re/</url>
      
        <content type="html"><![CDATA[<h1 id="TSCTF-J-2021-Reverse-Official-WP"><a href="#TSCTF-J-2021-Reverse-Official-WP" class="headerlink" title="TSCTF-J 2021 Reverse Official WP"></a>TSCTF-J 2021 Reverse Official WP</h1><p><strong>by James</strong></p><h2 id="easyXor"><a href="#easyXor" class="headerlink" title="easyXor"></a>easyXor</h2><p>签到。题目就是题解，xor加密后验证，这里要提多一句，选手可以再仔细分析分析反编译出来的while流程。这里给出相对应的源码，希望选手理解为什么ida反编译后的结果等同于这句源码。<br><img src="/2022/01/11/tsctf-j-2021-re/upload_f2ce5e7cad016d3b698cf77633aa6ecb.png"><br>解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = [</span><br><span class="line">    <span class="number">0x59</span>,<span class="number">0x5f</span>,<span class="number">0x4c</span>,<span class="number">0x5a</span>,<span class="number">0x4f</span>,<span class="number">0x25</span>,<span class="number">0x41</span>,<span class="number">0x71</span>,<span class="number">0x52</span>,<span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x4b</span>,<span class="number">0x65</span>,<span class="number">0x31</span>,<span class="number">0x4d</span>,<span class="number">0x66</span>,<span class="number">0x5d</span>,<span class="number">0x2f</span>,<span class="number">0x43</span>,<span class="number">0x4b</span>,<span class="number">0x4d</span>,</span><br><span class="line">    <span class="number">0x5a</span>,<span class="number">0x4c</span>,<span class="number">0x5d</span>,<span class="number">0x37</span>,<span class="number">0x5f</span>,<span class="number">0x4b</span>,<span class="number">0x4f</span>,<span class="number">0x26</span>,<span class="number">0x63</span>,<span class="number">0x4f</span>,</span><br><span class="line">    <span class="number">0x7f</span>,<span class="number">0x61</span>,<span class="number">0x72</span>,<span class="number">0x7f</span>,<span class="number">0x1f</span>,<span class="number">0x71</span>,<span class="number">0x6c</span>,<span class="number">0x49</span>,<span class="number">0x78</span>,<span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x04</span>,<span class="number">0x05</span>,<span class="number">0x06</span>,<span class="number">0x5b</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">44</span>):</span><br><span class="line">    print(chr(data[i]^i^<span class="number">0xD</span>),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="debugMe"><a href="#debugMe" class="headerlink" title="debugMe"></a>debugMe</h2><p>送分题。可以发现判断了字符串长度与flag头是否为<code>TSCTF-J</code>，然后输入的字符串直接进行比较了，所以动态调试查看buffer变量可以找到flag。这题没用动调的选手可以再做一遍<br><img src="/2022/01/11/tsctf-j-2021-re/upload_bcb68f9c88d737f77dd58757ca786ebf.png"><br><img src="/2022/01/11/tsctf-j-2021-re/upload_7911d9c0c4329eca16c0e581fcdc8d0d.png"></p><h2 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h2><p>送分题，这题做出来的人这么少属于是没想到，选手可以再分析下迷宫变量类型和程序流程。下图可以看出是个10x10的数组，v9，v10是数组索引<br><img src="/2022/01/11/tsctf-j-2021-re/upload_db4c0868e69ba83f09d5076b0c4a232d.png"><br>程序漏写了最后终点的判断导致有多解，标准解如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">10</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//SSDSSSDDWDDSSSAAAASSDDDDDWDWWWDWWAWAAAWWDDDDD</span></span><br><span class="line"><span class="comment">//TSCTF-J&#123;f62f3965313148ebccaec0bcdb132957&#125;</span></span><br></pre></td></tr></table></figure><h2 id="UpxRand"><a href="#UpxRand" class="headerlink" title="UpxRand"></a>UpxRand</h2><p>这题和去年的PaintUpx是一个意思。upx脱壳后ida分析发现有Sleep函数卡住了导致图片输出不全，patch掉即可，修改汇编方法如下图<br><img src="/2022/01/11/tsctf-j-2021-re/upload_d7849115717d1f1f1c4bbda1734c99f3.png"><br>把sleep改成nop，修改后再点击上图中的<code>Apply patches to input file</code><br><img src="/2022/01/11/tsctf-j-2021-re/upload_9856bb908cf70c92f31b4c8dcdad2e5a.png"></p><p>再打开软件扫二维码得flag<br><img src="/2022/01/11/tsctf-j-2021-re/upload_46de028f01dfe157e27f693363a364e1.png"></p><h2 id="tic-tac-toe"><a href="#tic-tac-toe" class="headerlink" title="tic-tac-toe"></a>tic-tac-toe</h2><p>井字棋，用exeinfope可以发现是c#写的，用dnspy打开<br><img src="/2022/01/11/tsctf-j-2021-re/upload_c84b3d8eb8668007c836abf3a373b344.png"><br>可以发现经典c# Form入口，045X7ZYGMK是Form类型<br><img src="/2022/01/11/tsctf-j-2021-re/upload_a79d35ae42ec30b154f5b288022d22fc.png"><br>进入后多在几个地方下断点看看变量信息，可以发现有个判断赢了多少次的函数<br><img src="/2022/01/11/tsctf-j-2021-re/upload_e4eef4c8aed7399ea5c09692028bed37.png"><br>修改变量绕过判断或其他方法获取flag即可<br><img src="/2022/01/11/tsctf-j-2021-re/upload_7bd900433c8511e33a5e3c50bacdd2c6.png"></p><h2 id="Minecraft"><a href="#Minecraft" class="headerlink" title="Minecraft"></a>Minecraft</h2><p>exeinfope可以看出是pyinstaller打包的，github找到pyinstxtractor.py脚本提取exe内容，找到main.pyc进行反编译，当中要注意解包脚本需要和打包时的py版本一致，否则会导致pyc无法反编译。<br><img src="/2022/01/11/tsctf-j-2021-re/upload_cd14e805351050e0ae24789ea843b330.png"><br>反编译结果中的关键信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">judge_flag</span>(<span class="params">label_text</span>):</span></span><br><span class="line">    flag = input(<span class="string">&#x27;请输入flag进行验证：&#x27;</span>)</span><br><span class="line">    enflag = [<span class="number">81</span>, <span class="number">77</span>, <span class="number">13</span>, <span class="number">81</span>, <span class="number">25</span>, <span class="number">180</span>, <span class="number">41</span>, <span class="number">237</span>, <span class="number">21</span>, <span class="number">233</span>, <span class="number">125</span>, <span class="number">65</span>, <span class="number">229</span>, <span class="number">209</span>, <span class="number">161</span>, <span class="number">192</span>, <span class="number">161</span>, <span class="number">125</span>, <span class="number">25</span>, <span class="number">85</span>, <span class="number">57</span>, <span class="number">185</span>, <span class="number">229</span>, <span class="number">125</span>, <span class="number">181</span>, <span class="number">141</span>, <span class="number">125</span>, <span class="number">196</span>, <span class="number">205</span>, <span class="number">185</span>, <span class="number">209</span>, <span class="number">125</span>, <span class="number">165</span>, <span class="number">81</span>, <span class="number">245</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">data</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (data &amp; <span class="number">192</span>) &gt;&gt; <span class="number">6</span> | (data &amp; <span class="number">48</span>) &lt;&lt; <span class="number">2</span> | (data &amp; <span class="number">12</span>) &lt;&lt; <span class="number">2</span> | (data &amp; <span class="number">3</span>) &lt;&lt; <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> enflag == [encrypt(ord(s)) <span class="keyword">for</span> s <span class="keyword">in</span> flag]:</span><br><span class="line">        label_text += <span class="string">&#x27; flag是&#x27;</span> + flag</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        label_text += <span class="string">&#x27; 输入flag错误&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> label_text</span><br></pre></td></tr></table></figure><p>可见是单字节加密，爆破即可（也可以根据加密推翻），脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">enflag &#x3D; [81, 77, 13, 81, 25, 180, 41, 237, 21, 233, 125, 65, 229, 209, 161, 192, 161, 125, 25, 85, 57, 185, 229, 125, 181, 141, 125, 196, 205, 185, 209, 125, 165, 81, 245]</span><br><span class="line">def encrypt(data):</span><br><span class="line">    return (data &amp; 192) &gt;&gt; 6 | (data &amp; 48) &lt;&lt; 2 | (data &amp; 12) &lt;&lt; 2 | (data &amp; 3) &lt;&lt; 2</span><br><span class="line">for s in enflag:</span><br><span class="line">    for d in range(32,127):</span><br><span class="line">        if s &#x3D;&#x3D; encrypt(d): print(chr(d),end&#x3D;&quot;&quot;)</span><br></pre></td></tr></table></figure><h2 id="crackme"><a href="#crackme" class="headerlink" title="crackme"></a>crackme</h2><p>原题是有壳的，而且题目没有问题，有人说脱不出后就干脆不加壳。<br>main函数里的sub_401C50可以看出是检测进程名称，方法五花八门，总之绕过就行。<br><img src="/2022/01/11/tsctf-j-2021-re/upload_b9f4b19178b88716e59d41b90e3eb42d.png"><br>sub_401DB0是个SEH异常反调试，详情请百度<br><img src="/2022/01/11/tsctf-j-2021-re/upload_686f348aa905e180c2aa55640f0fa035.png"><br>直接查看汇编，参考刚刚上⾯的源码，反调试的E9刚好起到了花指令的作⽤，patch一下发现了dword_408160有运算<br><img src="/2022/01/11/tsctf-j-2021-re/upload_7574d50c8b72a12601009e9ae275385e.png"><br>再返回主函数汇编，发现藏了个函数sub_402870，基本所有常量字符串都加了异或加密，防止定位到这个函数，而且当中接收了输入字符串进行加密验证。<br><img src="/2022/01/11/tsctf-j-2021-re/upload_95771b53b134afe5274de1a86504f417.png"><br>先看_Initialize_parallel_init_info函数，发现了NtSetInformationThread，这整个函数是隐藏线程防⽌调试⽤的，绕过就⾏（留意下dword_408160）<br><img src="/2022/01/11/tsctf-j-2021-re/upload_48d61ca47183c4cb07c3a090bfd3d8d1.png"><br>这个是smc，动态运行函数，当中有用到dword_408160这个变量进行解密<br><img src="/2022/01/11/tsctf-j-2021-re/upload_4e3e94a0f8cef923adec91903cab4f3f.png"><br><img src="/2022/01/11/tsctf-j-2021-re/upload_bcdb112e720accfe942b1b871dcef165.png"><br>当反调试函数都过了，让dword_408160+=21,21,14，即dword_408160为56时才解密成功，从⽽调⽤函数，每个加密函数都有固定的花指令。函数分别是异或的变形，加减乘除取余<br><img src="/2022/01/11/tsctf-j-2021-re/upload_ddbf2d8ca16d6329ede3a23dbfe74917.png"><br><img src="/2022/01/11/tsctf-j-2021-re/upload_52068edc7ead49f4601d9c9db89f9ada.png"><br>过了一层验证后还有md5限制多解，md5字符串也用异或加密了一下校验md5前控制台会输出提示正在做md5<br><img src="/2022/01/11/tsctf-j-2021-re/upload_63f03c4c9de953160e080d4a21515ee4.png"><br><img src="/2022/01/11/tsctf-j-2021-re/upload_628d17acf301d3324d751d7736c3771e.png"><br>提取md5字符串得到d57d1bc45d6f044959e2e796930a301e，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = [</span><br><span class="line">  <span class="number">0x5C</span>, <span class="number">0x0D</span>, <span class="number">0x0F</span>, <span class="number">0x5C</span>, <span class="number">0x09</span>, <span class="number">0x5A</span>, <span class="number">0x5B</span>, <span class="number">0x0C</span>, <span class="number">0x0D</span>, <span class="number">0x5C</span>, </span><br><span class="line">  <span class="number">0x0E</span>, <span class="number">0x5E</span>, <span class="number">0x08</span>, <span class="number">0x0C</span>, <span class="number">0x0C</span>, <span class="number">0x01</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x5D</span>, <span class="number">0x0A</span>, </span><br><span class="line">  <span class="number">0x5D</span>, <span class="number">0x0F</span>, <span class="number">0x01</span>, <span class="number">0x0E</span>, <span class="number">0x01</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x59</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, </span><br><span class="line">  <span class="number">0x09</span>, <span class="number">0x5D</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">    print(chr(s[i]^<span class="number">56</span>),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以看出可以单字节爆破，写脚本即可，由于限制md5再写脚本遍历比较md5即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rand100 rand()%10+1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> enflag[] = &#123;</span><br><span class="line">  <span class="number">0x6B</span>, <span class="number">0x6F</span>, <span class="number">0x80</span>, <span class="number">0x3E</span>, <span class="number">0x81</span>, <span class="number">0x85</span>, <span class="number">0x68</span>, <span class="number">0x29</span>, <span class="number">0x28</span>, <span class="number">0xA1</span>,</span><br><span class="line">  <span class="number">0x3A</span>, <span class="number">0xE3</span>, <span class="number">0xE2</span>, <span class="number">0x1D</span>, <span class="number">0x28</span>, <span class="number">0x40</span>, <span class="number">0xD3</span>, <span class="number">0xD6</span>, <span class="number">0xD1</span>, <span class="number">0x06</span>,</span><br><span class="line">  <span class="number">0x5B</span>, <span class="number">0x69</span>, <span class="number">0x5A</span>, <span class="number">0x27</span>, <span class="number">0xF6</span>, <span class="number">0x03</span>, <span class="number">0x52</span>, <span class="number">0x3E</span>, <span class="number">0x7F</span>, <span class="number">0x26</span>,</span><br><span class="line">  <span class="number">0x66</span>, <span class="number">0x7E</span>, <span class="number">0x9F</span>, <span class="number">0xFD</span>, <span class="number">0x88</span>, <span class="number">0x18</span>, <span class="number">0x46</span>, <span class="number">0xCC</span>, <span class="number">0xBC</span>, <span class="number">0x82</span>,</span><br><span class="line">  <span class="number">0x43</span>, <span class="number">0x82</span>, <span class="number">0xA6</span>, <span class="number">0xA5</span>, <span class="number">0x94</span>, <span class="number">0x15</span>, <span class="number">0x1E</span>, <span class="number">0xED</span>, <span class="number">0x29</span>, <span class="number">0x93</span>,</span><br><span class="line">  <span class="number">0x87</span>, <span class="number">0x3F</span>, <span class="number">0x9A</span>, <span class="number">0x3C</span>, <span class="number">0x15</span>, <span class="number">0x61</span>, <span class="number">0xA4</span>, <span class="number">0x3D</span>, <span class="number">0x5C</span>, <span class="number">0x00</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> random_list[] = &#123;</span><br><span class="line"><span class="number">0x27</span>,<span class="number">0x14</span>,<span class="number">0x27</span>,<span class="number">0x26</span>,<span class="number">0x38</span>,<span class="number">0x62</span>,<span class="number">0x42</span>,<span class="number">0x56</span>,<span class="number">0x33</span>,<span class="number">0x0D</span>,</span><br><span class="line"><span class="number">0x36</span>,<span class="number">0x01</span>,<span class="number">0x2B</span>,<span class="number">0x52</span>,<span class="number">0x26</span>,<span class="number">0x16</span>,<span class="number">0x2E</span>,<span class="number">0x56</span>,<span class="number">0x62</span>,<span class="number">0x51</span>,</span><br><span class="line"><span class="number">0x4D</span>,<span class="number">0x5C</span>,<span class="number">0x38</span>,<span class="number">0x07</span>,<span class="number">0x3A</span>,<span class="number">0x18</span>,<span class="number">0x52</span>,<span class="number">0x29</span>,<span class="number">0x1A</span>,<span class="number">0x4F</span>,</span><br><span class="line"><span class="number">0x2F</span>,<span class="number">0x5B</span>,<span class="number">0x29</span>,<span class="number">0x58</span>,<span class="number">0x08</span>,<span class="number">0x26</span>,<span class="number">0x0C</span>,<span class="number">0x12</span>,<span class="number">0x39</span>,<span class="number">0x44</span>,</span><br><span class="line"><span class="number">0x22</span>,<span class="number">0x4F</span>,<span class="number">0x18</span>,<span class="number">0x58</span>,<span class="number">0x62</span>,<span class="number">0x55</span>,<span class="number">0x0D</span>,<span class="number">0x0C</span>,<span class="number">0x4F</span>,<span class="number">0x43</span>,</span><br><span class="line"><span class="number">0x1E</span>,<span class="number">0x05</span>,<span class="number">0x50</span>,<span class="number">0x06</span>,<span class="number">0x59</span>,<span class="number">0x32</span>,<span class="number">0x1E</span>,<span class="number">0x4D</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,</span><br><span class="line"><span class="number">0x0F</span>,<span class="number">0x25</span>,<span class="number">0x1D</span>,<span class="number">0x03</span>,<span class="number">0x35</span>,<span class="number">0x05</span>,<span class="number">0x26</span>,<span class="number">0x39</span>,<span class="number">0x63</span>,<span class="number">0x49</span>,</span><br><span class="line"><span class="number">0x62</span>,<span class="number">0x0E</span>,<span class="number">0x54</span>,<span class="number">0x04</span>,<span class="number">0x3D</span>,<span class="number">0x2B</span>,<span class="number">0x30</span>,<span class="number">0x4C</span>,<span class="number">0x48</span>,<span class="number">0x05</span>,</span><br><span class="line"><span class="number">0x4A</span>,<span class="number">0x35</span>,<span class="number">0x14</span>,<span class="number">0x05</span>,<span class="number">0x28</span>,<span class="number">0x57</span>,<span class="number">0x05</span>,<span class="number">0x26</span>,<span class="number">0x18</span>,<span class="number">0x24</span>,</span><br><span class="line"><span class="number">0x22</span>,<span class="number">0x5E</span>,<span class="number">0x15</span>,<span class="number">0x4B</span>,<span class="number">0x54</span>,<span class="number">0x3E</span>,<span class="number">0x19</span>,<span class="number">0x42</span>,<span class="number">0x46</span>,<span class="number">0x1F</span>,</span><br><span class="line"><span class="number">0x44</span>,<span class="number">0x25</span>,<span class="number">0x32</span>,<span class="number">0x25</span>,<span class="number">0x14</span>,<span class="number">0x1C</span>,<span class="number">0x01</span>,<span class="number">0x18</span>,<span class="number">0x17</span>,<span class="number">0x4B</span>,</span><br><span class="line"><span class="number">0x0C</span>,<span class="number">0x3F</span>,<span class="number">0x42</span>,<span class="number">0x5C</span>,<span class="number">0x14</span>,<span class="number">0x30</span>,<span class="number">0x33</span>,<span class="number">0x15</span>,<span class="number">0x23</span>,<span class="number">0x45</span>,</span><br><span class="line"><span class="number">0x19</span>,<span class="number">0x4E</span>,<span class="number">0x2F</span>,<span class="number">0x20</span>,<span class="number">0x3B</span>,<span class="number">0x49</span>,<span class="number">0x1F</span>,<span class="number">0x23</span>,<span class="number">0x52</span>,<span class="number">0x24</span>,</span><br><span class="line"><span class="number">0x44</span>,<span class="number">0x3D</span>,<span class="number">0x0F</span>,<span class="number">0x2B</span>,<span class="number">0x4D</span>,<span class="number">0x1C</span>,<span class="number">0x18</span>,<span class="number">0x5F</span>,<span class="number">0x45</span>,<span class="number">0x2D</span>,</span><br><span class="line"><span class="number">0x19</span>,<span class="number">0x16</span>,<span class="number">0x08</span>,<span class="number">0x61</span>,<span class="number">0x1B</span>,<span class="number">0x40</span>,<span class="number">0x29</span>,<span class="number">0x3F</span>,<span class="number">0x30</span>,<span class="number">0x51</span>,</span><br><span class="line"><span class="number">0x30</span>,<span class="number">0x1D</span>,<span class="number">0x0E</span>,<span class="number">0x54</span>,<span class="number">0x3C</span>,<span class="number">0x2C</span>,<span class="number">0x5C</span>,<span class="number">0x5F</span>,<span class="number">0x3E</span>,<span class="number">0x22</span>,</span><br><span class="line"><span class="number">0x49</span>,<span class="number">0x34</span>,<span class="number">0x37</span>,<span class="number">0x47</span>,<span class="number">0x14</span>,<span class="number">0x4B</span>,<span class="number">0x16</span>,<span class="number">0x17</span>,<span class="number">0x0B</span>,<span class="number">0x35</span>,</span><br><span class="line"><span class="number">0x31</span>,<span class="number">0x39</span>,<span class="number">0x0C</span>,<span class="number">0x4C</span>,<span class="number">0x25</span>,<span class="number">0x14</span>,<span class="number">0x59</span>,<span class="number">0x38</span>,<span class="number">0x30</span>,<span class="number">0x29</span>,</span><br><span class="line"><span class="number">0x37</span>,<span class="number">0x5E</span>,<span class="number">0x38</span>,<span class="number">0x2A</span>,<span class="number">0x05</span>,<span class="number">0x44</span>,<span class="number">0x11</span>,<span class="number">0x39</span>,<span class="number">0x02</span>,<span class="number">0x1C</span>,</span><br><span class="line"><span class="number">0x0F</span>,<span class="number">0x34</span>,<span class="number">0x54</span>,<span class="number">0x50</span>,<span class="number">0x4B</span>,<span class="number">0x2F</span>,<span class="number">0x0F</span>,<span class="number">0x64</span>,<span class="number">0x42</span>,<span class="number">0x26</span>,</span><br><span class="line"><span class="number">0x3D</span>,<span class="number">0x35</span>,<span class="number">0x4C</span>,<span class="number">0x3D</span>,<span class="number">0x57</span>,<span class="number">0x33</span>,<span class="number">0x17</span>,<span class="number">0x22</span>,<span class="number">0x38</span>,<span class="number">0x3A</span>,</span><br><span class="line"><span class="number">0x45</span>,<span class="number">0x62</span>,<span class="number">0x4C</span>,<span class="number">0x2A</span>,<span class="number">0x29</span>,<span class="number">0x4E</span>,<span class="number">0x2C</span>,<span class="number">0x52</span>,<span class="number">0x11</span>,<span class="number">0x17</span>,</span><br><span class="line"><span class="number">0x30</span>,<span class="number">0x0D</span>,<span class="number">0x5C</span>,<span class="number">0x18</span>,<span class="number">0x21</span>,<span class="number">0x60</span>,<span class="number">0x42</span>,<span class="number">0x07</span>,<span class="number">0x4C</span>,<span class="number">0x50</span>,</span><br><span class="line"><span class="number">0x1C</span>,<span class="number">0x22</span>,<span class="number">0x36</span>,<span class="number">0x30</span>,<span class="number">0x53</span>,<span class="number">0x3F</span>,<span class="number">0x02</span>,<span class="number">0x2D</span>,<span class="number">0x39</span>,<span class="number">0x2E</span>,</span><br><span class="line"><span class="number">0x5C</span>,<span class="number">0x3C</span>,<span class="number">0x0F</span>,<span class="number">0x0E</span>,<span class="number">0x5F</span>,<span class="number">0x37</span>,<span class="number">0x42</span>,<span class="number">0x13</span>,<span class="number">0x4E</span>,<span class="number">0x54</span>,</span><br><span class="line"><span class="number">0x59</span>,<span class="number">0x5F</span>,<span class="number">0x09</span>,<span class="number">0x06</span>,<span class="number">0x4D</span>,<span class="number">0x62</span>,<span class="number">0x23</span>,<span class="number">0x4E</span>,<span class="number">0x15</span>,<span class="number">0x1A</span>,</span><br><span class="line"><span class="number">0x1F</span>,<span class="number">0x35</span>,<span class="number">0x49</span>,<span class="number">0x2E</span>,<span class="number">0x43</span>,<span class="number">0x3E</span>,<span class="number">0x3A</span>,<span class="number">0x5A</span>,<span class="number">0x3C</span>,<span class="number">0x0B</span>,</span><br><span class="line"><span class="number">0x4C</span>,<span class="number">0x29</span>,<span class="number">0x41</span>,<span class="number">0x1B</span>,<span class="number">0x5E</span>,<span class="number">0x62</span>,<span class="number">0x10</span>,<span class="number">0x5A</span>,<span class="number">0x5D</span>,<span class="number">0x3D</span>,</span><br><span class="line"><span class="number">0x52</span>,<span class="number">0x61</span>,<span class="number">0x0C</span>,<span class="number">0x50</span>,<span class="number">0x4F</span>,<span class="number">0x37</span>,<span class="number">0x3B</span>,<span class="number">0x63</span>,<span class="number">0x25</span>,<span class="number">0x04</span>,</span><br><span class="line"><span class="number">0x3B</span>,<span class="number">0x2C</span>,<span class="number">0x18</span>,<span class="number">0x54</span>,<span class="number">0x04</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> input, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">input ^= random_list[i * <span class="number">5</span>];</span><br><span class="line">input += random_list[i * <span class="number">5</span> + <span class="number">1</span>];</span><br><span class="line">input *= random_list[i * <span class="number">5</span> + <span class="number">2</span>];</span><br><span class="line">input -= random_list[i * <span class="number">5</span> + <span class="number">3</span>];</span><br><span class="line">input %= <span class="number">66666</span>;</span><br><span class="line"><span class="keyword">return</span> input &amp; <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">brute</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">59</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">32</span>; j &lt; <span class="number">133</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (encode(j, i) == enflag[i]) &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; (<span class="keyword">char</span>)j ;</span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">brute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag是TSCTF-J{cRaCK_sMC_ls_S0_eA2Y_AnD_i_B3iLeVE_y0u_CAN_ALLKILL}</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TSCTFJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年逆向题目复现</title>
      <link href="/2021/11/23/ctf-2021/"/>
      <url>/2021/11/23/ctf-2021/</url>
      
        <content type="html"><![CDATA[<h2 id="D3CTF"><a href="#D3CTF" class="headerlink" title="D3CTF"></a>D3CTF</h2><h3 id="jumpjump"><a href="#jumpjump" class="headerlink" title="jumpjump"></a>jumpjump</h3><p>没什么好说的，两次异或简单运算就出了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enc = [<span class="number">0x09</span>,<span class="number">0x0B</span>,<span class="number">0x06</span>,<span class="number">0x5A</span>,<span class="number">0x5B</span>,<span class="number">0x0A</span>,<span class="number">0x54</span>,<span class="number">0x05</span>,<span class="number">0x4D</span>,<span class="number">0x57</span>,</span><br><span class="line">       <span class="number">0x56</span>,<span class="number">0x54</span>,<span class="number">0x0B</span>,<span class="number">0x4D</span>,<span class="number">0x54</span>,<span class="number">0x09</span>,<span class="number">0x55</span>,<span class="number">0x40</span>,<span class="number">0x4D</span>,<span class="number">0x09</span>,</span><br><span class="line">       <span class="number">0x06</span>,<span class="number">0x59</span>,<span class="number">0x0B</span>,<span class="number">0x4D</span>,<span class="number">0x55</span>,<span class="number">0x54</span>,<span class="number">0x58</span>,<span class="number">0x57</span>,<span class="number">0x5B</span>,<span class="number">0x09</span>,</span><br><span class="line">       <span class="number">0x0B</span>,<span class="number">0x40</span>,<span class="number">0x05</span>,<span class="number">0x0A</span>,<span class="number">0x05</span>,<span class="number">0x09</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">36</span>):</span><br><span class="line">    print(chr(((enc[i]^<span class="number">0x33</span>)<span class="number">-4</span>)^<span class="number">0x57</span>),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment">#acf23b4e-764c-4a58-af1c-54073ac8ebea</span></span><br></pre></td></tr></table></figure><h3 id="ancient"><a href="#ancient" class="headerlink" title="ancient"></a>ancient</h3>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2021年逆向题目复现</title>
      <link href="/2021/11/23/il2cpp-crack/"/>
      <url>/2021/11/23/il2cpp-crack/</url>
      
        <content type="html"><![CDATA[<h2 id="il2cpp"><a href="#il2cpp" class="headerlink" title="il2cpp"></a>il2cpp</h2>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> il2cpp </tag>
            
            <tag> unity </tag>
            
            <tag> 游戏破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓逆向学习</title>
      <link href="/2021/05/26/android/"/>
      <url>/2021/05/26/android/</url>
      
        <content type="html"><![CDATA[<h1 id="ADB的一些指令"><a href="#ADB的一些指令" class="headerlink" title="ADB的一些指令"></a>ADB的一些指令</h1><p>参考这个文章<a href="https://blog.csdn.net/ezconn/article/details/85682916">https://blog.csdn.net/ezconn/article/details/85682916</a>，这里只写一些常用指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">adb conncet ip:port            //例如mumu是127.0.0.1:7555</span><br><span class="line">adb shell                      //命令行</span><br><span class="line">adb push/ adb pull             //传输文件</span><br><span class="line">adb forward tcp:port tcp:port  //端口转发</span><br><span class="line">adb install xxx.apk            //安装apk</span><br></pre></td></tr></table></figure><h1 id="IDA-动态调试"><a href="#IDA-动态调试" class="headerlink" title="IDA 动态调试"></a>IDA 动态调试</h1><ol><li>先adb shell运行android_sever</li><li>由于软件会一进入就加载so，</li></ol><h1 id="Smali语法"><a href="#Smali语法" class="headerlink" title="Smali语法"></a>Smali语法</h1><p>参考<a href="https://blog.csdn.net/lixpjita39/article/details/75193833">https://blog.csdn.net/lixpjita39/article/details/75193833</a><br>​</p>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TSCTF 2021 Writeup by sakura</title>
      <link href="/2021/05/23/tsctf-2021/"/>
      <url>/2021/05/23/tsctf-2021/</url>
      
        <content type="html"><![CDATA[<h2 id="Android签到题re1-zip"><a href="#Android签到题re1-zip" class="headerlink" title="Android签到题re1.zip"></a>Android签到题<a href="re1.zip">re1.zip</a></h2><p>可以看出是动态加载dex<br><img src="/2021/05/23/tsctf-2021/upload_785c5365aed77c40eceb16f33d9a9534.png"><br>网上查到该dex加载路径，用虚拟机找到该文件<br><img src="/2021/05/23/tsctf-2021/upload_2e2dfe04bfe0ae6c09446d9203d7caee.png"><br>关键加密函数<br><img src="/2021/05/23/tsctf-2021/upload_40f049f4f3d38f8ecbcb5ba14aa94ab3.png"><br>爆破解出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">tmp1 = [ <span class="number">147</span>, <span class="number">219</span>, <span class="number">146</span>, <span class="number">143</span>, <span class="number">240</span>, <span class="number">200</span>, <span class="string">&#x27;f&#x27;</span>, <span class="number">136</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">196</span>, <span class="string">&#x27;&gt;&#x27;</span>, <span class="number">254</span>, <span class="number">189</span>, <span class="string">&#x27;s&#x27;</span>, <span class="number">253</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;~&#x27;</span>, <span class="number">252</span>, <span class="number">135</span>, <span class="string">&#x27; &#x27;</span>, <span class="number">128</span>, <span class="number">3</span>, <span class="number">226</span>, <span class="number">17</span>, <span class="number">142</span>, <span class="number">254</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>, <span class="number">155</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="number">4</span>, <span class="string">&#x27;:&#x27;</span>, <span class="number">199</span>, <span class="number">223</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="number">184</span>, <span class="string">&#x27;~&#x27;</span>, <span class="string">&#x27;L&#x27;</span>]</span><br><span class="line">enflag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(tmp1)):</span><br><span class="line">    <span class="keyword">if</span> type(tmp1[i])==str: enflag.append(ord(tmp1[i]))</span><br><span class="line">    <span class="keyword">else</span>: enflag.append(tmp1[i])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">flag</span>):</span></span><br><span class="line">    cArr = [<span class="number">183</span>,<span class="number">232</span>,<span class="number">151</span>,<span class="number">64</span>,<span class="number">46</span>,<span class="number">200</span>,<span class="number">155</span>,<span class="number">10</span>,<span class="number">44</span>,<span class="number">138</span>,<span class="number">221</span>,<span class="number">76</span>,<span class="number">147</span>,<span class="number">99</span>,<span class="number">163</span>,<span class="number">226</span>,<span class="number">137</span>,<span class="number">102</span>,<span class="number">236</span>,<span class="number">39</span>,<span class="number">216</span>,<span class="number">35</span>,<span class="number">238</span>,<span class="number">55</span>,<span class="number">222</span>,<span class="number">78</span>,<span class="number">234</span>,<span class="number">164</span>,<span class="number">211</span>,<span class="number">179</span>,<span class="number">184</span>,<span class="number">122</span>,<span class="number">24</span>,<span class="number">241</span>,<span class="number">157</span>,<span class="number">48</span>,<span class="number">153</span>,<span class="number">49</span>,<span class="number">186</span>,<span class="number">15</span>,<span class="number">75</span>,<span class="number">62</span>,<span class="number">152</span>,<span class="number">37</span>,<span class="number">1</span>,<span class="number">243</span>,<span class="number">106</span>,<span class="number">38</span>,<span class="number">119</span>,<span class="number">86</span>,<span class="number">112</span>,<span class="number">140</span>,<span class="number">107</span>,<span class="number">167</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">118</span>,<span class="number">150</span>,<span class="number">199</span>,<span class="number">182</span>,<span class="number">156</span>,<span class="number">117</span>,<span class="number">79</span>,<span class="number">2</span>,<span class="number">170</span>,<span class="number">228</span>,<span class="number">63</span>,<span class="number">214</span>,<span class="number">28</span>,<span class="number">133</span>,<span class="number">253</span>,<span class="number">123</span>,<span class="number">12</span>,<span class="number">237</span>,<span class="number">154</span>,<span class="number">89</span>,<span class="number">61</span>,<span class="number">127</span>,<span class="number">189</span>,<span class="number">5</span>,<span class="number">130</span>,<span class="number">105</span>,<span class="number">30</span>,<span class="number">190</span>,<span class="number">93</span>,<span class="number">7</span>,<span class="number">206</span>,<span class="number">145</span>,<span class="number">172</span>,<span class="number">176</span>,<span class="number">247</span>,<span class="number">3</span>,<span class="number">111</span>,<span class="number">134</span>,<span class="number">66</span>,<span class="number">169</span>,<span class="number">26</span>,<span class="number">204</span>,<span class="number">174</span>,<span class="number">173</span>,<span class="number">27</span>,<span class="number">36</span>,<span class="number">50</span>,<span class="number">72</span>,<span class="number">71</span>,<span class="number">103</span>,<span class="number">42</span>,<span class="number">65</span>,<span class="number">29</span>,<span class="number">168</span>,<span class="number">92</span>,<span class="number">131</span>,<span class="number">143</span>,<span class="number">53</span>,<span class="number">19</span>,<span class="number">18</span>,<span class="number">240</span>,<span class="number">171</span>,<span class="number">148</span>,<span class="number">175</span>,<span class="number">159</span>,<span class="number">0</span>,<span class="number">60</span>,<span class="number">11</span>,<span class="number">43</span>,<span class="number">165</span>,<span class="number">17</span>,<span class="number">51</span>,<span class="number">244</span>,<span class="number">248</span>,<span class="number">224</span>,<span class="number">121</span>,<span class="number">77</span>,<span class="number">13</span>,<span class="number">215</span>,<span class="number">210</span>,<span class="number">205</span>,<span class="number">166</span>,<span class="number">81</span>,<span class="number">85</span>,<span class="number">229</span>,<span class="number">162</span>,<span class="number">54</span>,<span class="number">197</span>,<span class="number">201</span>,<span class="number">45</span>,<span class="number">194</span>,<span class="number">144</span>,<span class="number">97</span>,<span class="number">80</span>,<span class="number">96</span>,<span class="number">231</span>,<span class="number">68</span>,<span class="number">239</span>,<span class="number">32</span>,<span class="number">52</span>,<span class="number">25</span>,<span class="number">83</span>,<span class="number">242</span>,<span class="number">67</span>,<span class="number">198</span>,<span class="number">124</span>,<span class="number">90</span>,<span class="number">230</span>,<span class="number">132</span>,<span class="number">225</span>,<span class="number">185</span>,<span class="number">110</span>,<span class="number">98</span>,<span class="number">135</span>,<span class="number">8</span>,<span class="number">47</span>,<span class="number">219</span>,<span class="number">203</span>,<span class="number">142</span>,<span class="number">59</span>,<span class="number">227</span>,<span class="number">195</span>,<span class="number">146</span>,<span class="number">233</span>,<span class="number">58</span>,<span class="number">115</span>,<span class="number">113</span>,<span class="number">116</span>,<span class="number">178</span>,<span class="number">217</span>,<span class="number">252</span>,<span class="number">213</span>,<span class="number">95</span>,<span class="number">202</span>,<span class="number">223</span>,<span class="number">188</span>,<span class="number">20</span>,<span class="number">22</span>,<span class="number">69</span>,<span class="number">250</span>,<span class="number">208</span>,<span class="number">23</span>,<span class="number">57</span>,<span class="number">218</span>,<span class="number">84</span>,<span class="number">245</span>,<span class="number">136</span>,<span class="number">91</span>,<span class="number">180</span>,<span class="number">181</span>,<span class="number">56</span>,<span class="number">187</span>,<span class="number">220</span>,<span class="number">41</span>,<span class="number">40</span>,<span class="number">120</span>,<span class="number">114</span>,<span class="number">160</span>,<span class="number">34</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">141</span>,<span class="number">177</span>,<span class="number">149</span>,<span class="number">251</span>,<span class="number">212</span>,<span class="number">94</span>,<span class="number">87</span>,<span class="number">191</span>,<span class="number">14</span>,<span class="number">125</span>,<span class="number">192</span>,<span class="number">255</span>,<span class="number">88</span>,<span class="number">139</span>,<span class="number">249</span>,<span class="number">82</span>,<span class="number">193</span>,<span class="number">21</span>,<span class="number">74</span>,<span class="number">73</span>,<span class="number">126</span>,<span class="number">235</span>,<span class="number">207</span>,<span class="number">158</span>,<span class="number">109</span>,<span class="number">254</span>,<span class="number">31</span>,<span class="number">129</span>,<span class="number">104</span>,<span class="number">70</span>,<span class="number">246</span>,<span class="number">196</span>,<span class="number">100</span>,<span class="number">6</span>,<span class="number">128</span>,<span class="number">209</span>,<span class="number">161</span>,<span class="number">16</span>,<span class="number">33</span>]    </span><br><span class="line">    cArr3 = [<span class="number">0</span>]*<span class="number">43</span></span><br><span class="line">    i3 = <span class="number">0</span>;</span><br><span class="line">    i4 = <span class="number">0</span>;</span><br><span class="line">    str_len = <span class="number">43</span></span><br><span class="line">    <span class="keyword">for</span> i5 <span class="keyword">in</span> range(str_len):</span><br><span class="line">        i3 = (i3 + <span class="number">1</span>) &amp; <span class="number">255</span></span><br><span class="line">        i4 = (i4 + cArr[i3]) &amp; <span class="number">255</span></span><br><span class="line">        cArr[i3] = cArr[i3] ^ cArr[i4]</span><br><span class="line">        cArr[i4] = cArr[i4] ^ cArr[i3]</span><br><span class="line">        cArr[i3] = cArr[i3] ^ cArr[i4]</span><br><span class="line">        cArr3[i5] = cArr[(cArr[i3] + cArr[i4]) &amp; <span class="number">255</span>] ^ flag[i5]</span><br><span class="line">    <span class="keyword">return</span> cArr3</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">global</span> enflag</span><br><span class="line">    flag = [<span class="number">0</span>]*<span class="number">43</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        flag[i] = j+<span class="number">32</span></span><br><span class="line">        <span class="keyword">if</span> enflag[i] == encode(flag)[i]: </span><br><span class="line">            print(chr(flag[i]),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">43</span>):</span><br><span class="line">    brute(i)</span><br><span class="line"><span class="comment">#TSCTF&#123;44a526be-0f5c-4e99-88e6-3d7eac912391&#125;</span></span><br></pre></td></tr></table></figure><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>关注公众号回复即可</p><h2 id="问卷"><a href="#问卷" class="headerlink" title="问卷"></a>问卷</h2><p>填写问卷即可</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言读取BMP格式图片并修改保存</title>
      <link href="/2021/05/10/bmp/"/>
      <url>/2021/05/10/bmp/</url>
      
        <content type="html"><![CDATA[<p>朋友之前请教我BMP图片格式的问题，网上查了查参考这个<a href="https://blog.csdn.net/u013066730/article/details/82625158">https://blog.csdn.net/u013066730/article/details/82625158</a><br>刚好学习了一波，代码如下（其实准确来讲这个是c++代码，但除了用到了cout，其他都与c一致）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">BYTE b;</span><br><span class="line">BYTE g;</span><br><span class="line">BYTE r;</span><br><span class="line">&#125;RGB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">BYTE b;</span><br><span class="line">BYTE g;</span><br><span class="line">BYTE r;</span><br><span class="line">BYTE a;</span><br><span class="line">&#125;RGBA;</span><br><span class="line"></span><br><span class="line"><span class="function">RGBA <span class="title">imgOpr32</span><span class="params">(RGBA a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RGBA b;</span><br><span class="line">b.b = <span class="number">255</span> - a.b;</span><br><span class="line">b.g = <span class="number">255</span> - a.g;</span><br><span class="line">b.r = <span class="number">255</span> - a.r;</span><br><span class="line">b.a = a.a;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">RGB <span class="title">imgOpr24</span><span class="params">(RGB a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RGB b;</span><br><span class="line">b.b = <span class="number">255</span> - a.b;</span><br><span class="line">b.g = <span class="number">255</span> - a.g;</span><br><span class="line">b.r = <span class="number">255</span> - a.r;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BITMAPFILEHEADER fileHeader;</span><br><span class="line">BITMAPINFOHEADER infoHeader;</span><br><span class="line">FILE* pfin = fopen(<span class="string">&quot;./test2_32.bmp&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">FILE* pfout = fopen(<span class="string">&quot;./test3.bmp&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line"><span class="comment">//Read the Bitmap file header;  </span></span><br><span class="line">fread(&amp;fileHeader, <span class="keyword">sizeof</span>(BITMAPFILEHEADER), <span class="number">1</span>, pfin);</span><br><span class="line"><span class="comment">//Read the Bitmap info header;  </span></span><br><span class="line">fread(&amp;infoHeader, <span class="keyword">sizeof</span>(BITMAPINFOHEADER), <span class="number">1</span>, pfin);</span><br><span class="line"><span class="comment">//Define variable of Bitmap;</span></span><br><span class="line"><span class="keyword">int</span> ImageHeight = infoHeader.biHeight;</span><br><span class="line"><span class="keyword">int</span> ImageWidth = infoHeader.biWidth;</span><br><span class="line"><span class="keyword">int</span> BitsPerPixel = infoHeader.biBitCount;</span><br><span class="line"><span class="comment">//Calculate </span></span><br><span class="line"><span class="keyword">int</span> LineByteCnt = (((ImageWidth * infoHeader.biBitCount) + <span class="number">31</span>) &gt;&gt; <span class="number">5</span>) &lt;&lt; <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> ImageDataSize = LineByteCnt * ImageHeight;</span><br><span class="line"><span class="keyword">int</span> PaddingSize = <span class="number">4</span> - ((ImageWidth * BitsPerPixel) &gt;&gt; <span class="number">3</span>) &amp; <span class="number">3</span>;</span><br><span class="line">BYTE *pad = <span class="keyword">new</span> BYTE[PaddingSize];</span><br><span class="line"><span class="keyword">int</span> PixelCnt = ImageHeight * ImageWidth;</span><br><span class="line"><span class="comment">//Check BitsPerPixel</span></span><br><span class="line"><span class="keyword">if</span> (BitsPerPixel != <span class="number">24</span> &amp;&amp; BitsPerPixel != <span class="number">32</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;此程序不支持非24位且非32位的BMP图片&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (BitsPerPixel == <span class="number">32</span>) &#123;</span><br><span class="line"><span class="comment">//Read Bitmp</span></span><br><span class="line">RGBA *img = <span class="keyword">new</span> RGBA[PixelCnt];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ImageHeight; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ImageWidth; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> index = i * ImageWidth + j;</span><br><span class="line">fread(&amp;img[index], <span class="keyword">sizeof</span>(RGBA), <span class="number">1</span>, pfin);</span><br><span class="line">img[index] = imgOpr32(img[index]); <span class="comment">//反色运算</span></span><br><span class="line">&#125;</span><br><span class="line">fread(pad, <span class="number">1</span>, PaddingSize, pfin);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将修改后的图片保存到文件   </span></span><br><span class="line">fwrite(&amp;fileHeader, <span class="keyword">sizeof</span>(fileHeader), <span class="number">1</span>, pfout);</span><br><span class="line">fwrite(&amp;infoHeader, <span class="keyword">sizeof</span>(infoHeader), <span class="number">1</span>, pfout);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ImageHeight; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ImageWidth; j++)</span><br><span class="line">fwrite(&amp;img[i * ImageWidth + j], <span class="keyword">sizeof</span>(RGBA), <span class="number">1</span>, pfout);</span><br><span class="line">fwrite(pad, <span class="number">1</span>, PaddingSize, pfout);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (BitsPerPixel == <span class="number">24</span>) &#123;</span><br><span class="line"><span class="comment">//Read Bitmp</span></span><br><span class="line">RGB *img = <span class="keyword">new</span> RGB[PixelCnt];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ImageHeight; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ImageWidth; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> index = i * ImageWidth + j;</span><br><span class="line">fread(&amp;img[index], <span class="keyword">sizeof</span>(RGB), <span class="number">1</span>, pfin);</span><br><span class="line">img[index] = imgOpr24(img[index]); <span class="comment">//反色运算</span></span><br><span class="line">&#125;</span><br><span class="line">fread(pad, <span class="number">1</span>, PaddingSize, pfin);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将修改后的图片保存到文件   </span></span><br><span class="line">fwrite(&amp;fileHeader, <span class="keyword">sizeof</span>(fileHeader), <span class="number">1</span>, pfout);</span><br><span class="line">fwrite(&amp;infoHeader, <span class="keyword">sizeof</span>(infoHeader), <span class="number">1</span>, pfout);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ImageHeight; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ImageWidth; j++)</span><br><span class="line">fwrite(&amp;img[i * ImageWidth + j], <span class="keyword">sizeof</span>(RGB), <span class="number">1</span>, pfout);</span><br><span class="line">fwrite(pad, <span class="number">1</span>, PaddingSize, pfout);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//End</span></span><br><span class="line">fclose(pfin);</span><br><span class="line">fclose(pfout);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>原图（左），反色后（右）<br><img src="/2021/05/10/bmp/1620622770522-e3eeaff7-9eae-4865-8bd4-0f80f27cd44a.png" alt="image.png">     <img src="/2021/05/10/bmp/1620622808216-cc8e688a-929e-41cd-a1fc-ab981a908a78.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现命令行显示图片</title>
      <link href="/2021/05/10/pic-console/"/>
      <url>/2021/05/10/pic-console/</url>
      
        <content type="html"><![CDATA[<h1 id="加载本地图片"><a href="#加载本地图片" class="headerlink" title="加载本地图片"></a>加载本地图片</h1><p>参考了<a href="https://kc.kexinshe.com/t/81443">https://kc.kexinshe.com/t/81443</a>文章</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 隐藏光标</span></span><br><span class="line">CONSOLE_CURSOR_INFO curinfo = &#123; <span class="keyword">sizeof</span> curinfo, FALSE &#125;;</span><br><span class="line">SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;curinfo);</span><br><span class="line"><span class="comment">// 获取控制台窗口句柄</span></span><br><span class="line">HWND hwnd = GetForegroundWindow();</span><br><span class="line"><span class="comment">// 获取绘图句柄</span></span><br><span class="line">HDC hdc = GetDC(hwnd);</span><br><span class="line"><span class="comment">//获取客户区大小</span></span><br><span class="line">RECT rc; GetClientRect(hwnd, &amp;rc);</span><br><span class="line"><span class="comment">// 循环绘图</span></span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 选择TrueType字体</span></span><br><span class="line">SelectObject(hdc, GetStockObject(DEFAULT_GUI_FONT));</span><br><span class="line"><span class="comment">// 加载本地HBITMAP</span></span><br><span class="line">HBITMAP hbm = (HBITMAP)LoadImage(<span class="literal">NULL</span>, <span class="string">&quot;pic2.bmp&quot;</span>, IMAGE_BITMAP, <span class="number">0</span>, <span class="number">0</span>, LR_LOADFROMFILE);</span><br><span class="line"><span class="comment">// 缓冲绘图句柄，将hbm存入句柄中</span></span><br><span class="line">        HDC buffer = CreateCompatibleDC(<span class="literal">NULL</span>); SelectObject(buffer, hbm);</span><br><span class="line">        <span class="comment">// 获取图片大小</span></span><br><span class="line">BITMAP bitmapInfo; GetObject(hbm, <span class="keyword">sizeof</span>(BITMAP),&amp;bitmapInfo);</span><br><span class="line">        <span class="comment">// 把hbm画到命令行中</span></span><br><span class="line">BitBlt(hdc, <span class="number">0</span>, <span class="number">0</span>, bitmapInfo.bmWidth, bitmapInfo.bmHeight, buffer, <span class="number">0</span>, <span class="number">0</span>, SRCCOPY);</span><br><span class="line">        <span class="comment">//释放图片空间，否则内存占用空间非常大</span></span><br><span class="line">        DeleteObject(hbm);</span><br><span class="line"><span class="comment">// 刷新频率10Hz</span></span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 释放绘图句柄并清空命令列表</span></span><br><span class="line">ReleaseDC(hwnd, hdc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/10/pic-console/1620620807203-e927994a-7d6b-4941-a728-f4ac4f00cd4e.png" alt="image.png"></p><h1 id="将像素点转HBitmap并画图"><a href="#将像素点转HBitmap并画图" class="headerlink" title="将像素点转HBitmap并画图"></a>将像素点转HBitmap并画图</h1><p>参考这个<a href="https://stackoverflow.com/questions/15930528/how-to-convert-an-array-of-pixels-to-hbitmap">https://stackoverflow.com/questions/15930528/how-to-convert-an-array-of-pixels-to-hbitmap</a>，把生成的HBitmap用上面的方法画图即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HBITMAP <span class="title">LoadPic</span><span class="params">(HDC hdc)</span> </span>&#123;</span><br><span class="line">BITMAPINFOHEADER bmih;</span><br><span class="line">bmih.biSize = <span class="keyword">sizeof</span>(BITMAPINFOHEADER);</span><br><span class="line">bmih.biWidth = <span class="number">540</span>;</span><br><span class="line">bmih.biHeight = <span class="number">541</span>;</span><br><span class="line">bmih.biPlanes = <span class="number">1</span>;</span><br><span class="line">bmih.biBitCount = <span class="number">24</span>;</span><br><span class="line">bmih.biCompression = BI_RGB;</span><br><span class="line">bmih.biSizeImage = <span class="number">0</span>;</span><br><span class="line">bmih.biXPelsPerMeter = <span class="number">10</span>;</span><br><span class="line">bmih.biYPelsPerMeter = <span class="number">10</span>;</span><br><span class="line">bmih.biClrUsed = <span class="number">0</span>;</span><br><span class="line">bmih.biClrImportant = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">BITMAPINFO dbmi;</span><br><span class="line">ZeroMemory(&amp;dbmi, <span class="keyword">sizeof</span>(dbmi));</span><br><span class="line">dbmi.bmiHeader = bmih;</span><br><span class="line">dbmi.bmiColors-&gt;rgbBlue = <span class="number">0</span>;</span><br><span class="line">dbmi.bmiColors-&gt;rgbGreen = <span class="number">0</span>;</span><br><span class="line">dbmi.bmiColors-&gt;rgbRed = <span class="number">0</span>;</span><br><span class="line">dbmi.bmiColors-&gt;rgbReserved = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span>* bits = (<span class="keyword">void</span>*)&amp;(imgData[<span class="number">0</span>]);<span class="comment">//BMP图片像素点，注意是BGR格式并非RGB</span></span><br><span class="line">HBITMAP hBitmap = CreateDIBSection(hdc, &amp;dbmi, DIB_RGB_COLORS, &amp;bits, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">memcpy</span>(bits, imgData, <span class="keyword">sizeof</span>(imgData));</span><br><span class="line"><span class="keyword">return</span> hBitmap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//记得调用完此函数后要释放HBITMAP的空间，否则内存占用非常大</span></span><br><span class="line"><span class="comment">//DeleteObject(hbm);</span></span><br></pre></td></tr></table></figure><p>若对BMP读写有问题可以参考我的另外一篇文章<br><a href="https://www.yuque.com/jameshoi/default/bmp">https://www.yuque.com/jameshoi/default/bmp</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSTC 2021逆向部分</title>
      <link href="/2021/05/05/cstc-2021/"/>
      <url>/2021/05/05/cstc-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="free-flagfree-flag-zip"><a href="#free-flagfree-flag-zip" class="headerlink" title="free_flagfree_flag.zip"></a>free_flag<a href="free_flag.zip">free_flag.zip</a></h1><p>签到题，异或一下得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">enflag = [</span><br><span class="line">  <span class="number">0x78</span>, <span class="number">0x64</span>, <span class="number">0x3F</span>, <span class="number">0x53</span>, <span class="number">0x6D</span>, <span class="number">0x79</span>, <span class="number">0x78</span>, <span class="number">0x64</span>, <span class="number">0x62</span>, <span class="number">0x3F</span>, </span><br><span class="line">  <span class="number">0x78</span>, <span class="number">0x3D</span>, <span class="number">0x6F</span>, <span class="number">0x38</span>, <span class="number">0x3D</span>, <span class="number">0x78</span>, <span class="number">0x3C</span>, <span class="number">0x62</span>, <span class="number">0x53</span>, <span class="number">0x39</span>, </span><br><span class="line">  <span class="number">0x75</span>, <span class="number">0x39</span>, <span class="number">0x78</span>, <span class="number">0x3F</span>, <span class="number">0x61</span>, <span class="number">0x53</span>, <span class="number">0x3D</span>, <span class="number">0x39</span>, <span class="number">0x53</span>, <span class="number">0x62</span>, </span><br><span class="line">  <span class="number">0x3C</span>, <span class="number">0x78</span>, <span class="number">0x53</span>, <span class="number">0x3C</span>, <span class="number">0x39</span>, <span class="number">0x53</span>, <span class="number">0x39</span>, <span class="number">0x3F</span>, <span class="number">0x6F</span>, <span class="number">0x79</span>, </span><br><span class="line">  <span class="number">0x7E</span>, <span class="number">0x3F</span>, <span class="number">0x0A</span></span><br><span class="line">]</span><br><span class="line">cipher = <span class="number">0xC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> enflag:</span><br><span class="line">    print(chr(s^cipher),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="crackme-crackme-zip"><a href="#crackme-crackme-zip" class="headerlink" title="crackme crackme.zip"></a>crackme <a href="crackme.zip">crackme.zip</a></h1><p>upx脱壳。用户名填入crackme，在判断位置断点，并让程序防止跳转，每次断点查看v17变量<br><img src="/2021/05/05/cstc-2021/upload_a18365a64b9e25a6a39d1a5a7bf73720.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag = [<span class="number">0x58</span>,<span class="number">0x42</span>,<span class="number">0x49</span>,<span class="number">0x48</span>,<span class="number">0x44</span>,<span class="number">0x43</span>,<span class="number">0x45</span>,<span class="number">0x43</span>,<span class="number">0x53</span>,<span class="number">0x42</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    print(chr(i),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>md5 32位小写</p><h1 id="ckck-zip"><a href="#ckck-zip" class="headerlink" title="ckck.zip"></a>ck<a href="ck.zip">ck.zip</a></h1><p>题目说猜猜是什么加密算法，F5后已经可以盲猜一波base64换表<br><img src="/2021/05/05/cstc-2021/upload_4b3cf01ee63507d009737a3e6a4fe512.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">my_base64table = <span class="string">&quot;,.0fgWV#`/1Heox$~\&quot;2dity%_;j3csz^+@&#123;4bKrA&amp;=&#125;5laqB*-[69mpC()]78ndu&quot;</span></span><br><span class="line">std_base64table =<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">s = <span class="string">&quot;ef\&quot;^sVK@3r@Ke4e6%6`)&quot;</span></span><br><span class="line">s = s.translate(str.maketrans(my_base64table,std_base64table))</span><br><span class="line">print(base64.b64decode(s))</span><br><span class="line"><span class="comment">#04_tianhe233_29</span></span><br></pre></td></tr></table></figure><h1 id="mazemaze-zip"><a href="#mazemaze-zip" class="headerlink" title="mazemaze.zip"></a>maze<a href="maze.zip">maze.zip</a></h1><p>迷宫题，ssddwdwdddssaasasaaassddddwdds<br>即flag{545d406061561f34247732d50c56ef0d}<br><img src="/2021/05/05/cstc-2021/upload_373c1e4fb68633051d9ac8724f5df73a.png"></p><h1 id="ALL-IN-ALLALL-IN-ALL-zip"><a href="#ALL-IN-ALLALL-IN-ALL-zip" class="headerlink" title="ALL_IN_ALLALL_IN_ALL.zip"></a>ALL_IN_ALL<a href="ALL_IN_ALL.zip">ALL_IN_ALL.zip</a></h1><p>用frida-dexdump把壳脱掉，再用jeb打开dex，发现校验函数是checkSN<br><img src="/2021/05/05/cstc-2021/upload_6eb608d3746ba7a7bb6e044d406ff709.png"><br>因为没jeb付费版本…无奈只能用jadx，发现就是判断输入就是userName和md5<br><img src="/2021/05/05/cstc-2021/upload_cb308ced04cabbade1bc18d1ed65fba1.png"><br>通过用反射大师找到userName为HuMen<br><img src="/2021/05/05/cstc-2021/upload_a74f468405dafcfb53de01b1ce713201.png"><br>得到flag为flag{749fef1ed34917cc23376494813053b2}</p><h1 id="randrand-zip"><a href="#randrand-zip" class="headerlink" title="randrand.zip"></a>rand<a href="rand.zip">rand.zip</a></h1><p>有空再补</p><h1 id="DEXDEX-zip"><a href="#DEXDEX-zip" class="headerlink" title="DEXDEX.zip"></a>DEX<a href="DEX.zip">DEX.zip</a></h1><p>参考这篇文章学习dex格式<a href="https://www.cnblogs.com/dengkaiting/p/11069351.html">https://www.cnblogs.com/dengkaiting/p/11069351.html</a>，用jeb等软件打不开这个dex文件。用010editor进行分析，打开后有模板可以直接用，注意到有四个零值，前两个零值是正常的，但后面两个需要输入method和class的offset(偏移)，题目将这里修改为0了所以软件打不开。<br><img src="/2021/05/05/cstc-2021/1622016540354-a791ca00-0a85-44ea-9c4d-cae5c33f41a6.png" alt="image.png"><br>010editor已经将method和class的存储位置帮你找到了，在模板那里点一下即可跳转，如下图的method偏移为1561C，然后修改dex header的偏移即可（注意这里是小端序，若不知道是小端序还是大端序的话建议转10进制后直接在010的模板里修改）<br><img src="/2021/05/05/cstc-2021/1622016731342-0626029a-deb8-460e-810e-9832ae230955.png" alt="image.png"><br>用jeb打开dex进行分析，可见直接运行一次出flag<br><img src="/2021/05/05/cstc-2021/1622016844528-b6a21eed-7d50-4ba9-a9ba-2bd8382f605b.png" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span>[] x = <span class="string">&quot;dd2940c04462b4dd7c450528835cca15&quot;</span>.toCharArray();</span><br><span class="line">x[<span class="number">2</span>] = (<span class="keyword">char</span>)(x[<span class="number">2</span>] + x[<span class="number">3</span>] - <span class="number">50</span>);</span><br><span class="line">x[<span class="number">4</span>] = (<span class="keyword">char</span>)(x[<span class="number">2</span>] + x[<span class="number">5</span>] - <span class="number">0x30</span>);</span><br><span class="line">x[<span class="number">30</span>] = (<span class="keyword">char</span>)(x[<span class="number">0x1F</span>] + x[<span class="number">9</span>] - <span class="number">0x30</span>);</span><br><span class="line">x[<span class="number">14</span>] = (<span class="keyword">char</span>)(x[<span class="number">27</span>] + x[<span class="number">28</span>] - <span class="number">97</span>);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">16</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">char</span> a = x[<span class="number">0x1F</span> - i];</span><br><span class="line">x[<span class="number">0x1F</span> - i] = x[i];</span><br><span class="line">x[i] = a;</span><br><span class="line">&#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;flag&#123;&quot;</span> + String.valueOf(x) + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag{59acc538825054c7de4b26440c0999dd}</p><h1 id="motionmotion-zip"><a href="#motionmotion-zip" class="headerlink" title="motionmotion.zip"></a>motion<a href="motion.zip">motion.zip</a></h1><p>同上</p><h1 id="keygenkeygen-zip"><a href="#keygenkeygen-zip" class="headerlink" title="keygenkeygen.zip"></a>keygen<a href="keygen.zip">keygen.zip</a></h1><p>同上<br>​</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF 2021 Real_CHECKIN</title>
      <link href="/2021/04/12/mrctf-2021-checkin/"/>
      <url>/2021/04/12/mrctf-2021-checkin/</url>
      
        <content type="html"><![CDATA[<p>【文章转载于安全客<a href="https://www.anquanke.com/post/id/237793">https://www.anquanke.com/post/id/237793</a>】<br>题如其名，真的是签到题，出题的时候调试符号都没去。扔进PEID可以看出是upx壳，脱壳后用ida f5就能看到基本上和源码完全一致的伪代码。<br><img src="/2021/04/12/mrctf-2021-checkin/1618194436322-519efc4b-3272-40f3-a9ff-6bff06987e8a.png" alt="image.png"><br>直接由函数名知道是base64编码，进入base64_encode函数并查看alphabet_map，可以发现base64换表了，用python写个脚本就得到flag了<br><img src="/2021/04/12/mrctf-2021-checkin/1618194527887-f09eda4a-6437-4094-94f4-b10f4a66a795.png" alt="image.png"><br><img src="/2021/04/12/mrctf-2021-checkin/1618194608323-1d6b4e39-422e-4679-84db-683e96b59f65.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">my_base64table = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/&quot;</span></span><br><span class="line">std_base64table =<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">s = <span class="string">&quot;tvjdvez7D0vSyZbnzv90mf9nuKnurL8YBZiXiseHFq==&quot;</span></span><br><span class="line">s = s.translate(str.maketrans(my_base64table,std_base64table))</span><br><span class="line">print(base64.b64decode(s))</span><br><span class="line"><span class="comment"># MRCTF&#123;wElc0Me_t0_MRCTF_2o21!!!&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF-2021 writeup</title>
      <link href="/2021/04/11/mrctf-2021/"/>
      <url>/2021/04/11/mrctf-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>师傅们别骂了，我抽空一定努力好好学</p><h1 id="Dynamic-Debug-dynamic-debug"><a href="#Dynamic-Debug-dynamic-debug" class="headerlink" title="Dynamic Debug dynamic_debug"></a>Dynamic Debug <a href="dynamic_debug">dynamic_debug</a></h1><p>动调进去发现是TEA加密，调试一下发现是DWORD类型，写脚本就出了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(DWORD* v, DWORD* k)</span> </span>&#123;</span><br><span class="line">DWORD v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>], sum = <span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">DWORD delta = <span class="number">0x9E3779B9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">DWORD k0 = k[<span class="number">0</span>], k1 = k[<span class="number">1</span>], k2 = k[<span class="number">2</span>], k3 = k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + k3) ^ (v0 + sum) ^ ((v0 &lt;&lt; <span class="number">4</span>) + k2);</span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + k1) ^ (v1 + sum) ^ ((v1 &lt;&lt; <span class="number">4</span>) + k0);</span><br><span class="line">sum -= delta;</span><br><span class="line">&#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">v[<span class="number">0</span>] = v0; v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> enflag[<span class="number">32</span>] = &#123;</span><br><span class="line"><span class="number">0x99</span>, <span class="number">0xA1</span>, <span class="number">0x85</span>, <span class="number">0x55</span>, <span class="number">0x68</span>, <span class="number">0x5D</span>, <span class="number">0x82</span>, <span class="number">0x7E</span>, <span class="number">0x39</span>, <span class="number">0x00</span>,</span><br><span class="line"><span class="number">0x4D</span>, <span class="number">0x94</span>, <span class="number">0x43</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x71</span>, <span class="number">0x06</span>, <span class="number">0x43</span>, <span class="number">0x51</span>, <span class="number">0x6A</span>,</span><br><span class="line"><span class="number">0x00</span>, <span class="number">0xAD</span>, <span class="number">0x14</span>, <span class="number">0x4B</span>, <span class="number">0x3F</span>, <span class="number">0x0D</span>, <span class="number">0xD2</span>, <span class="number">0x64</span>, <span class="number">0x15</span>, <span class="number">0xDB</span>,</span><br><span class="line"><span class="number">0x37</span>, <span class="number">0x9F</span></span><br><span class="line">&#125;;</span><br><span class="line">DWORD key[<span class="number">4</span>] = &#123; <span class="number">0x6B696C69</span>,<span class="number">0x79645F65</span>,<span class="number">0x696D616E</span>,<span class="number">0x67626463</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">decrypt((DWORD*)&amp;enflag[i*<span class="number">8</span>], key);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, enflag[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MRCTF{Dyn4m1c_d3buG_1s_a_ki11eR}</p><h1 id="EzGame-EzGame-zip"><a href="#EzGame-EzGame-zip" class="headerlink" title="EzGame EzGame.zip"></a>EzGame <a href="EzGame.zip">EzGame.zip</a></h1><p>ce修改然后手玩过去的（师傅别骂了，有空我再复现一下<br><img src="/2021/04/11/mrctf-2021/1618150486966-a71c2eb2-e33b-4500-be1e-bc1423ca357b.png" alt="image.png"><br>发现key是用来最后解密flag的，且每吃到一次token key就进行一次加密<br>游戏需满足以下条件才能获取flag：</p><ol><li>吃到刚刚好105颗token（一共有106颗，不能吃多，否则key会进行多一次加密）</li><li>找到外星人（修改角色x,y坐标，大约在5,-10的位置，需要角色碰到外星人）</li><li>吃到曲奇（3,4,5都不需手玩，直接修改为1和0即可）</li><li>成功回家（通关）</li><li>死亡次数为零</li></ol><p><img src="/2021/04/11/mrctf-2021/1618150548033-439afbe6-00ee-4edf-aa62-db7b724c6eaf.png" alt="QQ图片20210411221527.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向笔记</title>
      <link href="/2021/03/30/note/"/>
      <url>/2021/03/30/note/</url>
      
        <content type="html"><![CDATA[<p>这里记录一些我自己真实场景下的逆向内容</p><h1 id="拷贝漫画去广告"><a href="#拷贝漫画去广告" class="headerlink" title="拷贝漫画去广告"></a>拷贝漫画去广告</h1><p>首先这个软件太过分了…虽说我很同意帮你看点广告赞助你的服务器费用，但每次进去都加载十几秒的广告，有时候再进去之后还要考30秒以上的广告，属实是有点过分。<br>（新版本好像广告变少了）<br>​</p><p>Android Killer大法好，因为软件是一进去就开始加载广告的，定位启动软件的位置，找到有Ads的关键字，直接删除smali重新打包即可<br><img src="/2021/03/30/note/1622020875906-441d1ba0-7cda-4450-a46d-4121293449a5.png" alt="image.png"><br>删除前<br><img src="/2021/03/30/note/1622020912536-ac6877f7-c84f-4d8f-adcb-3140446f9b6a.png" alt="image.png"><br>删除后<br><img src="/2021/03/30/note/1622021001816-3782470e-86ca-4b94-b588-656e537aa8d9.png" alt="image.png"><br>进去发现确实是没广告了，但点击漫画之后发现有一大截空白部分，怀疑应该是广告内容。由于是用flutter框架写的，用反射大师没定位到这个空白位置的控件，那没办法了…先将就用着，等哪天真受不了了就学习一波flutter逆向<br><img src="/2021/03/30/note/1622021356408-ada6ca30-1bae-4744-9813-4e7c0227f838.png" alt="image.png"><br>​</p><h1 id="动漫之家去广告"><a href="#动漫之家去广告" class="headerlink" title="动漫之家去广告"></a>动漫之家去广告</h1><p>有360壳，由于不是做ctf题目，所以还得考虑打包apk怎么打包回去<br><img src="/2021/03/30/note/1622021197387-b0a0c749-6e1e-4f35-a6e2-6f50e9aa2c9a.png" alt="image.png"><br>参考<a href="https://zhuanlan.zhihu.com/p/28810334">https://zhuanlan.zhihu.com/p/28810334</a>这个文章<br>待续…<br>​</p><h1 id="伤心跳棋"><a href="#伤心跳棋" class="headerlink" title="伤心跳棋"></a>伤心跳棋</h1><p>先来看看这个软件界面，显示未注册，并且就算修改电脑思考时间也只能是1秒。</p><p><img src="/2021/03/30/note/image-20220629235220091.png" alt="image-20220629235220091"></p><p>这个软件非常老，我找不到那个年代的upx脱壳，自己手脱会导致软件功能用不了（我修不好），不过脱壳后可以找到软件验证的位置。</p><p><img src="/2021/03/30/note/image-20210722124327765.png" alt="image-20210722124327765"></p><p>要绕过注册验证很简单，软件在地址408727，40860B，402181有三次的验证，全部跳过即可。很玄学的地方是402181不能用修改字节码的方式打补丁，否则会导致另外两处的验证就算成功功能也还是用不了</p><p><img src="/2021/03/30/note/image-20220629235426220.png" alt="image-20220629235426220"></p><p><img src="/2021/03/30/note/image-20220629235658365.png" alt="image-20220629235658365"></p><p><img src="/2021/03/30/note/image-20210722125427440.png" alt="image-20210722125427440"></p><p>所以上图这个if最后打补丁是用异常中断补丁修改eip成功的，可能软件有校验字节码是否被修改？最后附上补丁数据</p><p><img src="/2021/03/30/note/image-20210722125854700.png" alt="image-20210722125854700"></p><p>下图是选择<code>修改EIP(NOP)</code></p><p><img src="/2021/03/30/note/image-20210722125924095.png" alt="image-20210722125924095"></p><p>破解后左上角没有显示未注册，而且可以修改电脑思考时间</p><img src="/2021/03/30/note/image-20210722130114886.png" alt="image-20210722130114886" style="zoom:75%;"><p>软件注册算法有定位到，但我懒得看了，交给其他大家自己练手试试吧。</p><p><a href="sxtq.exe">伤心跳棋原软件</a> <a href="sxtq%E5%92%8C%E8%B0%90%E8%A1%A5%E4%B8%81.exe">伤心跳棋破解补丁</a></p><h1 id="蜜瓜阅读器提取图片"><a href="#蜜瓜阅读器提取图片" class="headerlink" title="蜜瓜阅读器提取图片"></a>蜜瓜阅读器提取图片</h1><p>这个阅读器的文件是自定义的，一个文件里有很多张图片，貌似还用到了RSA解密，需要账户密码登录正确才能解密。<br>但假如只是登录后把图片提取出来难度并不大，软件有随机基址，<strong>RVA 0x23FDF</strong>是实例化<strong>QPixmap</strong>，堆栈中有图片裸数据指针和长度。</p><p><img src="/2021/03/30/note/1.png" alt="1"></p><p>上图12DAC7为图片字节长度，1E511020是图片数据指针，下图可以看出明显的jpg格式文件头</p><p><img src="/2021/03/30/note/2.png" alt="2"></p><p>这个项目已经是1年前写的了，当时还不会hook顺便利用这个机会学习了一波。在RVA 0x23FDF hook一下即可导出图片</p><p><img src="/2021/03/30/note/3.png" alt="3"></p><p>上图明显堆栈不平衡，我也不理解我之前为什么能成功hhh</p><p><a href="https://github.com/JamesHoi/MelonBooksDumper">Github源码</a> <a href="https://github.com/JamesHoi/MelonBooksDumper/releases">下载地址</a><br><img src="https://github.com/JamesHoi/MelonBooksDumper/blob/main/test.gif?raw=true" alt="test gif"></p><h1 id="NVLMaker"><a href="#NVLMaker" class="headerlink" title="NVLMaker"></a>NVLMaker</h1><h1 id="Krisp"><a href="#Krisp" class="headerlink" title="Krisp"></a>Krisp</h1><p>c#写的，无壳无混淆，dnspy找到定位关键验证部分即可。过于简单，这里不再阐述</p>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF 三月 逆向</title>
      <link href="/2021/03/27/dasctf-2021-03/"/>
      <url>/2021/03/27/dasctf-2021-03/</url>
      
        <content type="html"><![CDATA[<h1 id="drinkSomeTea-drinkSomeTea的附件-zip"><a href="#drinkSomeTea-drinkSomeTea的附件-zip" class="headerlink" title="drinkSomeTea drinkSomeTea的附件.zip"></a>drinkSomeTea <a href="drinkSomeTea%E7%9A%84%E9%99%84%E4%BB%B6.zip">drinkSomeTea的附件.zip</a></h1><p>看到题目盲猜一波TEA加密，果不其然。之前没好好学，这次至少会做题了，之后有空要好好再看看详细的加密流程。附件给了个tea.png.out，即需要解密图片。<br>32位exe，无壳<br><img src="/2021/03/27/dasctf-2021-03/1616848097038-02fff004-ac11-4a64-b153-f011afb64fec.png" alt="image.png"><br>在一开始的sub_401000函数里面，应该是判断是不是调试器（我没仔细看），用调试器的时候会退出程序，直接把call sub_401000 nop掉即可。<br><img src="/2021/03/27/dasctf-2021-03/1616847245371-f690b22b-eb35-472f-b101-801360db52c5.png" alt="image.png"><br>应该是一个加密函数，点进去看发现加花了<br><img src="/2021/03/27/dasctf-2021-03/1616847425525-257970be-f093-48ad-aa31-d7f7a1f068cf.png" alt="image.png"><br>去花，Create Function，F5，发现是TEA加密，关于TEA加密脚本可以参考<a href="https://ctf-wiki.org/reverse/identify-encode-encryption/introduction/">这个</a><br><img src="/2021/03/27/dasctf-2021-03/1616847475073-d4a5223c-642f-4eb2-8f3f-dc93731a9718.png" alt="image.png"><img src="/2021/03/27/dasctf-2021-03/1616847519953-895289f8-fa7c-4d9d-9d19-a6f2cf171cc0.png" alt="image.png"><br>魔改一下TEA加密即可，要注意的是，加密的时候需要用int指针（保留符号位），否则加密/解密出来的数据会不对。（我在这个地方调了很久，照着还原一次加密过程，动调的时候发现加密出来的数据怎么都不对）<br>最后用解密函数解密tea.png.out，脚本如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">int</span>* v, <span class="keyword">uint32_t</span>* k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>], sum = <span class="number">0</span>, i;           <span class="comment">/* set up */</span></span><br><span class="line"><span class="keyword">int</span> delta = <span class="number">0x61C88647</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line"><span class="keyword">int</span> k0 = k[<span class="number">0</span>], k1 = k[<span class="number">1</span>], k2 = k[<span class="number">2</span>], k3 = k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       <span class="comment">/* basic cycle start */</span></span><br><span class="line">sum -= delta;</span><br><span class="line">v0 += ((v1 &gt;&gt; <span class="number">5</span>) + k1) ^ (v1 + sum) ^ ((v1 &lt;&lt; <span class="number">4</span>) + k0);</span><br><span class="line">v1 += ((v0 &gt;&gt; <span class="number">5</span>) + k3) ^ (v0 + sum) ^ ((v0 &lt;&lt; <span class="number">4</span>) + k2);</span><br><span class="line">&#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">v[<span class="number">0</span>] = v0; v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">int</span>* v, <span class="keyword">uint32_t</span>* k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> v0 = v[<span class="number">0</span>], v1 = v[<span class="number">1</span>], sum = <span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line"><span class="keyword">int</span> delta = <span class="number">0x61C88647</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line"><span class="keyword">int</span> k0 = k[<span class="number">0</span>], k1 = k[<span class="number">1</span>], k2 = k[<span class="number">2</span>], k3 = k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">v1 -= ((v0 &gt;&gt; <span class="number">5</span>) + k3) ^ (v0 + sum) ^ ((v0 &lt;&lt; <span class="number">4</span>) + k2);</span><br><span class="line">v0 -= ((v1 &gt;&gt; <span class="number">5</span>) + k1) ^ (v1 + sum) ^ ((v1 &lt;&lt; <span class="number">4</span>) + k0);</span><br><span class="line">sum += delta;</span><br><span class="line">&#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">v[<span class="number">0</span>] = v0; v[<span class="number">1</span>] = v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD key[<span class="number">4</span>] = &#123; <span class="number">0x67616C66</span>, <span class="number">0x6B61667B</span>, <span class="number">0x6C665F65</span>, <span class="number">0x7D216761</span> &#125;;</span><br><span class="line">HANDLE file = CreateFileA(<span class="string">&quot;tea.png.out&quot;</span>, <span class="number">0xC0000000</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3u</span>, <span class="number">0x80</span>u, <span class="number">0</span>);</span><br><span class="line">HANDLE v4 = file;</span><br><span class="line"><span class="keyword">char</span> *v7;</span><br><span class="line">DWORD v8;</span><br><span class="line">HANDLE v9;</span><br><span class="line"><span class="keyword">void</span> *v10;</span><br><span class="line">DWORD NumberOfBytesRead;</span><br><span class="line">DWORD NumberOfBytesWritten;</span><br><span class="line">DWORD v6 = GetFileSize(file, <span class="number">0</span>);</span><br><span class="line">DWORD dword_409988[<span class="number">15000</span>];</span><br><span class="line"><span class="keyword">if</span> (v6 &lt; <span class="number">0xEA60</span>)</span><br><span class="line">&#123;</span><br><span class="line">SetFilePointer(v4, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">NumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">ReadFile(v4, &amp;dword_409988, v6, &amp;NumberOfBytesRead, <span class="number">0</span>);</span><br><span class="line">CloseHandle(v4);</span><br><span class="line"><span class="keyword">if</span> (v6 &gt;&gt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">v7 = (<span class="keyword">char</span> *)&amp;dword_409988;</span><br><span class="line">v8 = v6 &gt;&gt; <span class="number">3</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">decrypt((<span class="keyword">int</span> *)v7, (<span class="keyword">uint32_t</span> *)key);</span><br><span class="line">v7 += <span class="number">8</span>;</span><br><span class="line">--v8;</span><br><span class="line">&#125; <span class="keyword">while</span> (v8);</span><br><span class="line">&#125;</span><br><span class="line">v9 = CreateFileA(<span class="string">&quot;tea.png&quot;</span>, <span class="number">0xC0000000</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2u</span>, <span class="number">0x80</span>u, <span class="number">0</span>);</span><br><span class="line">v10 = v9;</span><br><span class="line">NumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">WriteFile(v9, &amp;dword_409988, v6, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">CloseHandle(v10);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到flag: DASCTF{09066cbb91df55502e6fdc83bf84cf45}<br><img src="/2021/03/27/dasctf-2021-03/1616847940486-c6a8c2f5-acd4-42e3-95db-5bd69d84a67a.png" alt="tea.png"></p><h1 id="Enjoyit-1-Enjoyit-1的附件-zip"><a href="#Enjoyit-1-Enjoyit-1的附件-zip" class="headerlink" title="Enjoyit-1 Enjoyit-1的附件.zip"></a>Enjoyit-1 <a href="Enjoyit-1%E7%9A%84%E9%99%84%E4%BB%B6.zip">Enjoyit-1的附件.zip</a></h1><p>Exeinfope发现是c#写的，用dnspy32位打开<br><img src="/2021/03/27/dasctf-2021-03/1616848148617-abdda112-c18c-4314-b056-556d4e37da8a.png" alt="image.png"><br>一开始定位加密位置的时候想了一会，emm我最后用Console.WriteLine定位的，其实好像点开就行…<br><img src="/2021/03/27/dasctf-2021-03/1616848246812-518dca29-e3c3-445c-b4fc-c6bcb92ca28e.png" alt="image.png"><br>发现应该先是base64验证，中间有Thread.Sleep，然后最后直接输出flag<br><img src="/2021/03/27/dasctf-2021-03/1616848274349-c421f54f-162e-49c9-a683-444553e6c016.png" alt="image.png"><br>打开class b的定义，base64换表了<br><img src="/2021/03/27/dasctf-2021-03/1616848399394-6c36d8ac-592c-49ea-ae7a-ab028ab35e57.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">my_base64table = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">std_base64table =<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">s = <span class="string">&quot;yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=&quot;</span></span><br><span class="line">s = s.translate(str.maketrans(my_base64table,std_base64table))</span><br><span class="line">print(base64.b64decode(s))</span><br><span class="line"><span class="comment">#combustible_oolong_tea_plz</span></span><br></pre></td></tr></table></figure><p>然后直接一次性把全部定义都复制到自己新建的一个c#程序，运行一次就跑出来了（而且当然要注释掉Thread.Sleep）<br>（代码篇幅有点长，抱歉）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">b</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// Token: 0x06000006 RID: 6 RVA: 0x00002234 File Offset: 0x00000434</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">B</span>(<span class="params"><span class="keyword">string</span> A_0</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A_0.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (A_0[i] &lt; <span class="string">&#x27;_&#x27;</span> || A_0[i] &gt; <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">&quot;Sorry,we don&#x27;t have this tea&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Token: 0x06000007 RID: 7 RVA: 0x00002278 File Offset: 0x00000478</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">c</span>(<span class="params"><span class="keyword">string</span> A_0</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">string</span> text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">int</span> num = A_0.Length / <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">int</span> i;</span><br><span class="line">                <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">byte</span> index = Convert.ToByte((<span class="keyword">int</span>)(<span class="string">&#x27;?&#x27;</span> &amp; A_0[i * <span class="number">3</span>] &gt;&gt; <span class="number">2</span>));</span><br><span class="line">                    <span class="keyword">byte</span> index2 = Convert.ToByte((<span class="keyword">int</span>)((<span class="keyword">int</span>)(A_0[i * <span class="number">3</span>] &amp; <span class="string">&#x27;\u0003&#x27;</span>) &lt;&lt; <span class="number">4</span> | A_0[<span class="number">1</span> + i * <span class="number">3</span>] &gt;&gt; <span class="number">4</span>));</span><br><span class="line">                    <span class="keyword">byte</span> index3 = Convert.ToByte((<span class="keyword">int</span>)((<span class="keyword">int</span>)(A_0[<span class="number">1</span> + i * <span class="number">3</span>] &amp; <span class="string">&#x27;\u000f&#x27;</span>) &lt;&lt; <span class="number">2</span> | A_0[<span class="number">2</span> + i * <span class="number">3</span>] &gt;&gt; <span class="number">6</span>));</span><br><span class="line">                    <span class="keyword">byte</span> index4 = Convert.ToByte((<span class="keyword">int</span>)(A_0[<span class="number">2</span> + i * <span class="number">3</span>] &amp; <span class="string">&#x27;?&#x27;</span>));</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index2].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index3].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index4].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i * <span class="number">3</span> &lt; A_0.Length)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">byte</span> index = Convert.ToByte((<span class="keyword">int</span>)(<span class="string">&#x27;?&#x27;</span> &amp; A_0[i * <span class="number">3</span>] &gt;&gt; <span class="number">2</span>));</span><br><span class="line">                    <span class="keyword">byte</span> index2;</span><br><span class="line">                    <span class="keyword">byte</span> index3;</span><br><span class="line">                    <span class="keyword">byte</span> index4;</span><br><span class="line">                    <span class="keyword">if</span> (i * <span class="number">3</span> + <span class="number">1</span> &lt; A_0.Length)</span><br><span class="line">                    &#123;</span><br><span class="line">                        index2 = Convert.ToByte((<span class="keyword">int</span>)((<span class="keyword">int</span>)(A_0[i * <span class="number">3</span>] &amp; <span class="string">&#x27;\u0003&#x27;</span>) &lt;&lt; <span class="number">4</span> | A_0[i * <span class="number">3</span> + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>));</span><br><span class="line">                        index3 = Convert.ToByte((<span class="keyword">int</span>)((<span class="keyword">int</span>)(A_0[i * <span class="number">3</span> + <span class="number">1</span>] &amp; <span class="string">&#x27;\u000f&#x27;</span>) &lt;&lt; <span class="number">2</span>));</span><br><span class="line">                        index4 = <span class="number">64</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        index2 = Convert.ToByte((<span class="keyword">int</span>)((<span class="keyword">int</span>)(A_0[i * <span class="number">3</span>] &amp; <span class="string">&#x27;\u0003&#x27;</span>) &lt;&lt; <span class="number">4</span>));</span><br><span class="line">                        index3 = <span class="number">64</span>;</span><br><span class="line">                        index4 = <span class="number">64</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index2].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index3].ToString();</span><br><span class="line">                    text += <span class="keyword">this</span>.a[(<span class="keyword">int</span>)index4].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> text;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Token: 0x06000008 RID: 8 RVA: 0x00002488 File Offset: 0x00000688</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">B</span>(<span class="params"><span class="keyword">byte</span>[] A_0</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">string</span> text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A_0.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    text += A_0[i].ToString(<span class="string">&quot;x2&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(text);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Token: 0x06000009 RID: 9 RVA: 0x000024C8 File Offset: 0x000006C8</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">B</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">uint</span>[] A_0, <span class="keyword">byte</span>[] A_1</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">uint</span> num = <span class="number">2654435464U</span>;</span><br><span class="line">                <span class="keyword">uint</span> num2 = A_0[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">uint</span> num3 = A_0[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">uint</span> num4 = <span class="number">0U</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    num2 += ((num3 &lt;&lt; <span class="number">4</span> ^ num3 &gt;&gt; <span class="number">5</span>) + num3 ^ num4 + (<span class="keyword">uint</span>)A_1[(<span class="keyword">int</span>)(num4 &amp; <span class="number">3U</span>)]);</span><br><span class="line">                    num4 += num;</span><br><span class="line">                    num3 += ((num2 &lt;&lt; <span class="number">4</span> ^ num2 &gt;&gt; <span class="number">5</span>) + num2 ^ num4 + (<span class="keyword">uint</span>)A_1[(<span class="keyword">int</span>)(num4 &gt;&gt; <span class="number">11</span> &amp; <span class="number">3U</span>)]);</span><br><span class="line">                &#125;</span><br><span class="line">                A_0[<span class="number">0</span>] = num2;</span><br><span class="line">                A_0[<span class="number">1</span>] = num3;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Token: 0x0600000A RID: 10 RVA: 0x00002534 File Offset: 0x00000734</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">c</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">uint</span>[] A_0, <span class="keyword">byte</span>[] A_1</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">uint</span> num = <span class="number">2654435769U</span>;</span><br><span class="line">                <span class="keyword">uint</span> num2 = A_0[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">uint</span> num3 = A_0[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">uint</span> num4 = num * <span class="number">32U</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    num3 -= ((num2 &lt;&lt; <span class="number">4</span> ^ num2 &gt;&gt; <span class="number">5</span>) + num2 ^ num4 + (<span class="keyword">uint</span>)A_1[(<span class="keyword">int</span>)(num4 &gt;&gt; <span class="number">11</span> &amp; <span class="number">3U</span>)]);</span><br><span class="line">                    num4 -= num;</span><br><span class="line">                    num2 -= ((num3 &lt;&lt; <span class="number">4</span> ^ num3 &gt;&gt; <span class="number">5</span>) + num3 ^ num4 + (<span class="keyword">uint</span>)A_1[(<span class="keyword">int</span>)(num4 &amp; <span class="number">3U</span>)]);</span><br><span class="line">                &#125;</span><br><span class="line">                A_0[<span class="number">0</span>] = num2;</span><br><span class="line">                A_0[<span class="number">1</span>] = num3;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Token: 0x04000003 RID: 3</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">string</span> a = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ=&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">byte</span>[] a_ = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">26</span>];</span><br><span class="line">            <span class="keyword">byte</span>[] array = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>];</span><br><span class="line">            <span class="keyword">byte</span>[] array2 = <span class="keyword">new</span> <span class="keyword">byte</span>[]</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="number">2</span>,</span><br><span class="line">            <span class="number">5</span>,</span><br><span class="line">            <span class="number">4</span>,</span><br><span class="line">            <span class="number">13</span>,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            <span class="number">84</span>,</span><br><span class="line">            <span class="number">11</span>,</span><br><span class="line">            <span class="number">4</span>,</span><br><span class="line">            <span class="number">87</span>,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            <span class="number">86</span>,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            <span class="number">80</span>,</span><br><span class="line">            <span class="number">7</span>,</span><br><span class="line">            <span class="number">83</span>,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="number">4</span>,</span><br><span class="line">            <span class="number">83</span>,</span><br><span class="line">            <span class="number">94</span>,</span><br><span class="line">            <span class="number">7</span>,</span><br><span class="line">            <span class="number">84</span>,</span><br><span class="line">            <span class="number">4</span>,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            <span class="number">1</span>,</span><br><span class="line">            <span class="number">83</span>,</span><br><span class="line">            <span class="number">3</span>,</span><br><span class="line">            <span class="number">84</span>,</span><br><span class="line">            <span class="number">6</span>,</span><br><span class="line">            <span class="number">83</span>,</span><br><span class="line">            <span class="number">5</span>,</span><br><span class="line">            <span class="number">80</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">uint</span>[] array3 = <span class="keyword">new</span> <span class="keyword">uint</span>[]</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="number">288U</span>,</span><br><span class="line">            <span class="number">369U</span></span><br><span class="line">            &#125;;</span><br><span class="line">            b b = <span class="keyword">new</span> b();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Welcome to my room, and please enjoy some tea by write what you want in this machine:&quot;</span>);</span><br><span class="line">            <span class="keyword">string</span> text2 = Console.ReadLine();</span><br><span class="line">            <span class="keyword">if</span> (!b.B(text2))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Thread.Sleep(1000000);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (b.c(text2) != <span class="string">&quot;yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Oops&quot;</span>);</span><br><span class="line">                <span class="comment">//Thread.Sleep(1000000);</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;And,wait a second!&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Thread.Sleep(1000);</span></span><br><span class="line">                <span class="comment">//Console.WriteLine(i + 1);</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a_ = Encoding.Default.GetBytes(text2);</span><br><span class="line">            b.B(<span class="keyword">ref</span> array3, a_);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Here is your tea, and flag!&quot;</span>);</span><br><span class="line">            text += array3[<span class="number">0</span>].ToString(<span class="string">&quot;x2&quot;</span>);</span><br><span class="line">            text += array3[<span class="number">1</span>].ToString(<span class="string">&quot;x2&quot;</span>);</span><br><span class="line">            array = Encoding.Default.GetBytes(text);</span><br><span class="line">            Console.Write(<span class="string">&quot;flag&#123;&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">32</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] array4 = array2;</span><br><span class="line">                <span class="keyword">int</span> num = j;</span><br><span class="line">                array4[num] ^= array[j % array.Length];</span><br><span class="line">            &#125;</span><br><span class="line">            Console.Write(Encoding.Default.GetString(array2));</span><br><span class="line">            Console.Write(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入，然后得到flag<br><img src="/2021/03/27/dasctf-2021-03/1616848555623-7b32e7ee-3ecf-4f55-bc38-e932d9ca7020.png" alt="image.png"><br>flag{4645e180540ffa7a67cfa174cde105a2}<br>PS：其实这题可能能直接把flag输出出来，但我没试…flag出来了就行</p><h1 id="replace-replace的附件-zip"><a href="#replace-replace的附件-zip" class="headerlink" title="replace replace的附件.zip"></a>replace <a href="replace%E7%9A%84%E9%99%84%E4%BB%B6.zip">replace的附件.zip</a></h1><p>64位，无壳<br><img src="/2021/03/27/dasctf-2021-03/1616848762654-470cc555-c05e-4c9e-af0a-aa4dd2e6850d.png" alt="image.png"><br>这题一开始难点我预计错了…下次应该好好先把全部函数分析完先。在main可以看出是24位flag，然后sub_401550是验证输入是否为flag格式（即flag{xxxxxx}）<br><img src="/2021/03/27/dasctf-2021-03/1616849267477-0be815c4-956c-41df-b20e-9594ddc3b082.png" alt="image.png"><br>sub_401AE7是假的加密函数，因为之后会在sub_401925再覆盖掉所需要验证的字符串<br><img src="/2021/03/27/dasctf-2021-03/1616849465053-e661c598-2818-4192-a134-071a6bf0bd56.png" alt="image.png"><br>题外话：<br>把这个解出来之后是fakeflag，但其实出题人粗心了，就算这个题目是这个fakeflag，最后也不对，因为有一项是计算出来是f，但没在f前面加零，416f6b116549435c2c<strong>0f</strong>1143<br><img src="/2021/03/27/dasctf-2021-03/1616850009676-31dc94e2-223d-47b9-929d-ddecbe45c46c.png" alt="image.png"><br>再点进sub_401925函数，这里把IsDebuggerPresent hook了，下一次调用IsDebuggerPresent的时候会先调用sub_4015C3<br><img src="/2021/03/27/dasctf-2021-03/1616850225777-cf6343fa-0ec0-4efa-9d59-a4b65c7ebf58.png" alt="image.png"><br>加花了，去花<br><img src="/2021/03/27/dasctf-2021-03/1616850269399-1eb2aa56-4b8a-4759-b963-d5088c4de6b7.png" alt="image.png"><br>sub_4015C3开头把hook脱钩了，然后下面进行加密<br><img src="/2021/03/27/dasctf-2021-03/1616850336268-ec7ece22-b831-453a-b9fa-f2f39fcffcc2.png" alt="image.png"><br>加密后的byte_4080E0再和416f6b116549435c2c0f1143174339023d4d4c0f183e7828做比较<br><img src="/2021/03/27/dasctf-2021-03/1616850465987-c651e396-1415-4dd2-b2b1-8cf8986fdf05.png" alt="image.png"><br>下面来分析一下加密流程，unk_404020是一个128位的数组，赋值给v0，v2[j] = v0[v2[j]]即换对照表，将对应的char值转成128位数组的 char值位置。for循环1到&lt;=5，即换对照表五次<br><img src="/2021/03/27/dasctf-2021-03/1616850641581-3c312331-1602-43bf-a38d-afefc77b6b80.png" alt="image.png"><br>将换表完成的24个数据，分成六组数据，每一组中的每一位数据占八位bit，再用或运算拼一起，即一组数据为24+8=32bits。当中每一组数据当中的从左往右数前八位为flag[i]，再数八位为flag[i+6]，以此类推，循环六次。最后再将每一组合成的32bits用sprintf转成十六进制，即8个字符（两个字符占8bits，八个字符占32bits）<br>按照上述流程逆推即得flag，详细见如下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">enflag = <span class="string">&quot;416f6b11 6549435c 2c0f1143 17433902 3d4d4c0f 183e7828&quot;</span></span><br><span class="line"><span class="comment">#为了方便所以手动分成六组字符串，每组之间加空格</span></span><br><span class="line"></span><br><span class="line">gen_dict = [</span><br><span class="line">    <span class="number">0x80</span>,<span class="number">0x65</span>,<span class="number">0x2F</span>,<span class="number">0x34</span>,<span class="number">0x12</span>,<span class="number">0x37</span>,<span class="number">0x7D</span>,<span class="number">0x40</span>,<span class="number">0x26</span>,<span class="number">0x16</span>,</span><br><span class="line">    <span class="number">0x4B</span>,<span class="number">0x4D</span>,<span class="number">0x55</span>,<span class="number">0x43</span>,<span class="number">0x5C</span>,<span class="number">0x17</span>,<span class="number">0x3F</span>,<span class="number">0x69</span>,<span class="number">0x79</span>,<span class="number">0x53</span>,</span><br><span class="line">    <span class="number">0x18</span>,<span class="number">0x02</span>,<span class="number">0x06</span>,<span class="number">0x61</span>,<span class="number">0x27</span>,<span class="number">0x08</span>,<span class="number">0x49</span>,<span class="number">0x4A</span>,<span class="number">0x64</span>,<span class="number">0x23</span>,</span><br><span class="line">    <span class="number">0x56</span>,<span class="number">0x5B</span>,<span class="number">0x6F</span>,<span class="number">0x11</span>,<span class="number">0x4F</span>,<span class="number">0x14</span>,<span class="number">0x04</span>,<span class="number">0x1E</span>,<span class="number">0x5E</span>,<span class="number">0x2D</span>,</span><br><span class="line">    <span class="number">0x2A</span>,<span class="number">0x32</span>,<span class="number">0x2B</span>,<span class="number">0x6C</span>,<span class="number">0x74</span>,<span class="number">0x09</span>,<span class="number">0x6E</span>,<span class="number">0x42</span>,<span class="number">0x70</span>,<span class="number">0x5A</span>,</span><br><span class="line">    <span class="number">0x71</span>,<span class="number">0x1C</span>,<span class="number">0x7B</span>,<span class="number">0x2C</span>,<span class="number">0x75</span>,<span class="number">0x54</span>,<span class="number">0x30</span>,<span class="number">0x7E</span>,<span class="number">0x5F</span>,<span class="number">0x0E</span>,</span><br><span class="line">    <span class="number">0x01</span>,<span class="number">0x46</span>,<span class="number">0x1D</span>,<span class="number">0x20</span>,<span class="number">0x3C</span>,<span class="number">0x66</span>,<span class="number">0x6B</span>,<span class="number">0x76</span>,<span class="number">0x63</span>,<span class="number">0x47</span>,</span><br><span class="line">    <span class="number">0x6A</span>,<span class="number">0x29</span>,<span class="number">0x25</span>,<span class="number">0x4E</span>,<span class="number">0x31</span>,<span class="number">0x13</span>,<span class="number">0x50</span>,<span class="number">0x51</span>,<span class="number">0x33</span>,<span class="number">0x59</span>,</span><br><span class="line">    <span class="number">0x1A</span>,<span class="number">0x5D</span>,<span class="number">0x44</span>,<span class="number">0x3E</span>,<span class="number">0x28</span>,<span class="number">0x0F</span>,<span class="number">0x19</span>,<span class="number">0x2E</span>,<span class="number">0x05</span>,<span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0x4C</span>,<span class="number">0x3A</span>,<span class="number">0x21</span>,<span class="number">0x45</span>,<span class="number">0x1F</span>,<span class="number">0x38</span>,<span class="number">0x7F</span>,<span class="number">0x57</span>,<span class="number">0x3D</span>,<span class="number">0x1B</span>,</span><br><span class="line">    <span class="number">0x3B</span>,<span class="number">0x24</span>,<span class="number">0x41</span>,<span class="number">0x77</span>,<span class="number">0x6D</span>,<span class="number">0x7A</span>,<span class="number">0x52</span>,<span class="number">0x73</span>,<span class="number">0x07</span>,<span class="number">0x10</span>,</span><br><span class="line">    <span class="number">0x35</span>,<span class="number">0x0A</span>,<span class="number">0x0D</span>,<span class="number">0x03</span>,<span class="number">0x0B</span>,<span class="number">0x48</span>,<span class="number">0x67</span>,<span class="number">0x15</span>,<span class="number">0x78</span>,<span class="number">0x0C</span>,</span><br><span class="line">    <span class="number">0x60</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x22</span>,<span class="number">0x7C</span>,<span class="number">0x58</span>,<span class="number">0x72</span>,<span class="number">0x68</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">flag = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>)]</span><br><span class="line"><span class="comment">#将字符串转成十六进制数</span></span><br><span class="line">data = [int(e,<span class="number">16</span>) <span class="keyword">for</span> e <span class="keyword">in</span> enflag.split(<span class="string">&quot; &quot;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#把合成的数据分开，并保存到相应flag位置</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    flag[i] = ((data[i] &gt;&gt; <span class="number">24</span>)&amp;<span class="number">0xFF</span>)</span><br><span class="line">    flag[i+<span class="number">6</span>] =  ((data[i] &gt;&gt; <span class="number">16</span>)&amp;<span class="number">0xFF</span>)</span><br><span class="line">    flag[i+<span class="number">12</span>] = ((data[i] &gt;&gt; <span class="number">8</span>)&amp;<span class="number">0xFF</span>)</span><br><span class="line">    flag[i+<span class="number">18</span>] = ((data[i])&amp;<span class="number">0xFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#换对照表五次</span></span><br><span class="line">flag = [gen_dict.index(f) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line">flag = [gen_dict.index(f) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line">flag = [gen_dict.index(f) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line">flag = [gen_dict.index(f) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line">flag = [chr(gen_dict.index(f)) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(flag))</span><br></pre></td></tr></table></figure><p>得到flag{Sh1t_you_dec0d3_it}，题目要求最后md5提交<br>最终输入4820904ccb9343f00fb7ddf8acc31e85提交<br><img src="/2021/03/27/dasctf-2021-03/1616851683176-6d240a28-d260-4d88-a8c5-36a31d3949bc.png" alt="image.png"><br>PS: 激动地就要猝死，最后半分钟成功提交flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>用单片机运行HelloWorld</title>
      <link href="/2021/03/22/mcu/"/>
      <url>/2021/03/22/mcu/</url>
      
        <content type="html"><![CDATA[<p>（本文图片较大，建议用电脑查看）<br>（本文前言和介绍篇幅有点长，实际可从”开始”标题开始看）</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>写完上次的“零基础搭建属于自己的博客”一文，我觉得我还是应该写一些科普或者教程，让同学们成功入门，我也顺便可以将我以往的经验总结一下。假如有朋友有想了解的东西，可以找我然后我写一篇文章入门（当然首先我也得会hhh），我擅长的方向大概是：机器人，单片机，网络安全，逆向，编程。</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>入门单片机首先总得了解单片机是什么。单片机普遍存在于我们的一些设备当中，例如台灯，通过编写程序让台灯每按一次按钮就减小亮度。又例如大家可能学过的Arduino，它是一款单片机。可以看出单片机一般和电路结合一起，控制电路量从而控制设备。那么由于一开始的单片机没有设备，能够显示HelloWorld也是比较困难的。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>本文用STM32F407VET6开发板作为示例。需要用到的软件有STM32CubeMX，Keil uVision5，XCOM(串口调试软件)。如何下载软件我还是不写了，本文的重点并不是这个。<br>关于硬件的购买，自行淘宝吧，需要一块stm的单片机，单片机的烧录器，usb转ttl模块<br><img src="/2021/03/22/mcu/1616380047144-ba07c138-dce2-4ec3-859d-259aa9f7d0e6.png" alt="image.png"><br>我自己的烧录器<br><img src="/2021/03/22/mcu/1616396876586-e4f9945c-5d26-498d-878d-05ee16d686dc.png" alt="image.png"><br>由于显示HelloWorld需要用到串口，还需要买usb转ttl模块<br><img src="/2021/03/22/mcu/1616382481989-412d8fad-9c0c-4ef4-a53e-fba73961493b.png" alt="image.png"></p><h1 id="设置项目"><a href="#设置项目" class="headerlink" title="设置项目"></a>设置项目</h1><p>下载好软件后打开STM32CubeMX，点击New Project<br><img src="/2021/03/22/mcu/1616379767406-35f81ea1-b20f-4016-8246-08f379d4c91e.png" alt="image.png"><img src="/2021/03/22/mcu/1616379807099-5b27f864-2aaf-436b-89c1-50eff20723ef.png" alt="image.png"><br>（不同版本软件可能界面不一样，但操作相似）<br>MCU Selector，选择你的型号，详细的型号可以在单片机芯片上看到，又或者问淘宝卖家。例如你是STM32F407VET6型号，那么选择STM32F407VETx，点击Ok<br><img src="/2021/03/22/mcu/1616380160058-2a5935a1-2eff-48e1-ad2a-95ee1e5a4a69.png" alt="image.png"><img src="/2021/03/22/mcu/1616380242987-487fb114-9e5c-4f75-b22b-5c9a41d8c83e.png" alt="image.png"><img src="/2021/03/22/mcu/1616380279108-0aa7b49e-85e9-43a0-b6a1-eaf1b52bbc56.png" alt="image.png"><br>可以看到进入设置界面了，实际上到这一部分基本上你查百度已经有一大堆的教程了，说实话一开始入门不需要理解那么多的原理，先实际操作一遍能搞定再慢慢了解，先跟着教程做一遍吧。<br><img src="/2021/03/22/mcu/1616380542796-50797f52-d046-4d94-8253-209eb6727e9e.png" alt="image.png"><br>RCC设置，选择HSE(外部高速时钟)为Crystal/Ceramic Resonator(晶振/陶瓷谐振器)，串口选择随意一个UART，选择模式Asynchronous，然后可以找到其中的两个口，PA0是UART4_TX，PA1是UART4_RX。RX是接收口，TX是发送口。<br><img src="/2021/03/22/mcu/1616381091747-f436fa1f-e17e-44c3-a4de-699bdcb072ee.png" alt="image.png"></p><h1 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h1><p>点击Project –&gt;Generate Reports或者点击快捷图标生成报告。系统会提示先创建一个工程项目。点击Yes设置工程。<br><img src="/2021/03/22/mcu/1616382102349-18092404-e744-4b07-acf3-4bbd51d25cde.png" alt="image.png"><br>输入工程名，选择工程路径（注意不要出现中文，否则可能出错）。工具链/IDE选择MDK-ARM V5。最后面可以设置堆栈大小，此处默认不作修改。<br><img src="/2021/03/22/mcu/1616382047157-a58d000a-602a-4037-afb9-5bef32653bc5.png" alt="image.png"><br>提示下载固件，点击Yes<br><img src="/2021/03/22/mcu/1616382196987-4ff5dc9a-2b42-4a98-a70d-ab1ddd686f14.png" alt="image.png"><br>按照下图选择，再点击GENERATE CODE生成代码</p><h1 id><a href="#" class="headerlink" title></a><img src="/2021/03/22/mcu/1616385125271-e01b19bb-726b-4c44-923c-0619e355a7f8.png"></h1><p>用Keil打开生成的代码，点击Open Project<br><img src="/2021/03/22/mcu/1616386225359-312fc864-d952-456c-b602-ab46044d7c5c.png" alt="image.png"></p><h1 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h1><p>找到main.c的int main(void)函数里面的while (1)循环，把程序写在里面会不断循环运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> *ch = <span class="string">&quot;HelloWorld&quot;</span>;</span><br><span class="line">    <span class="comment">//因为在cubeMX设置的是UART4，所以是huart4，10为HelloWorld的长度</span></span><br><span class="line">    HAL_UART_Transmit(&amp;huart4, (<span class="keyword">uint8_t</span> *)ch, <span class="number">10</span>, <span class="number">0xffff</span>);</span><br><span class="line">    HAL_Delay(<span class="number">1000</span>);<span class="comment">//停止运行1秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写完代码后点击Build，然后再点Download。但点Download之前当然要先接上烧录器<br><img src="/2021/03/22/mcu/1616386350555-9358f49c-c0bf-48b4-afbe-8fa2b47647be.png" alt="image.png">   <img src="/2021/03/22/mcu/1616386324569-95ff9a32-76da-4db9-9b05-bb138dc01a06.png" alt="image.png"><br>如图，烧录器另一端usb接入电脑<br><img src="/2021/03/22/mcu/1616397194795-3c9ec3df-4704-4c36-84c4-0adf15bb5488.png" alt="image.png"><br>注意：可能不单要接烧录器，需继续按照下面的接线教程接好后才能烧录（因为没有供电给单片机）</p><h1 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h1><p>找到原本cubemx设置好的uart4口，PA0和PA1<br><img src="/2021/03/22/mcu/1616381091747-f436fa1f-e17e-44c3-a4de-699bdcb072ee.png" alt="image.png"><br>红框是PA0和PA1，绿框是电源3.3v和接地<br><img src="/2021/03/22/mcu/1616409770328-013680d8-af97-4b90-b703-90d303b143ad.png" alt="image.png">、<br>将单片机的PA0和PA1按照下图接到usb转ttl小板上，因为单片机的接受(RXD)是另一块的发送(TXD)，所以是反过来接（注意！！尽量接3.3v，若将5v接入单片机很有可能会烧坏单片机）。接好后再将usb转ttl模块usb插到电脑上。<br><img src="/2021/03/22/mcu/1616409885532-c8d83841-7693-49b6-a16f-646c25ce5a5f.png" alt="image.png"><img src="/2021/03/22/mcu/1616411055147-8c59bec7-0fd4-4d26-a6c1-a50991238330.png" alt="image.png"><br>我的最终接线图<br><img src="/2021/03/22/mcu/1616410580589-3f7a09fc-9779-49c2-b95d-cc72fcbe2c96.png" alt="image.png"><br>打开XCOM并选择串口打开即可看到输出，可以看到每1秒会输出一次HelloWorld<br><img src="/2021/03/22/mcu/1616410448708-b2082148-6234-4650-bbb7-dfbdd61696a3.png" alt="image.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总结就先声明一下，其实我也就会的东西不多，若有问题或者错误的地方，希望大家多多反馈，共同进步。<br>其实很多地方的细节都没写出来（真写出来就很长一篇文章了），文章的目的主要还是希望能让大家入门单片机开发。但写完之后我发现我后悔了，这不吃力不讨好吗…最后写完这文章我猜也没几个人跟着做完的，零基础教学的东西下次不写了。<br><img src="/2021/03/22/mcu/1616410863668-f2d60382-c1e9-47e0-9184-ec53b3964111.png" alt="image.png"><br>最后打个广告，欢迎各位来参加MRCTF，同时天璇MERAK战队也欢迎您的加入<br>扩展资料：<br>CTF(Capture The Flag)中文一般译作夺旗赛,在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。参加CTF能增长网络安全知识的同时，也能加深对计算机原理的深层次认识。在这里你不但能和学长交流探讨前沿技术发展，还能收获来自不同专业的小伙伴们。<br><img src="/2021/03/22/mcu/1616645749212-620fab7b-415a-4ba8-a8a1-8a9b912c1ff7.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易公开课下载器 版本更新</title>
      <link href="/2021/03/22/open163-new/"/>
      <url>/2021/03/22/open163-new/</url>
      
        <content type="html"><![CDATA[<h1 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h1><p><a href="https://jameshoi.github.io/2020/03/22/open163-downloader/">之前博客</a><br>原本是用selenium爬虫爬取数据的，但效率实在不高，现在换成直接用requests解析json</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>例如视频页面链接为<a href="https://open.163.com/newview/movie/free?pid=MFHCKB983&amp;mid=MFHCLTO23">https://open.163.com/newview/movie/free?pid=MFHCKB983&amp;mid=MFHCLTO23</a> ，则其对应的视频数据为<a href="https://c.open.163.com/open/mob/movie/list.do?plid=MFHCKB983">https://c.open.163.com/open/mob/movie/list.do?plid=MFHCKB983</a> ，即 将视频链接的pid参数填入到list.do?plid=里<br><a href="https://imgtu.com/i/6ev1T1"><img src="/2021/03/22/open163-new/6ev1T1.png" alt="6ev1T1.png"></a></p><h1 id="软件功能"><a href="#软件功能" class="headerlink" title="软件功能"></a>软件功能</h1><ol><li>可选择多少个视频同时下载（线程个数）</li><li>可选择字幕和影片是否分开</li><li>可选择视频画质（如果原视频可以选择）</li><li>可分集下载，用逗号隔开<br>例如一共有11集，不需要下载第2集和第6集，填1,3-5,7-11<br>下载全部填all，下载当前视频填current<br>若填写课程链接默认下载全部，视频链接默认下载当前视频  </li></ol><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://github.com/JamesHoi/Open163-Downloader/releases">Github发布页</a><br><a href="https://share.weiyun.com/oYfwIX8F">微云下载</a></p><h1 id="软件使用教程"><a href="#软件使用教程" class="headerlink" title="软件使用教程"></a>软件使用教程</h1><p>输入视频页面链接，范例：<a href="https://open.163.com/newview/movie/free?pid=MA32VG4SA&amp;mid=MA35IIC76">https://open.163.com/newview/movie/free?pid=MA32VG4SA&amp;mid=MA35IIC76</a><br><img src="/2021/03/22/open163-new/110079073-9a8da180-7dc3-11eb-9a90-996a2b87d4e7.png" alt="image"></p><p>视频页面<br><a href="https://imgtu.com/i/6eOfmR"><img src="/2021/03/22/open163-new/6eOfmR.png" alt="6eOfmR.png"></a></p><p>目前测试可达到满速<br><a href="https://imgtu.com/i/6eOJfS"><img src="/2021/03/22/open163-new/6eOJfS.png" alt="6eOJfS.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一下自己出的crackme</title>
      <link href="/2021/03/01/crackme/"/>
      <url>/2021/03/01/crackme/</url>
      
        <content type="html"><![CDATA[<p>这题主要考察选手动态调试。扔进exeinfope，32位exe，无壳<br><img src="/2021/03/01/crackme/1614563712306-00178842-0133-4252-a596-d5021573f650.png" alt="image.png"><br>main程序，点进sub_4017D0看<br><img src="/2021/03/01/crackme/1614563854115-e9158532-b289-4f59-8a47-b0ef09142f83.png" alt="image.png"><br>sub_4017D0，可以看出是检测进程名称。找到for之前的汇编，尝试在动调的时候修改eip直接jmp到CloseHandle，又或者是自己patch一下，防止return 1，从而反反调试。<a href="https://blog.csdn.net/hgy413/article/details/50650232">patch教程参考链接</a><br>（留意这里的dword_406120，之后会讲）<br><img src="/2021/03/01/crackme/1614563976473-ad2c7222-b041-4354-8d8d-a30ad7dd973c.png" alt="image.png"><br>sub_401930是个SEH异常反调试，可以参考<a href="https://github.com/alphaSeclab/anti-debug/blob/master/SEH/SEH.cpp">源码</a><br><img src="/2021/03/01/crackme/1614567647164-6b0de686-e6cc-4d7f-8061-174466034ac1.png" alt="image.png"><br>直接查看汇编，参考刚刚上面的源码，反调试的E9刚好起到了花指令的作用，变成了jmp near ptr 8B762D3Ah。在jmp按一下U，在E9下面按c转为代码，然后再把E9 nop掉。<br><img src="/2021/03/01/crackme/1614567820843-61c4c1fd-aa78-44cb-a665-b6fd52d2956a.png" alt="image.png"><img src="/2021/03/01/crackme/1614568243425-456eb18d-76d5-40da-97d8-2284fb1d2960.png" alt="image.png"><br>没红色了那就F5一下，按两下进sub_401960（再留意一下dword_406120）<br><img src="/2021/03/01/crackme/1614568362225-31f557ef-6f5f-4323-89f4-9c576d840f90.png" alt="image.png"><img src="/2021/03/01/crackme/1614568384601-a16ccc1d-ead7-41b0-9c90-fd28868d89b1.png" alt="image.png"><br>返回到主函数的汇编，发现藏起来了一个函数sub_401FB0<br><img src="/2021/03/01/crackme/1614568514488-4d34b422-bb99-45d6-9f89-71f9c2b42c63.png" alt="image.png"><br>又或者用shift+f12找到关键字符，对着Format按一下x键，找到调用的地方，然后再F5一下<br><img src="/2021/03/01/crackme/1614568593168-f7c729a7-1cf0-4af2-92f0-249bbc5482e8.png" alt="image.png"><br>找到了验证函数，先来看_Initialize_parallel_init_info函数<br><img src="/2021/03/01/crackme/1614576325597-04958d6d-73d0-49b6-bab4-6958c3ee921b.png" alt="image.png"><br>发现了NtSetInformationThread，这整个函数是隐藏线程防止调试用的，参考<a href="https://blog.csdn.net/Simon798/article/details/103161482">链接</a>，直接eip修改过就行<br>（再留意一下dword_406120）<br><img src="/2021/03/01/crackme/1614568828118-f0efa094-d2fc-432a-8c16-df1c41f6af7a.png" alt="image.png"><br>再看主函数里面的加密函数sub_401CD0，可看出来应该是做了加密的函数，解密后动态调用<br><img src="/2021/03/01/crackme/1614569721954-11bcd0c7-6a0b-4b16-9830-317ee4dc7054.png" alt="image.png"><img src="/2021/03/01/crackme/1614569920177-194e960e-c991-42dc-b4b1-b4ae700aded3.png" alt="image.png"><br>发现是用之前看到的dword_406120解密的，当反调试函数都过了，让dword_406120+=了21,21,14，即dword_406120(下面改成了unk_406120)为56时才解密成功，从而调用函数。<br>右键Jump in a new hex window -&gt;找到15h右键Edit-&gt;改成38（即十进制56）再右键Apply changes。<br><img src="/2021/03/01/crackme/1614572720788-0cd506f1-dc96-4e53-9150-aa57c4cbd73d.png" alt="image.png"><img src="/2021/03/01/crackme/1614572816936-bedd5cb3-24b9-47c1-b5ea-759810836eaf.png" alt="image.png"><img src="/2021/03/01/crackme/1614572709394-0df59009-0fed-4623-98e8-7a1e71e9c60b.png" alt="image.png"><br>成功解码之后再慢慢步入进加密函数，当中加了花指令，花指令可参考<a href="https://www.anquanke.com/post/id/208682">安全客</a><br><img src="/2021/03/01/crackme/1614572911935-0b60e514-7098-45b8-9d69-6bd914d49ea6.png" alt="image.png"><br>我出题的时候发现有时候jnz没跳转，所以又加了test eax, eax<br>所以整个花指令模式如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">__asm&#123;</span><br><span class="line">test eax, eax</span><br><span class="line">    __emit(<span class="number">0x75</span>) <span class="comment">//jnz $+4</span></span><br><span class="line">    __emit(<span class="number">0x02</span>)</span><br><span class="line">    __emit(<span class="number">0xE9</span>) <span class="comment">//干扰IDA</span></span><br><span class="line">    __emit(<span class="number">0xED</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个花指令和上面是同一个，用的E9，参考上面的做法patch一下，把E9，ED nop掉<br><img src="/2021/03/01/crackme/1614574064298-cb9a354e-81d1-41a7-8c0d-eae3a655314b.png" alt="image.png"><img src="/2021/03/01/crackme/1614574105560-682f8466-95b0-4796-b2d8-e8804cf6d2f8.png" alt="image.png"><br>在最上面的push ebp右键 create function，成功建立函数后就可以F5了，图片这个实际上就是异或运算，都是按位运算，试一下就会发现是异或<br><img src="/2021/03/01/crackme/1614574158392-5561b2aa-74ec-4e7d-aefb-ab393ac477cd.png" alt="image.png"><br>以此类推，发现运算分别为加减乘除异或和取余66666（十六进制0x1046A，小彩蛋），其中除1等于没效果，取余66666还是调用了rand，所以还原加密过程的时候还是要保留<br><img src="/2021/03/01/crackme/1614574477112-f861711e-277d-4c7c-b6e5-79ea13bc21a0.png" alt="image.png"><img src="/2021/03/01/crackme/1614574559255-cec6eafc-0465-4f65-8822-8ed82052ab36.png" alt="image.png"><img src="/2021/03/01/crackme/1614574599222-5c0d3477-8ef1-429b-a07f-422c8bc2de8d.png" alt="image.png"><img src="/2021/03/01/crackme/1614575328975-bb1c6e23-1139-4e4c-8e5f-63b511feaff1.png" alt="image.png"><br>可以看出可以单字节爆破，还原一次加密过程，再爆破就得到flag了（导出加密的数据不细说了，shift+e）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rand100 rand()%100+1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> enflag[] = &#123;</span><br><span class="line">  <span class="number">0x0C</span>,<span class="number">0x17</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x29</span>,<span class="number">0x34</span>,<span class="number">0x0C</span>,<span class="number">0x29</span>,<span class="number">0x28</span>,<span class="number">0xA1</span>,</span><br><span class="line">  <span class="number">0x3A</span>,<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x1D</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0xC3</span>,<span class="number">0xCA</span>,<span class="number">0x10</span>,<span class="number">0x2E</span>,</span><br><span class="line">  <span class="number">0xD3</span>,<span class="number">0x21</span>,<span class="number">0x48</span>,<span class="number">0xA5</span>,<span class="number">0x3A</span>,<span class="number">0x99</span>,<span class="number">0xFB</span>,<span class="number">0x46</span>,<span class="number">0x0F</span>,<span class="number">0xC6</span>,</span><br><span class="line">  <span class="number">0x78</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gen_rand</span><span class="params">()</span></span>&#123;</span><br><span class="line">srand(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">31</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0x%02X,&quot;</span>,rand100);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> random_list[] = &#123;</span><br><span class="line">  <span class="number">0x27</span>,<span class="number">0x14</span>,<span class="number">0x27</span>,<span class="number">0x26</span>,<span class="number">0x38</span>,<span class="number">0x62</span>,<span class="number">0x42</span>,<span class="number">0x56</span>,<span class="number">0x33</span>,<span class="number">0x0D</span>,</span><br><span class="line">  <span class="number">0x36</span>,<span class="number">0x01</span>,<span class="number">0x2B</span>,<span class="number">0x52</span>,<span class="number">0x26</span>,<span class="number">0x16</span>,<span class="number">0x2E</span>,<span class="number">0x56</span>,<span class="number">0x62</span>,<span class="number">0x51</span>,</span><br><span class="line">  <span class="number">0x4D</span>,<span class="number">0x5C</span>,<span class="number">0x38</span>,<span class="number">0x07</span>,<span class="number">0x3A</span>,<span class="number">0x18</span>,<span class="number">0x52</span>,<span class="number">0x29</span>,<span class="number">0x1A</span>,<span class="number">0x4F</span>,</span><br><span class="line">  <span class="number">0x2F</span>,<span class="number">0x5B</span>,<span class="number">0x29</span>,<span class="number">0x58</span>,<span class="number">0x08</span>,<span class="number">0x26</span>,<span class="number">0x0C</span>,<span class="number">0x12</span>,<span class="number">0x39</span>,<span class="number">0x44</span>,</span><br><span class="line">  <span class="number">0x22</span>,<span class="number">0x4F</span>,<span class="number">0x18</span>,<span class="number">0x58</span>,<span class="number">0x62</span>,<span class="number">0x55</span>,<span class="number">0x0D</span>,<span class="number">0x0C</span>,<span class="number">0x4F</span>,<span class="number">0x43</span>,</span><br><span class="line">  <span class="number">0x1E</span>,<span class="number">0x05</span>,<span class="number">0x50</span>,<span class="number">0x06</span>,<span class="number">0x59</span>,<span class="number">0x32</span>,<span class="number">0x1E</span>,<span class="number">0x4D</span>,<span class="number">0x20</span>,<span class="number">0x41</span>,</span><br><span class="line">  <span class="number">0x0F</span>,<span class="number">0x25</span>,<span class="number">0x1D</span>,<span class="number">0x03</span>,<span class="number">0x35</span>,<span class="number">0x05</span>,<span class="number">0x26</span>,<span class="number">0x39</span>,<span class="number">0x63</span>,<span class="number">0x49</span>,</span><br><span class="line">  <span class="number">0x62</span>,<span class="number">0x0E</span>,<span class="number">0x54</span>,<span class="number">0x04</span>,<span class="number">0x3D</span>,<span class="number">0x2B</span>,<span class="number">0x30</span>,<span class="number">0x4C</span>,<span class="number">0x48</span>,<span class="number">0x05</span>,</span><br><span class="line">  <span class="number">0x4A</span>,<span class="number">0x35</span>,<span class="number">0x14</span>,<span class="number">0x05</span>,<span class="number">0x28</span>,<span class="number">0x57</span>,<span class="number">0x05</span>,<span class="number">0x26</span>,<span class="number">0x18</span>,<span class="number">0x24</span>,</span><br><span class="line">  <span class="number">0x22</span>,<span class="number">0x5E</span>,<span class="number">0x15</span>,<span class="number">0x4B</span>,<span class="number">0x54</span>,<span class="number">0x3E</span>,<span class="number">0x19</span>,<span class="number">0x42</span>,<span class="number">0x46</span>,<span class="number">0x1F</span>,</span><br><span class="line">  <span class="number">0x44</span>,<span class="number">0x25</span>,<span class="number">0x32</span>,<span class="number">0x25</span>,<span class="number">0x14</span>,<span class="number">0x1C</span>,<span class="number">0x01</span>,<span class="number">0x18</span>,<span class="number">0x17</span>,<span class="number">0x4B</span>,</span><br><span class="line">  <span class="number">0x0C</span>,<span class="number">0x3F</span>,<span class="number">0x42</span>,<span class="number">0x5C</span>,<span class="number">0x14</span>,<span class="number">0x30</span>,<span class="number">0x33</span>,<span class="number">0x15</span>,<span class="number">0x23</span>,<span class="number">0x45</span>,</span><br><span class="line">  <span class="number">0x19</span>,<span class="number">0x4E</span>,<span class="number">0x2F</span>,<span class="number">0x20</span>,<span class="number">0x3B</span>,<span class="number">0x49</span>,<span class="number">0x1F</span>,<span class="number">0x23</span>,<span class="number">0x52</span>,<span class="number">0x24</span>,</span><br><span class="line">  <span class="number">0x44</span>,<span class="number">0x3D</span>,<span class="number">0x0F</span>,<span class="number">0x2B</span>,<span class="number">0x4D</span>,<span class="number">0x1C</span>,<span class="number">0x18</span>,<span class="number">0x5F</span>,<span class="number">0x45</span>,<span class="number">0x2D</span>,</span><br><span class="line">  <span class="number">0x19</span>,<span class="number">0x16</span>,<span class="number">0x08</span>,<span class="number">0x61</span>,<span class="number">0x1B</span>,<span class="number">0x40</span>,<span class="number">0x29</span>,<span class="number">0x3F</span>,<span class="number">0x30</span>,<span class="number">0x51</span>,</span><br><span class="line">  <span class="number">0x30</span>,<span class="number">0x1D</span>,<span class="number">0x0E</span>,<span class="number">0x54</span>,<span class="number">0x3C</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> input,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">input ^= random_list[i*<span class="number">5</span>];</span><br><span class="line">input += random_list[i*<span class="number">5</span>+<span class="number">1</span>];</span><br><span class="line">input *= random_list[i*<span class="number">5</span>+<span class="number">2</span>];</span><br><span class="line">input -= random_list[i*<span class="number">5</span>+<span class="number">3</span>];</span><br><span class="line">input %= <span class="number">66666</span>;</span><br><span class="line"><span class="keyword">return</span> input&amp;<span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">brute</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">31</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">33</span>;j&lt;<span class="number">125</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(encode(j,i) == enflag[i])&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j);</span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">brute();</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>我出题出的比较烂，直接多解算了<br><img src="/2021/03/01/crackme/1614578652687-eec58c31-3646-4661-8f10-d6f28d772b96.png" alt="image.png"><br>MOCSCTF{cRa0k_M3_1s_s0_Ea3y!!!}<br>MOCSCTF{CRa0k_M3_1s_s0_Ea3y!!!}<br>MOCSCTF{CRA0k_M3_1s_s0_Ea3y!!!}<br>MOCSCTF{cRA0k_M3_1s_s0_Ea3y!!!}<br><img src="/2021/03/01/crackme/1614563875035-cc94c559-75ca-4994-a109-d5960b5fd901.png" alt="image.png"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>（更新于2021.03.16）做了一题VNCTF确实下次可以弄个md5限制一下多解，例如这题套个md5就能防止多解</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUU平台逆向刷题</title>
      <link href="/2021/02/06/buuctf/"/>
      <url>/2021/02/06/buuctf/</url>
      
        <content type="html"><![CDATA[<h1 id="pyre"><a href="#pyre" class="headerlink" title="pyre"></a>pyre</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">code = [<span class="string">&#x27;\x1f&#x27;</span>, <span class="string">&#x27;\x12&#x27;</span>, <span class="string">&#x27;\x1d&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;\x01&#x27;</span>, <span class="string">&#x27;\x06&#x27;</span>, <span class="string">&#x27;\x14&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;\x1b&#x27;</span>, <span class="string">&#x27;U&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\x01&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;%&#x27;</span>, <span class="string">&#x27;\x13&#x27;</span>]</span><br><span class="line">l = len(code)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l - <span class="number">1</span>):</span><br><span class="line">    i = l<span class="number">-2</span>-i</span><br><span class="line">    code[i] = chr(ord(code[i]) ^ ord(code[(i + <span class="number">1</span>)]))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">in_range</span>(<span class="params">j</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">33</span>&lt;= j <span class="keyword">and</span> j &lt;= <span class="number">125</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    i = l<span class="number">-1</span>-i</span><br><span class="line">    tmp = ord(code[i])-i</span><br><span class="line">    data = tmp <span class="keyword">if</span> in_range(tmp) <span class="keyword">else</span> tmp+<span class="number">128</span></span><br><span class="line">    code[i] = chr(data)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(code))</span><br><span class="line"><span class="comment">#GWHT&#123;Just_Re_1s_Ha66y!&#125;</span></span><br></pre></td></tr></table></figure><h1 id="IgniteMe"><a href="#IgniteMe" class="headerlink" title="IgniteMe"></a>IgniteMe</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">enflag = [</span><br><span class="line">  <span class="number">0x0D</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x2A</span>, <span class="number">0x17</span>, <span class="number">0x78</span>, <span class="number">0x44</span>, <span class="number">0x2B</span>, <span class="number">0x6C</span>, </span><br><span class="line">  <span class="number">0x5D</span>, <span class="number">0x5E</span>, <span class="number">0x45</span>, <span class="number">0x12</span>, <span class="number">0x2F</span>, <span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x44</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, </span><br><span class="line">  <span class="number">0x56</span>, <span class="number">0x09</span>, <span class="number">0x5F</span>, <span class="number">0x45</span>, <span class="number">0x47</span>, <span class="number">0x73</span>, <span class="number">0x26</span>, <span class="number">0x0A</span>, <span class="number">0x0D</span>, <span class="number">0x13</span>, </span><br><span class="line">  <span class="number">0x17</span>, <span class="number">0x48</span>, <span class="number">0x42</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x4D</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x69</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">v4 = <span class="number">4</span>; flag = [<span class="string">&quot;&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(len(enflag))]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enflag)):</span><br><span class="line">    j = len(enflag)-i<span class="number">-1</span></span><br><span class="line">    data = enflag[j]^v4</span><br><span class="line">    flag[j] = chr(data)</span><br><span class="line">    v4 = data</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(flag))</span><br><span class="line"><span class="comment"># R_y0u_H0t_3n0ugH_t0_1gn1t3@flare-on.com</span></span><br></pre></td></tr></table></figure><h1 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">v1,v3</span>):</span></span><br><span class="line">    v5 = <span class="number">0xA</span></span><br><span class="line">    key = <span class="string">&quot;adsfkndcls&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (v1 - <span class="number">39</span> - ord(key[v3 % v5]) + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span>(<span class="params">v3</span>):</span></span><br><span class="line">    answer = <span class="string">&quot;killshadow&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">65</span>,<span class="number">91</span>):</span><br><span class="line">        <span class="keyword">if</span> encode(i,v3+<span class="number">10</span>) == ord(answer[v3]): print(chr(i),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    brute(i)</span><br><span class="line"><span class="comment"># KLDQCUDFZO</span></span><br></pre></td></tr></table></figure><h1 id="特殊的-BASE64"><a href="#特殊的-BASE64" class="headerlink" title="特殊的 BASE64"></a>特殊的 BASE64</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">my_base64table = <span class="string">&quot;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+&quot;</span></span><br><span class="line">std_base64table =<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">s = <span class="string">&quot;mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==&quot;</span></span><br><span class="line">s = s.translate(str.maketrans(my_base64table,std_base64table))</span><br><span class="line">print(base64.b64decode(s))</span><br><span class="line"><span class="comment"># flag&#123;Special_Base64_By_Lich&#125;</span></span><br></pre></td></tr></table></figure><h1 id="刮开有奖"><a href="#刮开有奖" class="headerlink" title="刮开有奖"></a>刮开有奖</h1>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界逆向刷题</title>
      <link href="/2021/02/06/adworld/"/>
      <url>/2021/02/06/adworld/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有些题目之前就做完了，我不想再写WP了（手动滑稽保命）</p><h1 id="666"><a href="#666" class="headerlink" title="666"></a>666</h1><p>ida放进去发现是普通的异或，直接秒<br><img src="/2021/02/06/adworld/1613504276249-8b41d2fe-0345-4a28-bc4e-a107232d8afb.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">enflag = <span class="string">&quot;izwhroz\&quot;\&quot;w\&quot;v.K\&quot;.Ni&quot;</span></span><br><span class="line">key = <span class="number">0x12</span></span><br><span class="line">enflag = [ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> enflag]</span><br><span class="line"></span><br><span class="line">flag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    flag.append(chr((enflag[<span class="number">3</span>*i]^key)<span class="number">-6</span>))</span><br><span class="line">    flag.append(chr((enflag[<span class="number">3</span>*i+<span class="number">1</span>]^key)+<span class="number">6</span>))</span><br><span class="line">    flag.append(chr(enflag[<span class="number">3</span>*i+<span class="number">2</span>]^key^<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(flag))</span><br><span class="line"><span class="comment">#unctf&#123;b66_6b6_66b&#125;</span></span><br></pre></td></tr></table></figure><h1 id="IgniteMe"><a href="#IgniteMe" class="headerlink" title="IgniteMe"></a>IgniteMe</h1><p>找到验证以及加密位置，xor反解即得flag<br><img src="/2021/02/06/adworld/1613505058590-da5ab2e0-6c6b-480c-8a44-4dc440962fec.png" alt="image.png"><img src="/2021/02/06/adworld/1613505084159-eeedf998-c7ce-425e-b428-0583c5a8edc2.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cipher = [</span><br><span class="line">  <span class="number">0x0D</span>, <span class="number">0x13</span>, <span class="number">0x17</span>, <span class="number">0x11</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x1D</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, </span><br><span class="line">  <span class="number">0x19</span>, <span class="number">0x2F</span>, <span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x24</span>, <span class="number">0x1F</span>, <span class="number">0x1E</span>, <span class="number">0x16</span>, <span class="number">0x09</span>, <span class="number">0x0F</span>, </span><br><span class="line">  <span class="number">0x15</span>, <span class="number">0x27</span>, <span class="number">0x13</span>, <span class="number">0x26</span>, <span class="number">0x0A</span>, <span class="number">0x2F</span>, <span class="number">0x1E</span>, <span class="number">0x1A</span>, <span class="number">0x2D</span>, <span class="number">0x0C</span>, </span><br><span class="line">  <span class="number">0x22</span>, <span class="number">0x04</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">enflag = <span class="string">&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;</span></span><br><span class="line">print(<span class="string">&quot;EIS&#123;&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enflag)):</span><br><span class="line">    tmp = ((ord(enflag[i])^cipher[i])<span class="number">-72</span>)^<span class="number">0x55</span></span><br><span class="line">    <span class="keyword">if</span> tmp &lt;= <span class="number">90</span>: tmp += <span class="number">32</span></span><br><span class="line">    <span class="keyword">else</span>: tmp -= <span class="number">32</span></span><br><span class="line">    print(chr(tmp),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><p>发现是.NET的exe，放进dnSpy定位到关键位置并且断点动态即得flag<br><img src="/2021/02/06/adworld/1613505509832-27b252b3-0d82-47c4-b685-229d273e1cce.png" alt="image.png"><img src="/2021/02/06/adworld/1613505522536-b8e8c2c0-78f3-4604-86d1-6cf6435ef76a.png" alt="image.png">flag{967DDDFBCD32C1F53527C221D9E40A0B}</p><h1 id="BabyXor"><a href="#BabyXor" class="headerlink" title="BabyXor"></a>BabyXor</h1><p>一开始看到pushad我以为加了个壳，然而脱壳后的文件运行不了，放进IDA看了个寂寞<br><img src="/2021/02/06/adworld/1612627162575-933caa84-17b8-4430-8f5d-f0f59434ec2b.png" alt="image.png"><br>所以只好自己直接动态调试看，谁知道是个假的Xor….，动调一下flag就生成出来了<br><img src="/2021/02/06/adworld/1612627151486-635308f6-9a83-4335-8170-bc0ff205bd0b.png" alt="image.png"><br>flag{2378b077-7d6e-4564-bdca-7eec8eede9a2}</p><h1 id="BABYRE"><a href="#BABYRE" class="headerlink" title="BABYRE"></a>BABYRE</h1><p>放进ida发现有个奇怪的变量异或后像函数一样调用，实际上是做了个异或加密防止静态分析，动调judge解密之后双击judge -&gt; 在最上面右键-&gt;Create Function -&gt; F5生成伪代码<br><img src="/2021/02/06/adworld/1613729485469-ceddbe42-ac34-423a-b8bb-4157ad3e80e3.png" alt="image.png"><img src="/2021/02/06/adworld/1613729639773-dd964bdb-aa58-42e3-9358-1a0f3d9d812b.png" alt="image.png"><br>发现就是普通异或题目，导出后再异或即得flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enflag = [</span><br><span class="line">  <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x7F</span>, <span class="number">0x6B</span>, <span class="number">0x37</span>, <span class="number">0x64</span>, <span class="number">0x3B</span>, <span class="number">0x56</span>, </span><br><span class="line">  <span class="number">0x60</span>, <span class="number">0x3B</span>, <span class="number">0x6E</span>, <span class="number">0x70</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enflag)):</span><br><span class="line">    print(chr(enflag[i]^i),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># flag&#123;n1c3_j0b&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>各种CTF比赛的Writeup</title>
      <link href="/2021/01/31/all-writeups/"/>
      <url>/2021/01/31/all-writeups/</url>
      
        <content type="html"><![CDATA[<p>更新md太麻烦了，不更新了</p><p>安洵杯2020部分WP<br><a href="https://www.anquanke.com/post/id/223786">https://www.anquanke.com/post/id/223786</a></p><p>RoarCTF2020 部分wp<br><a href="https://www.anquanke.com/post/id/224892#h3-14">https://www.anquanke.com/post/id/224892</a></p><p>SWPUCTF2020 官方WP<br><a href="SWPUCTF2020%20%E5%AE%98%E6%96%B9WP%20-%20SWPU_08067sec.rar">SWPUCTF2020 官方WP - SWPU_08067sec.rar</a></p><p>NCTF2020 By 天璇Merak <a href="merak-nctf-2020.pdf">merak-nctf-2020.pdf</a></p><p>NEFUCTF2020 官方WP <a href="ctf-nefu%E6%A0%A1%E8%B5%9B-WriteUp-2020.pdf">ctf-nefu校赛-WriteUp-2020.pdf</a></p><p>*CTF2021 By 天璇Merak<br><a href="https://www.anquanke.com/post/id/229322">https://www.anquanke.com/post/id/229322</a></p><p>TSCTF2020 官方WP [TSCTF2020 官方writeup.pdf](TSCTF2020 官方writeup.pdf)</p><p>CUMTCTF 2021 官方WP [CUMTCTF 2021 winter WP.pdf](CUMTCTF 2021 winter WP.pdf)</p><p>HGAME 官方WP 大合集<br><a href="HGAME%202019.rar">HGAME 2019.rar</a><br><a href="HGAME%202020.rar">HGAME 2020.rar</a><br><a href="HGAME%202021.rar">HGAME 2021.rar</a></p><p>V&amp;N CTF [V&amp;N CTF 2021 官方Write-Up.pdf](V&amp;N CTF 2021 官方Write-Up.pdf)</p><p>D3CTF 2021 [AntCTF x D^3CTF Official Writeup (1).pdf](AntCTF x D^3CTF Official Writeup (1).pdf)</p><p>MRCTF 2021<br><a href="https://www.anquanke.com/post/id/237793">https://www.anquanke.com/post/id/237793</a></p><p>红名谷杯 [红明谷杯 By 天璇Merak.pdf](红明谷杯 By 天璇Merak.pdf)</p><p>CnHongKeCTF [CnHongKeCTF By 天璇.pdf](CnHongKeCTF By 天璇.pdf)</p><p>虎符 [虎符网络安全技能大赛 By 天璇Merak.pdf](虎符网络安全技能大赛 By 天璇Merak.pdf)<br>CSTC 2021 [cstc wp By 天璇Merak.pdf](cstc wp By 天璇Merak.pdf)</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TSCTF-J 2020</title>
      <link href="/2021/01/31/tsctf-j-2020/"/>
      <url>/2021/01/31/tsctf-j-2020/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次参加CTF比赛，感觉自己好菜（我就学了一个月而已…菜也正常）。<br>（以后一定要记得每次做完就写wp… 不然最后一天很难受）<br><a href="https://tsctf-j.buptmerak.cn/">TSCTF-J比赛网址</a></p><h1 id="easyXor-exe"><a href="#easyXor-exe" class="headerlink" title="easyXor.exe"></a><a href="easyXor.exe">easyXor.exe</a></h1><p>这题没啥说的，标准的异或出flag<br><img src="/2021/01/31/tsctf-j-2020/0OSJyV.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">enflag = [<span class="number">62</span>,<span class="number">58</span>,<span class="number">41</span>,<span class="number">57</span>,<span class="number">44</span>,<span class="number">84</span>,<span class="number">54</span>,<span class="number">28</span>,<span class="number">58</span>,<span class="number">99</span>,<span class="number">34</span>,<span class="number">60</span>,<span class="number">98</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">56</span>,<span class="number">78</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">52</span>,<span class="number">74</span>,<span class="number">13</span>,<span class="number">27</span>,<span class="number">48</span>,<span class="number">37</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">97</span>,<span class="number">101</span>]</span><br><span class="line">decode = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz!!!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enflag)):</span><br><span class="line">    print(chr((enflag[i]<span class="number">-9</span>)^ord(decode[i])),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag: TSCTF-J{X0r_4nd_4dd_4re_ea5y}</p><h1 id="welcome"><a href="#welcome" class="headerlink" title="welcome"></a><a href="welcome">welcome</a></h1><p>用虚拟机运行一次，出现merak.png，扫描并关注公众号后回复TSCTF-J得到flag<br><img src="/2021/01/31/tsctf-j-2020/0O9WRA.jpg"><br>得到flag: TSCTF-J{Welcome_to_TSCTF-J_2020}</p><h1 id="PACMAN-zip"><a href="#PACMAN-zip" class="headerlink" title="PACMAN.zip"></a><a href="PACMAN.zip">PACMAN.zip</a></h1><p>用dnSpy打开Assembly-CSharp.dll，找到关键语句，直接复制再运行一次就出来了<br><a href="https://github.com/dnSpy/dnSpy/releases">dnSpy下载地址</a><br><img src="/2021/01/31/tsctf-j-2020/0O9ivt.png"></p><h2 id="Exp脚本"><a href="#Exp脚本" class="headerlink" title="Exp脚本"></a>Exp脚本</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GenerateMd5</span>(<span class="params"><span class="keyword">string</span> text</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> result;</span><br><span class="line">            <span class="keyword">using</span> (MD5 md = MD5.Create())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] bytes = Encoding.Default.GetBytes(text);</span><br><span class="line">                <span class="keyword">byte</span>[] array = md.ComputeHash(bytes);</span><br><span class="line">                StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    stringBuilder.Append(array[i].ToString(<span class="string">&quot;x2&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                result = stringBuilder.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">DesDecrypt</span>(<span class="params"><span class="keyword">string</span> key, <span class="keyword">string</span> iv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes2 = Encoding.UTF8.GetBytes(iv);</span><br><span class="line">            <span class="keyword">string</span> s = <span class="string">&quot;eqwLr9Qh7qNMVaNd78tRy1tUdJa4eG48C9vIB+FVPTcjDf+RKofGrA==&quot;</span>;</span><br><span class="line">            DESCryptoServiceProvider descryptoServiceProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">            <span class="keyword">string</span> result;</span><br><span class="line">            <span class="keyword">using</span> (MemoryStream memoryStream = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] array = Convert.FromBase64String(s);</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">using</span> (CryptoStream cryptoStream = <span class="keyword">new</span> CryptoStream(memoryStream, descryptoServiceProvider.CreateDecryptor(bytes, bytes2), CryptoStreamMode.Write))</span><br><span class="line">                    &#123;</span><br><span class="line">                        cryptoStream.Write(array, <span class="number">0</span>, array.Length);</span><br><span class="line">                        cryptoStream.FlushFinalBlock();</span><br><span class="line">                    &#125;</span><br><span class="line">                    result = Encoding.UTF8.GetString(memoryStream.ToArray());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span></span><br><span class="line">                &#123;</span><br><span class="line">                    result = <span class="string">&quot;Oho!You are caught by me!&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> Eat = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">string</span> secret = <span class="string">&quot;937d05a262a8a9efb9ceb2dac317fc2982e4d1bb&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Eat++;</span><br><span class="line">                <span class="keyword">if</span> (Eat % <span class="number">100</span> == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    secret = GenerateMd5(secret) + secret;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;hello1&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (Eat == <span class="number">574</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    secret = GenerateMd5(secret);</span><br><span class="line">                    secret = DesDecrypt(secret.Substring(<span class="number">0</span>, <span class="number">8</span>),secret.Substring(<span class="number">24</span>));</span><br><span class="line">                    Console.WriteLine(secret);</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="keyword">int</span>)(secret[<span class="number">8</span>] * secret[<span class="number">13</span>] * secret[<span class="number">15</span>]) != <span class="number">486400</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(secret);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到flag: TSCTF-J{P4c_m@n_1s_s0_1nT3rested}</p><h1 id="Go-1000-floors-zip"><a href="#Go-1000-floors-zip" class="headerlink" title="Go_1000_floors.zip"></a><a href="Go_1000_floors.zip">Go_1000_floors.zip</a></h1><p>秒解了…直接Notepad++查找TSCTF-J就找到flag了<br><img src="/2021/01/31/tsctf-j-2020/0OpWuV.png"><br>得到flag: TSCTF-J{Y0u_4re_a_rea1_man}</p><h1 id="easyASM"><a href="#easyASM" class="headerlink" title="easyASM"></a>easyASM</h1><p>这题让我好好的学了一次汇编，直接照着汇编自己手打一次python</p><h2 id="原python脚本"><a href="#原python脚本" class="headerlink" title="原python脚本"></a>原python脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dis</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">return</span> len(i)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i[:<span class="number">8</span>] != <span class="string">&quot;TSCTF-J&#123;&quot;</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">-1</span>:] != <span class="string">&quot;&#125;&quot;</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span>(<span class="params">i</span>):</span></span><br><span class="line">    l = a(i)</span><br><span class="line">    b = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(l):</span><br><span class="line">        print(i[j])</span><br><span class="line">        i[j] = (i[j] + <span class="number">128</span>) % <span class="number">256</span></span><br><span class="line">    <span class="keyword">return</span> bytes(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">e</span>(<span class="params">f</span>):</span></span><br><span class="line">    o = []</span><br><span class="line">    l = a(f)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">        w = ord(f[i]) ^ ord(f[(i+<span class="number">4</span>)%l])</span><br><span class="line">        o.append(w)</span><br><span class="line">    <span class="keyword">return</span> c(o)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    s = input(<span class="string">&quot;Guess\n&gt;&gt;&quot;</span>)</span><br><span class="line">    o = <span class="string">b&#x27;\xa9\x9a\xbf\xb6\x90\xea\x9f\xb1\xd9\xec\x8a\xa0\x80\x9a\xa6\x8a\xd8\x89\xbe\xca\xbe\xb7\xab\x9e\x94\xaf\x89\xfe\x92&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> e(s) == o <span class="keyword">and</span> b(s): print(<span class="string">&quot;Correct&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>: print(<span class="string">&quot;Wrong...&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="解密原理"><a href="#解密原理" class="headerlink" title="解密原理"></a>解密原理</h2><p>根据加密原理，加密第一位要用第四位，加密第二位要用第五位，加密最后一位；又因为已知flag头尾一定是TSCTF{}，所以能直接反推得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">24</span>):</span><br><span class="line">    print((i+<span class="number">4</span>)%l,end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment">#输出：4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 0 1 2 3</span></span><br></pre></td></tr></table></figure><h2 id="Exp脚本-1"><a href="#Exp脚本-1" class="headerlink" title="Exp脚本"></a>Exp脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">enflag = <span class="string">b&#x27;\xa9\x9a\xbf\xb6\x90\xea\x9f\xb1\xd9\xec\x8a\xa0\x80\x9a\xa6\x8a\xd8\x89\xbe\xca\xbe\xb7\xab\x9e\x94\xaf\x89\xfe\x92&#x27;</span></span><br><span class="line">key = []</span><br><span class="line">flag = [<span class="number">84</span>,<span class="number">83</span>,<span class="number">67</span>,<span class="number">84</span>,<span class="number">70</span>,<span class="number">45</span>,<span class="number">74</span>,<span class="number">123</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">125</span>] <span class="comment"># TSCTF&#123;&#125;</span></span><br><span class="line">l = len(enflag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    key.append(enflag[l-i<span class="number">-1</span>] - <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    k = ((l-i<span class="number">-1</span>)+<span class="number">4</span>)%l</span><br><span class="line">    flag[l-i<span class="number">-1</span>] = key[l-i<span class="number">-1</span>]^flag[k]</span><br><span class="line"></span><br><span class="line">test_flag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    test_flag.append(chr(flag[i]))</span><br><span class="line">    print(chr(flag[i]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag: TSCTF-J{R3aLly_E4sy_4Ss3mblY}</p><h1 id="PaintUpx-exe"><a href="#PaintUpx-exe" class="headerlink" title="PaintUpx.exe"></a><a href="PaintUpx.exe">PaintUpx.exe</a></h1><p>运行一下发现flag是用命令行画出来的，但到后面就卡住不输出了（WOW！便秘的感觉~~）<br><img src="/2021/01/31/tsctf-j-2020/0OAArn.md.png"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>PaintUpx名如其名，用upx加壳了，脱壳后开始分析主函数<br><img src="/2021/01/31/tsctf-j-2020/0OkY9g.png"></p><p>点进sub_4016CB函数发现Sleep函数，说不定nop掉就完事？（还真是这样）<br><img src="/2021/01/31/tsctf-j-2020/0OAUPO.png"></p><h2 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h2><p>点击Edit &gt; Patch program &gt; Assemble  编辑汇编<br><img src="/2021/01/31/tsctf-j-2020/0OmAAI.png"><br>点击Edit &gt; Patch program &gt; Apply pathes to input file &gt; OK  patch成功<br>patch后的exe: <a href="PaintUpx_crack.rar">PaintUpx_crack.rar</a><br>运行得到flag: TSCTF-J{So_E@SY_paINt_GAmE!!?}</p><h1 id="ZBR想要请客"><a href="#ZBR想要请客" class="headerlink" title="ZBR想要请客"></a>ZBR想要请客</h1><p>分析js代码，设置断点，修改totalWrong使if命令不成立即可<br><img src="/2021/01/31/tsctf-j-2020/0OnyZj.png"><br><img src="/2021/01/31/tsctf-j-2020/0OujNn.png"><br>得到flag: TSCTF-J{R1ch_Ric1n_ZBR_D1nn3r!}</p><h1 id="EasyF12"><a href="#EasyF12" class="headerlink" title="EasyF12"></a>EasyF12</h1><p>没什么好说的，就普通js断点…<br>主页找到源码找到game1.html，进入game1.html找到game2.php，在game2.php下断点js<br><img src="/2021/01/31/tsctf-j-2020/0OMPRP.png"><br>进入gethint.php?q=9999发现需要进入fina1.php，f12查看代码<br><img src="/2021/01/31/tsctf-j-2020/0OMzOU.png"><br>经典md5碰撞问题，postman解决<br><img src="/2021/01/31/tsctf-j-2020/0OQ8pt.png"><br>得到flag: TSCTF-J{Welc0me_To_tHe_wor1d_0f_Web}</p><h1 id="宣讲会"><a href="#宣讲会" class="headerlink" title="宣讲会"></a>宣讲会</h1><p>白嫖宣讲会 <a href="https://www.zhihu.com/question/424576852?utm_source=qq&utm_medium=social&utm_oi=910287639888941056">知乎链接</a><br>得到flag: TSCTF-J{消磨这一身魂也陪你闯}</p><h1 id="EasyVerify"><a href="#EasyVerify" class="headerlink" title="EasyVerify"></a>EasyVerify</h1><p>node.js运行调试即可获得flag<br><img src="/2021/01/31/tsctf-j-2020/0Olc8I.png"><br>得到flag: TSCTF-J{Yoshino-s_want_1_girlfriend}</p><h1 id="那你能帮帮我吗"><a href="#那你能帮帮我吗" class="headerlink" title="那你能帮帮我吗"></a>那你能帮帮我吗</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag, secret_number_you_never_know</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Source code:&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;main.py&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    val = <span class="number">0</span></span><br><span class="line">    inp = input(<span class="string">&quot;Input value: &quot;</span>)</span><br><span class="line">    count_digits = len(set(inp))</span><br><span class="line">    <span class="keyword">if</span> count_digits &lt;= <span class="number">10</span>:</span><br><span class="line">        val = eval(inp)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> val == secret_number_you_never_know: <span class="comment"># I am very sure it is a int</span></span><br><span class="line">        print(flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;Nope. Better luck next time.&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">&quot;Nope. No hacking.&quot;</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>print(vars())可得flag<br><img src="/2021/01/31/tsctf-j-2020/0OY7iF.png"><br>得到flag: TSCTF-J{Y_laoshi_want_girl_pengyou_qq_1735439536}</p><h2 id="奇特的解法"><a href="#奇特的解法" class="headerlink" title="奇特的解法"></a>奇特的解法</h2><p>输入exec(input())可以无限构造长度，感觉这个方法以后可以经常用</p><h1 id="资源小能手"><a href="#资源小能手" class="headerlink" title="资源小能手"></a>资源小能手</h1><p><a href="https://wwe.lanzous.com/iv8dYhiivpe">题目文件</a><br><a href="https://pan.baidu.com/s/1qY1xmbKWBXPASxhFCTlvQA">题目百度网盘</a> 提取码2ser<br>百度网盘全选文件下载，发现密码是2815e9c7290f40897da2c359ccd5029e<br>解压后的压缩包flag.tar.gz用010 Editor打开，发现flag<br><img src="/2021/01/31/tsctf-j-2020/0ONUBt.png"><br>得到flag: MIXCTF{Y_la0sh1_1s_Old_driu3R}</p><h1 id="fxxk"><a href="#fxxk" class="headerlink" title="fxxk"></a><a href="fxxk">fxxk</a></h1><p>动调后发现加密规律，直接得到exp脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enflag = [</span><br><span class="line">  <span class="number">0x54</span>, <span class="number">0x52</span>, <span class="number">0x41</span>, <span class="number">0x57</span>, <span class="number">0x42</span>, <span class="number">0x28</span>, <span class="number">0x4C</span>, <span class="number">0x7C</span>, <span class="number">0x5E</span>, <span class="number">0x6C</span>, </span><br><span class="line">  <span class="number">0x78</span>, <span class="number">0x72</span>, <span class="number">0x53</span>, <span class="number">0x68</span>, <span class="number">0x6F</span>, <span class="number">0x7C</span>, <span class="number">0x69</span>, <span class="number">0x4E</span>, <span class="number">0x54</span>, <span class="number">0x4B</span>, </span><br><span class="line">  <span class="number">0x4C</span>, <span class="number">0x4C</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x7D</span>, <span class="number">0x6F</span>, <span class="number">0x7F</span>, <span class="number">0x69</span>, <span class="number">0x6F</span>, <span class="number">0x78</span>, </span><br><span class="line">  <span class="number">0x41</span>, <span class="number">0x2E</span>, <span class="number">0x11</span>, <span class="number">0x15</span>, <span class="number">0x17</span>, <span class="number">0x12</span>, <span class="number">0x10</span>, <span class="number">0x58</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">38</span>):</span><br><span class="line">    print(chr(i^enflag[i]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag: TSCTF-J{Very_easy_FXXY_Reverse_114514}</p><h1 id="playWithMe"><a href="#playWithMe" class="headerlink" title="playWithMe"></a>playWithMe</h1><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>题目附件playWithMe.pyc，用uncompyle6得到python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">return</span> len(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span>(<span class="params">i</span>):</span></span><br><span class="line">    l = a(i)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(l):</span><br><span class="line">        i[j] = (ord(i[j]) + <span class="number">128</span>) % <span class="number">256</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> bytes(i)[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">e</span>(<span class="params">f</span>):</span></span><br><span class="line">    l = a(f)</span><br><span class="line">    w = list(f)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">        w[i] = chr(ord(w[i]) ^ ord(w[((i + <span class="number">4</span>) % l)])) <span class="comment">#  这里和easyAsm不同，把加密后的立刻赋值到第一位</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> c(w)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    s = input(<span class="string">&#x27;Guess?\n&gt;&gt; &#x27;</span>)</span><br><span class="line">    o = <span class="string">b&#x27;\xd2\xa8\xba\xa2\x92\xe6\x9b\xe3\xc8\xb3\xeb\xbb\xf3\xd5\xc3\xd8\x83\xda\xbd\x9d\x91\xaf\x89\xfe\x92&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> e(s) == o:</span><br><span class="line">        print(<span class="string">&#x27;Correct!&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;Wrong...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>这题和easyAsm好像，我一直在找哪不同…（找了好久）</p><h2 id="Exp脚本-2"><a href="#Exp脚本-2" class="headerlink" title="Exp脚本"></a>Exp脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">enflag = <span class="string">b&#x27;\xd2\xa8\xba\xa2\x92\xe6\x9b\xe3\xc8\xb3\xeb\xbb\xf3\xd5\xc3\xd8\x83\xda\xbd\x9d\x91\xaf\x89\xfe\x92&#x27;</span></span><br><span class="line">key = []</span><br><span class="line">flag = [<span class="number">84</span>,<span class="number">83</span>,<span class="number">67</span>,<span class="number">84</span>,<span class="number">70</span>,<span class="number">45</span>,<span class="number">74</span>,<span class="number">123</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">125</span>]</span><br><span class="line">l = len(enflag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    key.append(enflag[l-i<span class="number">-1</span>] - <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只加了这个for，其他都没变</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    flag[i] ^= flag[i+<span class="number">4</span>]  <span class="comment"># 因为是加密后直接复制给原字串，所以要先加密一次，不然反推会错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    k = ((l-i<span class="number">-1</span>)+<span class="number">4</span>)%l</span><br><span class="line">    flag[l-i<span class="number">-1</span>] = key[l-i<span class="number">-1</span>]^flag[k]</span><br><span class="line"></span><br><span class="line">test_flag = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    test_flag.append(chr(flag[i]))</span><br><span class="line">    print(chr(flag[i]),end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag: TSCTF-J{W0w!Th4t’S_Go0D!}</p><h1 id="whoami"><a href="#whoami" class="headerlink" title="whoami"></a>whoami</h1><p>附件是图片，binwalk -e解出文件，运行里面的js代码，出现TtS_C_T4F_-<em>Jf{e1NSc_e</em>?T?h?A}<br>栅栏加密，取每组字数15<br><img src="/2021/01/31/tsctf-j-2020/0OBC7R.png"><br>得到flag: TSCTF-J{1S<strong>ThAt</strong>4__feNce???}</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>感觉re都不太难，但自己明显对很多原理上的东西还没理解透彻，有时间希望能多看看书</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TSCTFJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种CTF逆向题目大杂烩</title>
      <link href="/2021/01/31/misc-ctf/"/>
      <url>/2021/01/31/misc-ctf/</url>
      
        <content type="html"><![CDATA[<h1 id="某乱七八糟选拔赛-main2101075ff6b9adc84f9-zip"><a href="#某乱七八糟选拔赛-main2101075ff6b9adc84f9-zip" class="headerlink" title="某乱七八糟选拔赛 main2101075ff6b9adc84f9.zip"></a>某乱七八糟选拔赛 main<a href="2101075ff6b9adc84f9.zip">2101075ff6b9adc84f9.zip</a></h1><p>拿到文件发现有upx壳，脱壳。<br>静态分析发现用随机数与flag.png每一字节异或得到flag.png.enc，而随机数种子用的是生成文件的时间戳<br>查看flag.png.enc生成时间2020-12-18 21:14:01（北京时间）得到时间戳1608297241，然后异或得到文件flag.png</p><h2 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h2><p>用linux g++编译后运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">int</span> a2)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> timestamp = <span class="number">1608297241</span>; <span class="comment">//GMT+8 2020-12-18 21:14:01</span></span><br><span class="line">srand(timestamp);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ; ++i)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span> ( (<span class="keyword">signed</span> <span class="keyword">int</span>)i &gt;= a2)</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> v4 = a1[i];</span><br><span class="line">a1[i] = (<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)rand()^v4;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ifstream infile;</span><br><span class="line">   infile.open(<span class="string">&quot;flag.png.enc&quot;</span>, ios::binary);</span><br><span class="line">infile.seekg(<span class="number">0</span>, ios::end);</span><br><span class="line"><span class="keyword">int</span> a2 = infile.tellg();<span class="comment">// 0x5D9;</span></span><br><span class="line">infile.seekg(<span class="number">0</span>, ios::beg);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">char</span> *a1 = <span class="keyword">new</span> <span class="keyword">char</span>[a2];</span><br><span class="line">infile.read(a1, a2);</span><br><span class="line">decrypt(a1,a2);</span><br><span class="line"></span><br><span class="line">ofstream outfile;</span><br><span class="line">   outfile.open(<span class="string">&quot;flag.png&quot;</span>);</span><br><span class="line">outfile.write(a1, a2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><p>flag.png文件<br><img src="/2021/01/31/misc-ctf/sQZ734.png"><br>扫一扫得到flag<br>flag{sRand_ANd_LCg_is_No_Safty_}</p><h1 id="NCTF-2020-re4"><a href="#NCTF-2020-re4" class="headerlink" title="NCTF-2020 re4"></a>NCTF-2020 re4</h1><p>题目文件 <a href="qiandao.exe">qiandao.exe</a><br>脱壳后文件 <a href="Dumped.exe">Dumped.exe</a><br>Exeinfo PE打开exe发现有壳，并且打开时提示decode_shell.pdb，得知exe有壳。<br>题目提示“运行时关闭ida od”，所以先将ida和od关闭后打开exe，再用PE Tools选择exe进程Dump，从而获得脱壳后的exe。<br>用IDA打开，先复现一次加密函数(代码中的encode)，发现(tmp[v1] | v1) &amp; ~(tmp[v1] &amp; v1)为异或运算，反运算后得到flag</p><h2 id="解题脚本-1"><a href="#解题脚本-1" class="headerlink" title="解题脚本"></a>解题脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">byte_B731E8 = [</span><br><span class="line">  <span class="number">0xA3</span>, <span class="number">0x4D</span>, <span class="number">0x44</span>, <span class="number">0x7F</span>, <span class="number">0x53</span>, <span class="number">0xD6</span>, <span class="number">0xE9</span>, <span class="number">0x88</span>, <span class="number">0x4D</span>, <span class="number">0x95</span>, </span><br><span class="line">  <span class="number">0x1A</span>, <span class="number">0x72</span>, <span class="number">0x01</span>, <span class="number">0x3C</span>, <span class="number">0x71</span>, <span class="number">0x00</span>, <span class="number">0xE8</span>, <span class="number">0xCE</span>, <span class="number">0xA1</span>, <span class="number">0xF8</span>, </span><br><span class="line">  <span class="number">0x51</span>, <span class="number">0x48</span>, <span class="number">0xF5</span>, <span class="number">0xE9</span>, <span class="number">0x6A</span>, <span class="number">0x02</span>, <span class="number">0x27</span>, <span class="number">0xD8</span>, <span class="number">0x96</span>, <span class="number">0x7F</span>, </span><br><span class="line">  <span class="number">0x72</span>, <span class="number">0xD6</span>, <span class="number">0xF1</span>, <span class="number">0xE9</span>, <span class="number">0x9F</span>, <span class="number">0xC6</span>, <span class="number">0x5D</span>, <span class="number">0x60</span>, <span class="number">0xE4</span>, <span class="number">0x10</span>, </span><br><span class="line">  <span class="number">0x64</span>, <span class="number">0x99</span>, <span class="number">0xA0</span>, <span class="number">0x00</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">Dst = [</span><br><span class="line">  <span class="number">0x70</span>, <span class="number">0xDA</span>, <span class="number">0x19</span>, <span class="number">0xB3</span>, <span class="number">0x76</span>, <span class="number">0x8C</span>, <span class="number">0x66</span>, <span class="number">0x69</span>, <span class="number">0x28</span>, <span class="number">0xC7</span>, </span><br><span class="line">  <span class="number">0xD0</span>, <span class="number">0x1B</span>, <span class="number">0x11</span>, <span class="number">0x77</span>, <span class="number">0x94</span>, <span class="number">0xA2</span>, <span class="number">0x92</span>, <span class="number">0x1C</span>, <span class="number">0x51</span>, <span class="number">0xA3</span>, </span><br><span class="line">  <span class="number">0x4A</span>, <span class="number">0xC4</span>, <span class="number">0xAB</span>, <span class="number">0xF8</span>, <span class="number">0xAA</span>, <span class="number">0x2F</span>, <span class="number">0xE9</span>, <span class="number">0x3B</span>, <span class="number">0x95</span>, <span class="number">0x84</span>, </span><br><span class="line">  <span class="number">0xEE</span>, <span class="number">0xCD</span>, <span class="number">0x55</span>, <span class="number">0xCB</span>, <span class="number">0xC1</span>, <span class="number">0x99</span>, <span class="number">0xE4</span>, <span class="number">0xA4</span>, <span class="number">0x7A</span>, <span class="number">0x4E</span>, </span><br><span class="line">  <span class="number">0xE1</span>, <span class="number">0x9A</span>, <span class="number">0x89</span>, <span class="number">0xC3</span>, <span class="number">0xF9</span>, <span class="number">0x41</span>, <span class="number">0x34</span>, <span class="number">0x13</span>, <span class="number">0x57</span>, <span class="number">0xE5</span>, </span><br><span class="line">  <span class="number">0xBB</span>, <span class="number">0x05</span>, <span class="number">0x64</span>, <span class="number">0xC5</span>, <span class="number">0x5C</span>, <span class="number">0xB7</span>, <span class="number">0xBF</span>, <span class="number">0x79</span>, <span class="number">0x31</span>, <span class="number">0x26</span>, </span><br><span class="line">  <span class="number">0x47</span>, <span class="number">0x86</span>, <span class="number">0x1F</span>, <span class="number">0xD3</span>, <span class="number">0xA1</span>, <span class="number">0xF2</span>, <span class="number">0xE2</span>, <span class="number">0x3D</span>, <span class="number">0x9D</span>, <span class="number">0xDF</span>, </span><br><span class="line">  <span class="number">0x43</span>, <span class="number">0xE7</span>, <span class="number">0xF4</span>, <span class="number">0xA6</span>, <span class="number">0x67</span>, <span class="number">0xFD</span>, <span class="number">0xC9</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x98</span>, </span><br><span class="line">  <span class="number">0x58</span>, <span class="number">0x8E</span>, <span class="number">0xA8</span>, <span class="number">0xD2</span>, <span class="number">0xFC</span>, <span class="number">0x71</span>, <span class="number">0x6A</span>, <span class="number">0xC2</span>, <span class="number">0xF0</span>, <span class="number">0xB2</span>, </span><br><span class="line">  <span class="number">0x0A</span>, <span class="number">0x6E</span>, <span class="number">0xBC</span>, <span class="number">0x6D</span>, <span class="number">0x48</span>, <span class="number">0xB8</span>, <span class="number">0xD8</span>, <span class="number">0x0E</span>, <span class="number">0x49</span>, <span class="number">0x1D</span>, </span><br><span class="line">  <span class="number">0x6F</span>, <span class="number">0xAD</span>, <span class="number">0x74</span>, <span class="number">0x91</span>, <span class="number">0xC6</span>, <span class="number">0x1E</span>, <span class="number">0x59</span>, <span class="number">0x82</span>, <span class="number">0x45</span>, <span class="number">0x2B</span>, </span><br><span class="line">  <span class="number">0x46</span>, <span class="number">0xAF</span>, <span class="number">0x0B</span>, <span class="number">0xD5</span>, <span class="number">0x5D</span>, <span class="number">0x17</span>, <span class="number">0x8D</span>, <span class="number">0x6B</span>, <span class="number">0xB4</span>, <span class="number">0xDB</span>, </span><br><span class="line">  <span class="number">0xB9</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0xBD</span>, <span class="number">0xEF</span>, <span class="number">0x7E</span>, <span class="number">0x6C</span>, <span class="number">0x23</span>, <span class="number">0x65</span>, <span class="number">0x97</span>, </span><br><span class="line">  <span class="number">0x96</span>, <span class="number">0x72</span>, <span class="number">0x02</span>, <span class="number">0x33</span>, <span class="number">0x3C</span>, <span class="number">0xB6</span>, <span class="number">0x53</span>, <span class="number">0x27</span>, <span class="number">0x32</span>, <span class="number">0x24</span>, </span><br><span class="line">  <span class="number">0x3E</span>, <span class="number">0xF3</span>, <span class="number">0x8B</span>, <span class="number">0xEA</span>, <span class="number">0x1A</span>, <span class="number">0xA9</span>, <span class="number">0x2C</span>, <span class="number">0xED</span>, <span class="number">0xD1</span>, <span class="number">0x56</span>, </span><br><span class="line">  <span class="number">0x18</span>, <span class="number">0x38</span>, <span class="number">0x75</span>, <span class="number">0x52</span>, <span class="number">0xF7</span>, <span class="number">0x88</span>, <span class="number">0x0F</span>, <span class="number">0xF6</span>, <span class="number">0x20</span>, <span class="number">0xE0</span>, </span><br><span class="line">  <span class="number">0x50</span>, <span class="number">0x5F</span>, <span class="number">0xD9</span>, <span class="number">0x9C</span>, <span class="number">0x5A</span>, <span class="number">0x5E</span>, <span class="number">0xD6</span>, <span class="number">0x2D</span>, <span class="number">0x06</span>, <span class="number">0x63</span>, </span><br><span class="line">  <span class="number">0xFE</span>, <span class="number">0xBA</span>, <span class="number">0x35</span>, <span class="number">0xCC</span>, <span class="number">0xD7</span>, <span class="number">0x9E</span>, <span class="number">0xFB</span>, <span class="number">0x2A</span>, <span class="number">0x0C</span>, <span class="number">0xB1</span>, </span><br><span class="line">  <span class="number">0x25</span>, <span class="number">0x44</span>, <span class="number">0x87</span>, <span class="number">0xF5</span>, <span class="number">0xFA</span>, <span class="number">0x8A</span>, <span class="number">0x40</span>, <span class="number">0xCF</span>, <span class="number">0x7D</span>, <span class="number">0xB5</span>, </span><br><span class="line">  <span class="number">0x04</span>, <span class="number">0xC8</span>, <span class="number">0x60</span>, <span class="number">0xDC</span>, <span class="number">0x4D</span>, <span class="number">0xE3</span>, <span class="number">0xB0</span>, <span class="number">0xD4</span>, <span class="number">0x3F</span>, <span class="number">0x9B</span>, </span><br><span class="line">  <span class="number">0xE8</span>, <span class="number">0x62</span>, <span class="number">0xC0</span>, <span class="number">0xA7</span>, <span class="number">0xA0</span>, <span class="number">0x21</span>, <span class="number">0x4B</span>, <span class="number">0x4C</span>, <span class="number">0x7F</span>, <span class="number">0x2E</span>, </span><br><span class="line">  <span class="number">0xEC</span>, <span class="number">0xCE</span>, <span class="number">0xDD</span>, <span class="number">0x03</span>, <span class="number">0xFF</span>, <span class="number">0xDE</span>, <span class="number">0xCA</span>, <span class="number">0x22</span>, <span class="number">0x5B</span>, <span class="number">0x29</span>, </span><br><span class="line">  <span class="number">0xF1</span>, <span class="number">0x39</span>, <span class="number">0x80</span>, <span class="number">0x9F</span>, <span class="number">0x73</span>, <span class="number">0x42</span>, <span class="number">0xA5</span>, <span class="number">0x90</span>, <span class="number">0x10</span>, <span class="number">0x0D</span>, </span><br><span class="line">  <span class="number">0x81</span>, <span class="number">0x15</span>, <span class="number">0xEB</span>, <span class="number">0x8F</span>, <span class="number">0x4F</span>, <span class="number">0x61</span>, <span class="number">0x54</span>, <span class="number">0x7C</span>, <span class="number">0x93</span>, <span class="number">0x36</span>, </span><br><span class="line">  <span class="number">0xAC</span>, <span class="number">0x68</span>, <span class="number">0x3A</span>, <span class="number">0x85</span>, <span class="number">0x16</span>, <span class="number">0xE6</span>, <span class="number">0x7B</span>, <span class="number">0xBE</span>, <span class="number">0x30</span>, <span class="number">0x08</span>, </span><br><span class="line">  <span class="number">0x83</span>, <span class="number">0x37</span>, <span class="number">0x14</span>, <span class="number">0x12</span>, <span class="number">0xAE</span>, <span class="number">0x07</span>, <span class="number">0xB9</span>, <span class="number">0x85</span>, <span class="number">0xEC</span>, <span class="number">0xC2</span>, </span><br><span class="line">  <span class="number">0xC4</span>, <span class="number">0xFC</span>, <span class="number">0xA1</span>, <span class="number">0x02</span>, <span class="number">0x59</span>, <span class="number">0x63</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x63</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x20</span>, <span class="number">0xFD</span>, <span class="number">0xA1</span>, <span class="number">0x02</span>, </span><br><span class="line">  <span class="number">0x44</span>, <span class="number">0x89</span>, <span class="number">0x4F</span>, <span class="number">0x77</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2D</span>, <span class="number">0xE3</span>, </span><br><span class="line">  <span class="number">0x51</span>, <span class="number">0xC6</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">text</span>):</span></span><br><span class="line">    tmp = [data+<span class="number">1</span> <span class="keyword">for</span> data <span class="keyword">in</span> text];v5 = <span class="number">0</span>;v6 = <span class="number">0</span>;v7 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        v5 = (v5 + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        v8 = Dst[v5];</span><br><span class="line">        v6 = (v8 + v6) % <span class="number">256</span>;</span><br><span class="line">        Dst[v5] = Dst[v6];</span><br><span class="line">        Dst[v6] = v8;</span><br><span class="line">        tmp[v7] ^= Dst[(v8 + Dst[v5])&amp;<span class="number">0xFF</span>];</span><br><span class="line">        v7 += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> v7 &gt;= <span class="number">0x2B</span>: <span class="keyword">break</span></span><br><span class="line">    v1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        v2 = (tmp[v1] | v1) &amp; ~(tmp[v1] &amp; v1);</span><br><span class="line">        tmp[v1] = v2;</span><br><span class="line">        v1 += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> v1 &gt;= <span class="number">43</span>: <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">text</span>):</span></span><br><span class="line">    encode_dict = []; v5 = <span class="number">0</span>;v6 = <span class="number">0</span>;v7 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        v5 = (v5 + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        v8 = Dst[v5];</span><br><span class="line">        v6 = (v8 + v6) % <span class="number">256</span>;</span><br><span class="line">        Dst[v5] = Dst[v6];</span><br><span class="line">        Dst[v6] = v8;</span><br><span class="line">        encode_dict.append(Dst[(v8 + Dst[v5])&amp;<span class="number">0xFF</span>]);</span><br><span class="line">        v7 += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> v7 &gt;= <span class="number">0x2B</span>: <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    tmp = [text[i]^i <span class="keyword">for</span> i <span class="keyword">in</span> range(len(text))]</span><br><span class="line">    v7 = <span class="number">0x2B</span><span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        tmp[v7] ^= encode_dict[v7];</span><br><span class="line">        v7 -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> v7 == <span class="number">0</span>: <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> tmp </span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join([chr(data) <span class="keyword">for</span> data <span class="keyword">in</span> decode(byte_B731E8)]))</span><br></pre></td></tr></table></figure><p>得到flag：flag{Process_Hollowing_with_multithreading}</p><h2 id="加壳源码"><a href="#加壳源码" class="headerlink" title="加壳源码"></a>加壳源码</h2><p><a href="https://www.freebuf.com/articles/system/235167.html?replytocom=283980">一份专供初学者食用的AES加密壳</a></p><h1 id="NCTF-2019-WxyVM1WxyVM1-rar"><a href="#NCTF-2019-WxyVM1WxyVM1-rar" class="headerlink" title="NCTF-2019 WxyVM1WxyVM1.rar"></a>NCTF-2019 WxyVM1<a href="WxyVM1.rar">WxyVM1.rar</a></h1><p>虚拟机题目，不过当时做题的时候不觉得是虚拟机…很久之前做的题目了，分析过程早忘了，附上个脚本给有需要的人学习一下<br><a href="WxyVM.py">WxyVM.py</a></p><h1 id="NEFUCTF-2020-Test-your-mathTest-your-math-rar"><a href="#NEFUCTF-2020-Test-your-mathTest-your-math-rar" class="headerlink" title="NEFUCTF-2020 Test_your_mathTest_your_math.rar"></a>NEFUCTF-2020 Test_your_math<a href="Test_your_math.rar">Test_your_math.rar</a></h1><p>静态分析发现flag是一个方程组的解，用sympy解出</p><h2 id="解题脚本-2"><a href="#解题脚本-2" class="headerlink" title="解题脚本"></a>解题脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> == <span class="number">4</span>: <span class="keyword">continue</span></span><br><span class="line">    exec(<span class="string">&#x27;v&#123;&#125; = Symbol(\&#x27;v&#123;&#125;\&#x27;)&#x27;</span>.format(str(i+<span class="number">1</span>),str(i+<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">answer = solve([</span><br><span class="line">    <span class="number">98</span> * v3 + <span class="number">73</span> * v10 + <span class="number">86</span> * (v8 + v5) + <span class="number">79</span> * (v2 - v1) - <span class="number">22</span> * (v11 + <span class="number">2</span> * v9) - <span class="number">23</span> * v6 - <span class="number">81</span> * v7 <span class="number">-20413</span>,</span><br><span class="line">    <span class="number">37</span> * v9 + <span class="number">86</span> * v1 + <span class="number">31</span> * v7 + <span class="number">9</span> * v10 + <span class="number">7</span> * (<span class="number">4</span> * v3 - v11) + <span class="number">8</span> * v6 - <span class="number">89</span> * v8 - <span class="number">11</span> * v5 + <span class="number">10</span> * v2 <span class="number">-2513</span>,</span><br><span class="line">    <span class="number">48</span> * v2 + <span class="number">-70</span> * v10 - <span class="number">46</span> * (v5 + v9) - <span class="number">88</span> * v7 - <span class="number">28</span> * v3 - <span class="number">95</span> * v8 - <span class="number">81</span> * v1 - (v11 * <span class="number">2</span>**<span class="number">6</span>) - <span class="number">52</span> * v6 +<span class="number">43184</span>,</span><br><span class="line">    <span class="number">56</span> * v6 + <span class="number">15</span> * v11 + <span class="number">79</span> * v7 - <span class="number">91</span> * v10 + <span class="number">62</span> * v3 - <span class="number">73</span> * v8 - <span class="number">34</span> * v5 + <span class="number">18</span> * v2 - <span class="number">12</span> * v1 - <span class="number">32</span> * v9 +<span class="number">5076</span>,</span><br><span class="line">    <span class="number">21</span> * v11 + <span class="number">80</span> * v2 + <span class="number">51</span> * v3 + <span class="number">97</span> * v10 + <span class="number">-83</span> * v6 - <span class="number">14</span> * (v5 + <span class="number">7</span> * v7) - <span class="number">68</span> * v8 - <span class="number">82</span> * v1 - <span class="number">32</span> * v9 +<span class="number">9282</span>,</span><br><span class="line">    <span class="number">33</span> * v2 + <span class="number">51</span> * v8 + <span class="number">14</span> * (v3 - <span class="number">7</span> * v6) - <span class="number">36</span> * v10 - <span class="number">92</span> * v7 - <span class="number">60</span> * v5 - <span class="number">55</span> * v1 - <span class="number">90</span> * v11 - <span class="number">94</span> * v9 +<span class="number">30200</span>,</span><br><span class="line">    <span class="number">99</span> * v3 + <span class="number">67</span> * v10 + <span class="number">97</span> * v6 - <span class="number">59</span> * v7 + <span class="number">24</span> * v5 - <span class="number">22</span> * v2 - <span class="number">53</span> * v1 - <span class="number">37</span> * v11 - <span class="number">15</span> * v9 - v8 <span class="number">-8225</span>,</span><br><span class="line">    <span class="number">77</span> * v1 + <span class="number">5</span> * v8 + <span class="number">96</span> * v3 + <span class="number">-72</span> * v7 - (v10 * <span class="number">2</span>**<span class="number">6</span>) - <span class="number">47</span> * v5 - <span class="number">97</span> * v2 + <span class="number">56</span> * v6 + <span class="number">49</span> * v11 + <span class="number">78</span> * v9 +<span class="number">4117</span>,</span><br><span class="line">    <span class="number">52</span> * v6 + <span class="number">35</span> * v2 + <span class="number">43</span> * v3 + <span class="number">20</span> * (v11 - <span class="number">2</span> * v8) - <span class="number">75</span> * v10 - <span class="number">8</span> * v7 - <span class="number">39</span> * v5 - <span class="number">38</span> * v1 + <span class="number">53</span> * v9 +<span class="number">2782</span>,</span><br><span class="line">    <span class="number">42</span> * v9 + <span class="number">44</span> * v5 + <span class="number">39</span> * v10 + <span class="number">94</span> * v6 + <span class="number">12</span> * (v3 + <span class="number">2</span> * v8) + <span class="number">10</span> * (v1 - <span class="number">3</span> * v11) - <span class="number">49</span> * v7 - <span class="number">32</span> * v2 <span class="number">-12417</span>,</span><br><span class="line">    ],</span><br><span class="line">[v1,v2,v3,v5,v6,v7,v8,v9,v10,v11])</span><br><span class="line"><span class="comment"># &#123;v1: 55, v2: 110, v3: 57, v5: 77, v6: 85, v7: 95, v8: 121, v9: 70, v10: 104, v11: 64&#125;</span></span><br><span class="line"></span><br><span class="line">flag = []; index = [<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">10</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    flag.append(eval(<span class="string">&quot;chr(answer[v&#123;&#125;])&quot;</span>.format(str(index[i]))))</span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span>+<span class="string">&quot;&quot;</span>.join(flag)+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag：flag{FU9ny_M@7h}</p><h1 id="VNCTF-2021-notsudoku-notsudoku-zip"><a href="#VNCTF-2021-notsudoku-notsudoku-zip" class="headerlink" title="VNCTF-2021 notsudoku notsudoku.zip"></a>VNCTF-2021 notsudoku <a href="notsudoku.zip">notsudoku.zip</a></h1><p>这题看了下官方wp前面步骤都不难（wp在<a href="https://www.yuque.com/jameshoi/writeup/all-writeups">这里</a>可以找到），我接手的时候拿到了个用日文混淆的py<a href="notsudoku_obfu.py">notsudoku_obfu.py</a><br>我用编辑器替换一下后，如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, sys, hashlib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.a_dict = &#123;&#125;</span><br><span class="line">        self.arr1 = []</span><br><span class="line">        self.text = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        self.arr2 = []</span><br><span class="line">        self.num = <span class="number">65</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">self, key</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">fun</span>(<span class="params">f</span>):</span></span><br><span class="line">            self.a_dict[key] = f</span><br><span class="line">            <span class="keyword">return</span> f</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fun</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.a_dict.get(key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkflag</span>(<span class="params">self</span>):</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data1 = self.arr1[i][<span class="number">0</span>]</span><br><span class="line">            data2 = self.arr1[i][<span class="number">1</span>]</span><br><span class="line">            data3 = self.arr1[i][<span class="number">2</span>]</span><br><span class="line">            fun = self.get_data(data1)</span><br><span class="line">            fun(data2, data3)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj = Class()</span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;a&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        obj.arr2 += b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;b&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        print(obj.text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">            print(obj.arr2)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> a == <span class="number">3</span>:</span><br><span class="line">                print((obj.flag), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(a, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;c&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;d&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    obj.text = input()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;e&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    time.sleep(a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;f&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> len(obj.text) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> obj.text:</span><br><span class="line">        <span class="keyword">if</span> ord(i) &gt; <span class="number">52</span> <span class="keyword">or</span> ord(i) &lt; <span class="number">48</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line"></span><br><span class="line">    x = str(hashlib.new(<span class="string">&#x27;md5&#x27;</span>, bytes((obj.text), encoding=<span class="string">&#x27;utf8&#x27;</span>)).hexdigest())</span><br><span class="line">    <span class="keyword">if</span> x[:<span class="number">6</span>] != <span class="string">&#x27;e3a912&#x27;</span>:</span><br><span class="line">        <span class="keyword">pass</span><span class="comment">#sys.exit()</span></span><br><span class="line">    obj.flag = x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;g&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(obj.text), <span class="number">2</span>):</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        a = int(obj.text[i])</span><br><span class="line">        b = int(obj.text[(i + <span class="number">1</span>)])</span><br><span class="line">        obj.arr2[a][b] = j</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;h&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> obj.arr2[<span class="number">0</span>][<span class="number">1</span>] != <span class="number">24</span> <span class="keyword">or</span> obj.arr2[<span class="number">4</span>][<span class="number">3</span>] != <span class="number">2</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> obj.arr2[<span class="number">0</span>][<span class="number">2</span>] != <span class="number">1</span> <span class="keyword">or</span> obj.arr2[<span class="number">2</span>][<span class="number">3</span>] != <span class="number">20</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> obj.arr2[<span class="number">1</span>][<span class="number">0</span>] != <span class="number">23</span> <span class="keyword">or</span> obj.arr2[<span class="number">3</span>][<span class="number">4</span>] != <span class="number">3</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@obj.wrapper(&#x27;k&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            num += obj.arr2[a][i]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> num != obj.num:</span><br><span class="line">            sys.exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            num += obj.arr2[i][b]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> num != obj.num:</span><br><span class="line">            sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">obj.arr1 = [</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;welcome baby~ &#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;input your flag~:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;d&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;your input is:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&quot;let&#x27;s check......&quot;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;e&#x27;</span>, <span class="number">0.5</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]]],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;f&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;g&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;h&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">-1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">1</span>, <span class="number">-1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">2</span>, <span class="number">-1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">3</span>, <span class="number">-1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">4</span>, <span class="number">-1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;k&#x27;</span>, <span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;Goodjob!&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;The flag is vnctf&#123;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [</span><br><span class="line">  <span class="string">&#x27;c&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>]]</span><br><span class="line">obj.checkflag()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>仔细看看就知道是用wrapper写了个虚拟机，将文字作为指令然后调用函数。程序流程是弄了个5x5的数组然后每行或者每列加起来为65，且数组里面1到25每个数字不能重复，最后弄了个md5验证。</p><h2 id="解题脚本-3"><a href="#解题脚本-3" class="headerlink" title="解题脚本"></a>解题脚本</h2><p>直接用z3约束求解然后再每一个md5一下就找到flag，z3的脚本我参考了解数独的脚本<br><a href="https://blog.csdn.net/P01yH3dr0n/article/details/106784526">Python Z3约束求解器解决数独问题</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># 约束变元数组，变元名为a_行_列</span></span><br><span class="line">arr=[[Int(<span class="string">&#x27;a_%d_%d&#x27;</span>%(i,j)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>)] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始条件，数字表示提示数，0表示未填入</span></span><br><span class="line">problem=((<span class="number">00</span>,<span class="number">24</span>, <span class="number">1</span>,<span class="number">00</span>,<span class="number">00</span>),</span><br><span class="line">         (<span class="number">23</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>),</span><br><span class="line">         (<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">20</span>,<span class="number">00</span>),</span><br><span class="line">         (<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>, <span class="number">3</span>),</span><br><span class="line">         (<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>, <span class="number">2</span>,<span class="number">00</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数独规则约束</span></span><br><span class="line">Sudoku = []</span><br><span class="line">Sudoku=[And(arr[i][j]&gt;<span class="number">0</span>,arr[i][j]&lt;=<span class="number">25</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>)]      <span class="comment"># 数字为1~25的整数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    Sudoku+=[arr[i][<span class="number">0</span>]+arr[i][<span class="number">1</span>]+arr[i][<span class="number">2</span>]+arr[i][<span class="number">3</span>]+arr[i][<span class="number">4</span>]==<span class="number">65</span>]</span><br><span class="line">    Sudoku+=[arr[<span class="number">0</span>][i]+arr[<span class="number">1</span>][i]+arr[<span class="number">2</span>][i]+arr[<span class="number">3</span>][i]+arr[<span class="number">4</span>][i]==<span class="number">65</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">25</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            <span class="keyword">if</span> int(i/<span class="number">5</span>) == j <span class="keyword">and</span> i%<span class="number">5</span> == k: <span class="keyword">continue</span></span><br><span class="line">            Sudoku+=[arr[int(i/<span class="number">5</span>)][i%<span class="number">5</span>]!=arr[j][k]]        <span class="comment"># 所有元素不能相等</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SolveSudoku</span>(<span class="params">board</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;使用Z3约束求解器求解数独，若有解，返回表示可行解的5*5列表；若无解返回None&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> Sudoku,arr</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            <span class="keyword">if</span> board[i][j]!=<span class="number">0</span>:</span><br><span class="line">                Sudoku+=[arr[i][j]==board[i][j]]                                <span class="comment"># 将初始数字作为约束条件添加</span></span><br><span class="line">    s=Solver()</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    s.add(Sudoku)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(s.check()==sat):                                                              <span class="comment"># 检查是否有解</span></span><br><span class="line">        <span class="comment">#fp=open(&quot;log.txt&quot;,&quot;a&quot;,encoding=&quot;utf-8&quot;)</span></span><br><span class="line">        m=s.model()                                                             <span class="comment"># 获取解的模型</span></span><br><span class="line">        res=[[m[arr[i][j]] <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>)] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)]</span><br><span class="line">        <span class="comment">#for k in res:</span></span><br><span class="line">        <span class="comment">#    print(k)</span></span><br><span class="line">        text = [<span class="string">&quot;&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">25</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">                text[m[arr[i][j]].as_long()<span class="number">-1</span>] = str(i)+str(j)</span><br><span class="line">        t = <span class="string">&quot;&quot;</span>.join(text)</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        output = str(n).zfill(<span class="number">4</span>)+<span class="string">&quot;: &quot;</span>+t</span><br><span class="line">        print(output)</span><br><span class="line">        <span class="comment">#fp.write(output+&quot;\n&quot;)</span></span><br><span class="line">        <span class="comment">#fp.close()</span></span><br><span class="line">        x = str(hashlib.new(<span class="string">&#x27;md5&#x27;</span>, bytes(t, encoding=<span class="string">&#x27;utf8&#x27;</span>)).hexdigest())</span><br><span class="line">        <span class="keyword">if</span> x[:<span class="number">6</span>] == <span class="string">&#x27;e3a912&#x27;</span>:</span><br><span class="line">            print(<span class="string">&quot;Found!&quot;</span>,n)</span><br><span class="line">            print(<span class="string">&quot;The flag is vnctf&#123;%s&#125;&quot;</span>%x)</span><br><span class="line">            sys.exit()</span><br><span class="line">        s.add(Or(arr[<span class="number">0</span>][<span class="number">0</span>]!=res[<span class="number">0</span>][<span class="number">0</span>],arr[<span class="number">0</span>][<span class="number">1</span>]!=res[<span class="number">0</span>][<span class="number">1</span>],arr[<span class="number">0</span>][<span class="number">2</span>]!=res[<span class="number">0</span>][<span class="number">2</span>],arr[<span class="number">0</span>][<span class="number">3</span>]!=res[<span class="number">0</span>][<span class="number">3</span>],arr[<span class="number">0</span>][<span class="number">4</span>]!=res[<span class="number">0</span>][<span class="number">4</span>],</span><br><span class="line">                 arr[<span class="number">1</span>][<span class="number">0</span>]!=res[<span class="number">1</span>][<span class="number">0</span>],arr[<span class="number">1</span>][<span class="number">1</span>]!=res[<span class="number">1</span>][<span class="number">1</span>],arr[<span class="number">1</span>][<span class="number">2</span>]!=res[<span class="number">1</span>][<span class="number">2</span>],arr[<span class="number">1</span>][<span class="number">3</span>]!=res[<span class="number">1</span>][<span class="number">3</span>],arr[<span class="number">1</span>][<span class="number">4</span>]!=res[<span class="number">1</span>][<span class="number">4</span>],</span><br><span class="line">                 arr[<span class="number">2</span>][<span class="number">0</span>]!=res[<span class="number">2</span>][<span class="number">0</span>],arr[<span class="number">2</span>][<span class="number">1</span>]!=res[<span class="number">2</span>][<span class="number">1</span>],arr[<span class="number">2</span>][<span class="number">2</span>]!=res[<span class="number">2</span>][<span class="number">2</span>],arr[<span class="number">2</span>][<span class="number">3</span>]!=res[<span class="number">2</span>][<span class="number">3</span>],arr[<span class="number">2</span>][<span class="number">4</span>]!=res[<span class="number">2</span>][<span class="number">4</span>],</span><br><span class="line">                 arr[<span class="number">3</span>][<span class="number">0</span>]!=res[<span class="number">3</span>][<span class="number">0</span>],arr[<span class="number">3</span>][<span class="number">1</span>]!=res[<span class="number">3</span>][<span class="number">1</span>],arr[<span class="number">3</span>][<span class="number">2</span>]!=res[<span class="number">3</span>][<span class="number">2</span>],arr[<span class="number">3</span>][<span class="number">3</span>]!=res[<span class="number">3</span>][<span class="number">3</span>],arr[<span class="number">3</span>][<span class="number">4</span>]!=res[<span class="number">3</span>][<span class="number">4</span>],</span><br><span class="line">                 arr[<span class="number">4</span>][<span class="number">0</span>]!=res[<span class="number">4</span>][<span class="number">0</span>],arr[<span class="number">4</span>][<span class="number">1</span>]!=res[<span class="number">4</span>][<span class="number">1</span>],arr[<span class="number">4</span>][<span class="number">2</span>]!=res[<span class="number">4</span>][<span class="number">2</span>],arr[<span class="number">4</span>][<span class="number">3</span>]!=res[<span class="number">4</span>][<span class="number">3</span>],arr[<span class="number">4</span>][<span class="number">4</span>]!=res[<span class="number">4</span>][<span class="number">4</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span>                                                             <span class="comment"># 无解返回None</span></span><br><span class="line"></span><br><span class="line">SolveSudoku(problem)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">......</span></span><br><span class="line"><span class="string">4640: 02433420112112034430403122130414004132233324100142</span></span><br><span class="line"><span class="string">Found! 4640</span></span><br><span class="line"><span class="string">The flag is vnctf&#123;e3a912c1e911ad82544af0c3d753f44f&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>第一次做这种限制md5的题目，最后爆了一段时间（大概半小时）才爆出来</p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CUMTCTF 2021</title>
      <link href="/2021/01/28/cumtctf-2021/"/>
      <url>/2021/01/28/cumtctf-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="re1re1-rar"><a href="#re1re1-rar" class="headerlink" title="re1re1.rar"></a>re1<a href="re1.rar">re1.rar</a></h1><p>扔进Exeinfo PE，64位ELF文件，无壳<br><img src="/2021/01/28/cumtctf-2021/1612100759551-ac3004af-0808-4d70-a6ee-a1c44f8b49f3.png" alt="image.png"><br>ida分析找到主函数，sub_950函数应该是进行了某种加密，然后再和v9比较<br><img src="/2021/01/28/cumtctf-2021/1612100901425-5f3d3a28-f2ab-41ad-ab29-888dffa20340.png" alt="image.png"><br>进入sub_950函数，网上查了一轮发现是进行了base58编码<br><img src="/2021/01/28/cumtctf-2021/1612100964000-2e925196-71c2-42f3-81ac-7def9c9e594a.png" alt="image.png"><br>python base58解码即出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base58</span><br><span class="line"></span><br><span class="line">enflag = <span class="string">&quot;34avux4BwXYJzh1nHK1oG5xTKeBSCERZs4xC&quot;</span></span><br><span class="line">print(base58.b58decode(enflag))<span class="comment"># CUMTCTF&#123;8Ase5B_1s_Ea5y~~~&#125;</span></span><br></pre></td></tr></table></figure><h1 id="re2re2-rar"><a href="#re2re2-rar" class="headerlink" title="re2re2.rar"></a>re2<a href="re2.rar">re2.rar</a></h1><p>扔进Exeinfo PE，32位exe，Aspack壳<br><img src="/2021/01/28/cumtctf-2021/1612101439359-8754c8c6-f9a9-472c-9245-c1005151dcc5.png" alt="image.png"><br>尝试用网上的脱壳机不行决定手动脱壳，用od打开<br><img src="/2021/01/28/cumtctf-2021/1612101605135-14bf87eb-e88a-4f3f-826f-6a2370ac40a3.png" alt="image.png"><br>跟着网上的ESP定律脱壳视频学，F8一下再右键ESP寄存器选择 HW_break[ESP]，然后再F9，取消断点<br><img src="/2021/01/28/cumtctf-2021/1612101778825-17bfcff2-7664-472c-aa87-fe3311de1ba8.png" alt="image.png"><br>再F8几下进入壳内的exe函数，然后就找到了程序真正的OEP<br><img src="/2021/01/28/cumtctf-2021/1612101865489-47b87a19-ff75-429d-b518-b5236534ab69.png" alt="image.png"><br>选择 插件-&gt;OllyDump，自动选择了当前EIP作为OEP，啥都不用选直接按脱壳，保存为dump.exe<br><img src="/2021/01/28/cumtctf-2021/1612102019530-8d647ba0-52ed-4171-8361-09b384379f85.png" alt="image.png"><br>用IDA进行分析，题目给了提示说要动调（实际上直接静态看也能看出来）<br><img src="/2021/01/28/cumtctf-2021/1612103096213-d2e72b3a-bf74-453c-9089-e884369e252a.png" alt="image.png"><br>双击进入验证函数再双击进入unk_403020，shift+E提取数据<br><img src="/2021/01/28/cumtctf-2021/1612103115849-4fb7377f-103e-4852-914f-88f63ea7d81e.png" alt="image.png"><br>进入加密函数sub_4026A0，直接分析if判断或者动调一下就知道只会执行else语句<br><img src="/2021/01/28/cumtctf-2021/1612103258605-0b76ca7d-9974-432d-bbe5-02506b23852e.png" alt="image.png"><br>a1为0x12345678和flag的异或，所以a1%a2=a1。写脚本即出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">enflag = [</span><br><span class="line">    <span class="number">0x1A</span>,<span class="number">0x0C</span>,<span class="number">0x14</span>,<span class="number">0x0D</span>,<span class="number">0x1A</span>,<span class="number">0x0D</span>,<span class="number">0x1F</span>,<span class="number">0x22</span>,<span class="number">0x11</span>,<span class="number">0x38</span>,</span><br><span class="line">    <span class="number">0x2F</span>,<span class="number">0x3C</span>,<span class="number">0x06</span>,<span class="number">0x3F</span>,<span class="number">0x2C</span>,<span class="number">0x17</span>,<span class="number">0x06</span>,<span class="number">0x1F</span>,<span class="number">0x69</span>,<span class="number">0x0B</span>,</span><br><span class="line">    <span class="number">0x06</span>,<span class="number">0x11</span>,<span class="number">0x69</span>,<span class="number">0x35</span>,<span class="number">0x30</span>,<span class="number">0x3D</span>,<span class="number">0x38</span>,<span class="number">0x20</span>,<span class="number">0x78</span>,<span class="number">0x78</span>,</span><br><span class="line">    <span class="number">0x78</span>,<span class="number">0x24</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">v9 = <span class="number">0x12345678</span></span><br><span class="line">v10 = <span class="number">0x87654321</span></span><br><span class="line">v11 = <span class="number">0x22222222</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">flag</span>):</span></span><br><span class="line">    <span class="comment"># return [hex((v10^(v9^ord(f))%v11)&amp;0xFF) for f in flag]</span></span><br><span class="line">    <span class="keyword">return</span> [hex((v10^(v9^ord(f)))&amp;<span class="number">0xFF</span>) <span class="keyword">for</span> f <span class="keyword">in</span> flag]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">enflag</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([chr(e^(v10&amp;<span class="number">0xFF</span>)^(v9&amp;<span class="number">0xFF</span>)) <span class="keyword">for</span> e <span class="keyword">in</span> enflag]) </span><br><span class="line"></span><br><span class="line">print(decode(enflag))<span class="comment"># CUMTCTF&#123;Have_fuN_F0R_H0liday!!!&#125;</span></span><br></pre></td></tr></table></figure><h1 id="re4re4-rar"><a href="#re4re4-rar" class="headerlink" title="re4re4.rar"></a>re4<a href="re4.rar">re4.rar</a></h1><p>这题让我好好学了一下pyc的逆向还有pyc的字节码混淆<br>参考：<a href="https://blog.csdn.net/ir0nf1st/article/details/61650984">通过字节码混淆来保护Python代码</a><br><a href="https://www.yuque.com/cyberangel/rg9gdm/hg3evy">python逆向学习-pyc文件的反混淆(python2)</a><br>这题和第二篇文章一样（图片并非题目文件）<br><img src="/2021/01/28/cumtctf-2021/1593767392138-ecd97b38-b3c6-4b36-a4cd-e883021646a5.png"><br>找到pyc文件中的两个 71 03 00 71 00 06 64 FF 并删掉，然后将第一个73后面的32改为22，因为删掉了16个字节。<br>用uncompyle6 转为python源码，得到下面的代码（有修改），爆破得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;plz input flag:&#x27;</span>)</span><br><span class="line">flag = input(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">b = [<span class="number">237</span>, <span class="number">255</span>, <span class="number">243</span>, <span class="number">225</span>, <span class="number">238</span>, <span class="number">248</span>, <span class="number">246</span>, <span class="number">107</span>, <span class="number">37</span>, <span class="number">95</span>, <span class="number">7</span>, <span class="number">30</span>, <span class="number">36</span>, <span class="number">229</span>, <span class="number">79</span>, <span class="number">45</span>, <span class="number">20</span>, <span class="number">76</span>, <span class="number">30</span>, <span class="number">248</span>, <span class="number">231</span>, <span class="number">227</span>, <span class="number">75</span>, <span class="number">243</span>, <span class="number">62</span>, <span class="number">238</span>, <span class="number">19</span>, <span class="number">77</span>, <span class="number">29</span>, <span class="number">227</span>, <span class="number">2</span>, <span class="number">224</span>, <span class="number">110</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span>(<span class="params">a</span>):</span></span><br><span class="line">    x = ord(a)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">96</span> &lt; x &lt;= <span class="number">122</span>:</span><br><span class="line">        x = x - <span class="number">97</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">if</span> <span class="number">65</span> &lt; x &lt;= <span class="number">90</span>:</span><br><span class="line">        x = x - <span class="number">65</span> ^ <span class="number">255</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">flag,i</span>):</span></span><br><span class="line">    key = <span class="string">&#x27;QuanTum&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">96</span> &lt; ord(key[(i % <span class="number">7</span>)]) &lt;= <span class="number">122</span>:</span><br><span class="line">        m = change(key[(i % <span class="number">7</span>)])</span><br><span class="line">        n = change(flag)</span><br><span class="line">        <span class="keyword">return</span> m ^ n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        m = change(chr(ord(key[(i % <span class="number">7</span>)]) + <span class="number">32</span>))</span><br><span class="line">        n = change(flag)</span><br><span class="line">        <span class="keyword">return</span> m ^ n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">65</span>,<span class="number">123</span>):</span><br><span class="line">        <span class="keyword">if</span> encode(chr(j),i) == b[i]: print(chr(j),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(len(b)):</span><br><span class="line">    brute(k)</span><br><span class="line"><span class="comment"># CUMTCTF_knW_uAnTUM_MChAnIcS</span></span><br></pre></td></tr></table></figure><h1 id="REgameREgame-zip"><a href="#REgameREgame-zip" class="headerlink" title="REgameREgame.zip"></a>REgame<a href="REgame.zip">REgame.zip</a></h1><p>扔进Exeinfo PE，64位ELF文件，无壳，中间有加花，去花后F5得到下面的伪代码<br><img src="/2021/01/28/cumtctf-2021/1612105773479-31994ad9-3423-4ab8-a603-f3a84ab47874.png" alt="image.png"><br>进入验证函数sub_40092D，这里删除了真正的答案，因为限制了答案需要nc得到<br><img src="/2021/01/28/cumtctf-2021/1612110294106-353ca328-3d28-4cc6-b20c-0cb9bf633ec0.png" alt="image.png"><br>再进入sub_400967函数，发现将每两个输入将字串对应转成数值，然后10<em>v8+v9是把两个数转为两位数，且下一次输入的个位十位对应和上一次输入的必须至少有一个相同<br><img src="/2021/01/28/cumtctf-2021/1612105984406-bd1c7623-e3d5-4b3e-a42b-aeffa2715d95.png" alt="image.png"><br>其中byte_602180长这样（我转换了一下）<br><img src="/2021/01/28/cumtctf-2021/1612109434944-1ad4d538-43b3-4bab-9001-388ab312d5f8.png" alt="image.png"><br>scanf(sub_400967)和到sub_4008D6函数中间的代码做了一些操作，但实际上就是把含有scanf函数的return转为字串放进 转换函数里<br><img src="/2021/01/28/cumtctf-2021/1612109789322-8b6a6f1d-236b-40fe-bb1c-391bbc7a4dd2.png" alt="image.png"><img src="/2021/01/28/cumtctf-2021/1612109802911-81649700-4e87-4c78-bbbf-02f448ae4a76.png" alt="image.png"><br>转换函数将”CFUMT”字符串的一些组合作为”abcdefghijklmnopqrstuvwxyz!.?</em>“的索引<br><img src="/2021/01/28/cumtctf-2021/1612109942798-4e6babe2-ed3f-4134-9e8c-a8948414a242.png" alt="image.png"><br>总的流程就是（看下面的脚本）<br>输入key1索引-&gt; 转换为”CFUMT”的组合-&gt;转换为”abcdefghijklmnopqrstuvwxyz!.?*”的索引-&gt;验证最后的字串为”johnnysilverhand”-&gt;成功<br>实际上可以完全写脚本解出来，我最后选择手搓</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">key1 = <span class="string">&quot;AZTUYPFQAZUIVZVCRAAIDAZMVIACZDHZHZHVIHAIHDMFUTUTDIMUCMZFTHDHVDVBDHVMACZFUTBDCRBDFABBCDRIRICBTDFIVDBR&quot;</span></span><br><span class="line">key2 = <span class="string">&quot;johnnysilverhand&quot;</span></span><br><span class="line">key3 = <span class="string">&quot;CUMTF&quot;</span></span><br><span class="line">dict1 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz!.?*&quot;</span></span><br><span class="line">dict2 = [<span class="string">&quot;CFUMT&quot;</span>,<span class="string">&quot;CFUTM&quot;</span>,<span class="string">&quot;CTFMU&quot;</span>,<span class="string">&quot;CTFUM&quot;</span>,<span class="string">&quot;CTMFU&quot;</span>,<span class="string">&quot;FCMTU&quot;</span>,<span class="string">&quot;FCMUT&quot;</span>,<span class="string">&quot;FCUTM&quot;</span>,<span class="string">&quot;FMCTU&quot;</span>,<span class="string">&quot;FTMUC&quot;</span>,<span class="string">&quot;FTUCM&quot;</span>,<span class="string">&quot;FTUMC&quot;</span>,<span class="string">&quot;FUCMT&quot;</span>,<span class="string">&quot;FUTCM&quot;</span>,<span class="string">&quot;FUTMC&quot;</span>,<span class="string">&quot;MCFTU&quot;</span>,<span class="string">&quot;MUCFT&quot;</span>,<span class="string">&quot;MUCTF&quot;</span>,<span class="string">&quot;MUTCF&quot;</span>,<span class="string">&quot;TUCFM&quot;</span>,<span class="string">&quot;TUCMF&quot;</span>,<span class="string">&quot;TUFMC&quot;</span>,<span class="string">&quot;TUMCF&quot;</span>,<span class="string">&quot;TUMFC&quot;</span>,<span class="string">&quot;UCFMT&quot;</span>,<span class="string">&quot;UCMFT&quot;</span>,<span class="string">&quot;UCMTF&quot;</span>,<span class="string">&quot;UCTFM&quot;</span>,<span class="string">&quot;UTMCF&quot;</span>,<span class="string">&quot;UTMFC&quot;</span>]</span><br><span class="line">dict3 = &#123;&#125;</span><br><span class="line">enflag1 = [dict2[dict1.index(c)] <span class="keyword">for</span> c <span class="keyword">in</span> key2]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> key3:</span><br><span class="line">    it = re.finditer(c,key1)</span><br><span class="line">    dict3[c] = [match.start() <span class="keyword">for</span> match <span class="keyword">in</span> it]</span><br><span class="line"></span><br><span class="line">print(enflag1)</span><br><span class="line">print(dict3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [&#x27;FTMUC&#x27;, &#x27;FUTMC&#x27;, &#x27;FCUTM&#x27;, &#x27;FUTCM&#x27;, &#x27;FUTCM&#x27;, </span></span><br><span class="line"><span class="comment">#  &#x27;UCFMT&#x27;, &#x27;MUTCF&#x27;, &#x27;FMCTU&#x27;, &#x27;FTUMC&#x27;, &#x27;TUFMC&#x27;,</span></span><br><span class="line"><span class="comment">#  &#x27;CTMFU&#x27;, &#x27;MUCTF&#x27;, &#x27;FCUTM&#x27;, &#x27;CFUMT&#x27;, &#x27;FUTCM&#x27;, &#x27;CTFUM&#x27;]</span></span><br><span class="line"><span class="comment"># &#123;&#x27;C&#x27;: [15, 27, 52, 69, 76, 84, 90], </span></span><br><span class="line"><span class="comment">#  &#x27;U&#x27;: [3, 10, 44, 46, 51, 72], </span></span><br><span class="line"><span class="comment">#  &#x27;M&#x27;: [23, 42, 50, 53, 67],</span></span><br><span class="line"><span class="comment">#  &#x27;T&#x27;: [2, 45, 47, 56, 73, 92], </span></span><br><span class="line"><span class="comment">#  &#x27;F&#x27;: [6, 43, 55, 71, 80, 94]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 0602424484 j</span></span><br><span class="line"><span class="comment"># 0603732327 o</span></span><br><span class="line"><span class="comment"># 0676465650 h</span></span><br><span class="line"><span class="comment"># 0646565253 n</span></span><br><span class="line"><span class="comment"># 0646565253 n</span></span><br><span class="line"><span class="comment"># 1015555056 y</span></span><br><span class="line"><span class="comment"># 5051565255 s</span></span><br><span class="line"><span class="comment"># 8050909272 i</span></span><br><span class="line"><span class="comment"># 0656464252 l</span></span><br><span class="line"><span class="comment"># 0203435352 v</span></span><br><span class="line"><span class="comment"># 9092424303 e</span></span><br><span class="line"><span class="comment"># 5010154555 r</span></span><br><span class="line"><span class="comment"># 0676465650 h</span></span><br><span class="line"><span class="comment"># 9080105056 a</span></span><br><span class="line"><span class="comment"># 0646565250 n</span></span><br><span class="line"><span class="comment"># 9092944442 d</span></span><br><span class="line"><span class="comment"># input=0602424484060373232706764656500646565253064656525310155550565051565255805090927206564642520203435352909242430350101545550676465650908010505606465652509092944442</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入input进题目的nc里，即可得flag<br><img src="/2021/01/28/cumtctf-2021/1612110457580-36ef444f-c1a0-4f49-a4a3-ecdf598488e7.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF比赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Js逆向</title>
      <link href="/2021/01/10/js-reverse/"/>
      <url>/2021/01/10/js-reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前因为某些原因需要逆向js，而且逆向之后需要打包成一个浏览器插件方便使用</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>js逆向本质上是将网站的js重定向为插件内含有的js，从而做到破解的效果<br>在网上找到了<a href="https://chrome.google.com/webstore/detail/reres/gieocpkbblidnocefjakldecahgeeica?hl=zh-CN">Reres</a>这个插件，将插件代码提取出来，新建一个重定向列表的文件<code>url_setting.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ReResMap = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 网站的js路径</span></span><br><span class="line">    <span class="string">&quot;req&quot;</span>: <span class="string">&quot;https://jameshoi.github.io/files/js-reverse/login.js&quot;</span>, </span><br><span class="line">    <span class="comment">// 修改后的js路径，存储在插件里面</span></span><br><span class="line">    <span class="string">&quot;res&quot;</span>: <span class="string">&quot;chrome-extension://&quot;</span>+chrome.runtime.id+<span class="string">&quot;/js/example.js&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>更多关于浏览器插件的功能可以参考这个文章：<a href="https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html">【干货】Chrome插件(扩展)开发全攻略</a></p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p><a href="http://jameshoi.github.io/files/js-reverse">测试网站</a><br><a href="https://imgchr.com/i/s17a9S"><img src="/2021/01/10/js-reverse/s17a9S.png" alt="s17a9S.png"></a><br>提取login.js，格式化并修改保存到js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Qfu1 = <span class="built_in">window</span>[<span class="string">&quot;\x64\x6f\x63\x75\x6d\x65\x6e\x74&quot;</span>][<span class="string">&#x27;\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74\x42\x79\x49\x64&#x27;</span>](<span class="string">&#x27;\x62\x74\x6e&#x27;</span>);</span><br><span class="line">Qfu1[<span class="string">&#x27;\x6f\x6e\x63\x6c\x69\x63\x6b&#x27;</span>] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> LkZPLz_2 = <span class="built_in">window</span>[<span class="string">&quot;\x64\x6f\x63\x75\x6d\x65\x6e\x74&quot;</span>][<span class="string">&#x27;\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74\x73\x42\x79\x4e\x61\x6d\x65&#x27;</span>](<span class="string">&quot;\x75\x73\x65\x72\x6e\x61\x6d\x65&quot;</span>)[<span class="number">0</span>][<span class="string">&#x27;\x76\x61\x6c\x75\x65&#x27;</span>] == <span class="string">&quot;\x61\x64\x6d\x69\x6e&quot;</span> &amp;&amp; <span class="built_in">window</span>[<span class="string">&quot;\x64\x6f\x63\x75\x6d\x65\x6e\x74&quot;</span>][<span class="string">&#x27;\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74\x73\x42\x79\x4e\x61\x6d\x65&#x27;</span>](<span class="string">&quot;\x70\x61\x73\x73\x77\x6f\x72\x64&quot;</span>)[<span class="number">0</span>][<span class="string">&#x27;\x76\x61\x6c\x75\x65&#x27;</span>] == <span class="string">&quot;\x61\x64\x6d\x69\x6e&quot;</span>;</span><br><span class="line">    <span class="comment">//账号密码均为admin</span></span><br><span class="line">    <span class="comment">//若变量LkZPLz_2为真，则登录成功</span></span><br><span class="line">    LkZPLz_2 = <span class="literal">true</span>; <span class="comment">//破解，令其永远登录成功</span></span><br><span class="line">    <span class="keyword">if</span> (LkZPLz_2) <span class="built_in">window</span>[<span class="string">&#x27;\x6c\x6f\x63\x61\x74\x69\x6f\x6e&#x27;</span>] = <span class="string">&quot;\x2e\x2f\x6c\x6f\x67\x69\x6e\x2e\x68\x74\x6d\x6c&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">window</span>[<span class="string">&quot;\x61\x6c\x65\x72\x74&quot;</span>](<span class="string">&quot;\x49\x6e\x63\x6f\x72\x72\x65\x63\x74 \x75\x73\x65\x72\x6e\x61\x6d\x65 \x6f\x72 \x70\x61\x73\x73\x77\x6f\x72\x64\x2e&quot;</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>安装插件<br><a href="https://imgchr.com/i/s17E01"><img src="/2021/01/10/js-reverse/s17E01.png" alt="s17E01.png"></a>  </p><p>登录成功<br><a href="https://imgchr.com/i/s17i6J"><img src="/2021/01/10/js-reverse/s17i6J.png" alt="s17i6J.png"></a></p><h1 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h1><p><a href="https://github.com/JamesHoi/js-reverse-plugin">Github源码</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网易公开课下载器，支持多线程，可分别下载视频及字幕</title>
      <link href="/2020/03/22/open163-downloader/"/>
      <url>/2020/03/22/open163-downloader/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p> 网上一直都找不到网易公开课的下载工具。哎，那不如自己写一个。<br> 我这个工具只能提取易公开课的视频，不能提取网易云课堂</p><ol><li>实现了多线程功能</li><li>实现了提取字幕功能</li><li>实现了选择画质功能</li><li>实现了下载已合成字幕视频功能</li><li>添加了分集下载功能</li></ol><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="提取网站内容"><a href="#提取网站内容" class="headerlink" title="提取网站内容"></a>提取网站内容</h2><p>在浏览器内的开发者工具的Console内输入<code>__NUXT__.state.movie.moiveList</code>可获取影片列表<br><img src="/2020/03/22/open163-downloader/8I0xGF.png" alt="img"></p><p>index:视频列表索引<br><code>__NUXT__.state.movie.moiveList</code>视频列表<br><code>__NUXT__.state.movie.moiveList[index].title</code>视频名称<br><code>__NUXT__.state.movie.moiveList[index].mp4SdUrl</code>标清视频链接<br><code>__NUXT__.state.movie.moiveList[index].mp4HdUrl</code>高清视频链接<br><code>__NUXT__.state.movie.moiveList[index].mp4ShdUrl</code>超清视频链接<br><code>__NUXT__.state.movie.moiveList[index].mp4ShareUrl</code>手机观看视频链接（包含字幕）</p><p><code>__NUXT__.state.movie.moiveList[index].subList</code>字幕列表<br><code>__NUXT__.state.movie.moiveList[index].subList[inx].subName</code>字幕语言<br><code>__NUXT__.state.movie.moiveList[index].subList[inx].subUrl</code>字幕链接</p><p>然后用Python的Selenium模块通过运行js脚本提取<br><code>data = driver.execute_script(&quot;return &lt;__NUXT__命令&gt;&quot;)</code></p><h2 id="下载模块"><a href="#下载模块" class="headerlink" title="下载模块"></a>下载模块</h2><p>用requests模块可以实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadFile</span>(<span class="params">url,path, name</span>):</span></span><br><span class="line">    r = requests.get(url, stream=<span class="literal">True</span>,verify=<span class="literal">False</span>)</span><br><span class="line">    length = float(r.headers[<span class="string">&#x27;content-length&#x27;</span>])</span><br><span class="line">    f = open(path+name, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    count_tmp = <span class="number">0</span></span><br><span class="line">    time1 = time.time()</span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">512</span>):</span><br><span class="line">        <span class="keyword">if</span> chunk:</span><br><span class="line">            f.write(chunk)</span><br><span class="line">            count += len(chunk)</span><br><span class="line">            <span class="keyword">if</span> time.time() - time1 &gt; <span class="number">2</span>:</span><br><span class="line">                p = count / length * <span class="number">100</span></span><br><span class="line">                speed = (count - count_tmp) / <span class="number">1024</span> / <span class="number">1024</span> / <span class="number">2</span></span><br><span class="line">                count_tmp = count</span><br><span class="line">                print(name + <span class="string">&#x27;: &#x27;</span> + formatFloat(p) + <span class="string">&#x27;%&#x27;</span> + <span class="string">&#x27; Speed: &#x27;</span> + formatFloat(speed) + <span class="string">&#x27;M/S&#x27;</span>)</span><br><span class="line">                time1 = time.time()</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">formatFloat</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.format(num)</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/sea-stream/p/11082356.html">参考链接</a></p><h1 id="软件使用教程"><a href="#软件使用教程" class="headerlink" title="软件使用教程"></a>软件使用教程</h1><p><img src="/2020/03/22/open163-downloader/8I1cB4.png"><br>可通过以下几种方式下载</p><h2 id="方法一-通过新版课程链接进行下载"><a href="#方法一-通过新版课程链接进行下载" class="headerlink" title="方法一.通过新版课程链接进行下载"></a>方法一.通过新版课程链接进行下载</h2><p><img src="/2020/03/22/open163-downloader/8InIc4.png"><br><a href="http://open.163.com/newview/movie/courseintro?newurl=/special/opencourse/thought.html">范例网页</a></p><h2 id="方法二-通过旧版课程链接进行下载"><a href="#方法二-通过旧版课程链接进行下载" class="headerlink" title="方法二.通过旧版课程链接进行下载"></a>方法二.通过旧版课程链接进行下载</h2><p><img src="/2020/03/22/open163-downloader/8IQHxO.png"><br><a href="http://open.163.com/special/sp/thought.html">范例网页</a></p><h2 id="方法三-通过视频链接进行下载"><a href="#方法三-通过视频链接进行下载" class="headerlink" title="方法三.通过视频链接进行下载"></a>方法三.通过视频链接进行下载</h2><p><img src="/2020/03/22/open163-downloader/8I1Qht.png"><br><a href="http://open.163.com/newview/movie/free?pid=M8KB8VE0G&mid=M8KBDR4UL">范例网页</a></p><h2 id="下载选项"><a href="#下载选项" class="headerlink" title="下载选项"></a>下载选项</h2><ol><li>可选择多少个视频同时下载（线程个数）</li><li>可选择字幕和影片是否分开</li><li>可选择视频画质（如果原视频可以选择）</li><li>可分集下载，用逗号隔开<br>例如一共有11集，不需要下载第2集和第6集，填1,3-5,7-11<br>下载全部填all，下载当前视频填origin<br>若填写课程链接默认下载全部，视频链接默认下载当前视频  </li></ol><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/2020/03/22/open163-downloader/232941hdfspz41c4jtpx3x.png"><br><img src="/2020/03/22/open163-downloader/233037coyegoc67yopgog6.png"><br><img src="/2020/03/22/open163-downloader/112741tqwwwyybwwz3w7o8.png"><br>家里是100M宽带，经过测试基本能达到满速</p><h1 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h1><p><a href="https://github.com/JamesHoi/Open163-Downloader">Github项目</a></p><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p><a href="https://github.com/JamesHoi/Open163-Downloader/releases">Github发布页</a><br><a href="https://share.weiyun.com/5CZQoVH">微云下载</a><br><b>喜欢的话多给Github项目star和点评吧!!</b></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于爬虫的黑白棋对战</title>
      <link href="/2020/03/22/reversi/"/>
      <url>/2020/03/22/reversi/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个爬虫是19年写的，当时正在学习爬虫<br><img src="/2020/03/22/reversi/8I7KyR.gif"></p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>定位棋盘html id后模拟鼠标点击，点击后等待电脑。<br><img src="/2020/03/22/reversi/8IHmAf.png"><br>定位棋子数id，然后显示在软件中<br><img src="/2020/03/22/reversi/8IHX8g.png"></p><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p><a href="https://github.com/JamesHoi/Reversi-crawler">Github源码</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows系统下使用Github进行Hexo博客建站</title>
      <link href="/2020/02/13/windows-hexo/"/>
      <url>/2020/02/13/windows-hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><p>其实网上一查一大把，这里就不详细介绍了<br>可以参考这个<a href="https://blog.csdn.net/qq_31880107/article/details/86688467">windows下Hexo博客搭建过程</a></p><h1 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h1><p>Markdown我个人建议用vscode编写，尝试过Markdownpad，感觉预览的效果不是特别好</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>首先推荐的是Markdown Preview Enhanced插件，安装完后可以浏览Markdown</p><p><img src="/2020/02/13/windows-hexo/8ICCBF.png" alt="Markdown Preview Enhanced"></p><center>Markdown Preview Enhanced</center> <h>另外一个推荐的是Markdown Command Assist，安装后在编辑md的时候右键可以一键添加Markdown格式 </h>![Markdown Command Assist](windows-hexo/8ICtjf.png)<center>Markdown Command Assist</center><h2 id="快速上传文章"><a href="#快速上传文章" class="headerlink" title="快速上传文章"></a>快速上传文章</h2><p>当你已经完全成功配置了hexo，可以通过添加vscode的任务脚本来进行快速上传<br>点击终端-&gt;配置任务-&gt;使用模板创建tasks.json-&gt;随便选一个</p><p><img src="/2020/02/13/windows-hexo/8IFObT.png" alt="创建tasks.json"></p><center>创建tasks.json</center><p>然后以下文本替换到tasks.json</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F; See https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkId&#x3D;733558</span><br><span class="line">    &#x2F;&#x2F; for the documentation about the tasks.json format</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;hexo server&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;hexo server -s -d&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;hexo build&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;hexo clean&amp;hexo g&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;hexo publish&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;hexo d&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;hexo all&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;hexo clean&amp;hexo g&amp;hexo d&quot;,</span><br><span class="line">            &quot;group&quot;: &#123;</span><br><span class="line">                &quot;kind&quot;: &quot;build&quot;,</span><br><span class="line">                &quot;isDefault&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改完成后点 终端-&gt;运行任务<br><img src="/2020/02/13/windows-hexo/8IkfQ1.png" alt="运行任务"></p><center>运行任务</center>`hexo all`: 一键上传（生成+上传）`hexo build`: 生成网页`hexo publish`: 通过git上传`hexo server`: 打开hexo本地服务器  已将hexo all设置为默认任务，所以可以使用快捷键Ctrl+Shift+B进行一键上传]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将BaiduPCS-Web添加进系统服务，可开机自启</title>
      <link href="/2019/06/17/baidupcs/"/>
      <url>/2019/06/17/baidupcs/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>BaiduPCS-Web并非本人开发，软件只是将其添加进系统服务而已<br>BaiduPCS-Web Github项目</p><p><img src="/2019/06/17/baidupcs/preview.png" alt="软件预览"></p><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>其实原理不难，用了instsrv.exe和srvany.exe实现<br><a href="https://share.weiyun.com/5SM9M79">下载链接</a></p><h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><p>方法一：在命令行输入sc create <b>[服务名称]</b> binpath=[srvany.exe路径]/srvany.exe<br>方法二：在命令行输入[instsrv.exe路径]/instsrv.exe <b>[服务名称]</b> binpath=[srvany.exe路径]/srvany.exe</p><p>若显示<br><b>[SC] CreateService 失败 1783:<br>占位程序接收到错误数据。<br></b><br>则一般的解决方法是关闭安全软件</p><h2 id="更改注册表"><a href="#更改注册表" class="headerlink" title="更改注册表"></a>更改注册表</h2><p>打开注册表 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services&lt;b&gt;[服务名称]<br>服务名称和刚刚输入的一致</p><p>右击新建项，名称为<b>Parameters</b>，然后定位到<b>Parameters</b>项，新建以下几个字符串值。<br>名称 <b>Application</b> 值为你要作为服务运行的<b>程序地址</b>。<br>名称 <b>AppDirectory</b> 值为你要作为服务运行的程序所在文件夹路径。<br>名称 <b>AppParameters</b> 值为你要作为服务运行的程序启动所需要的参数。</p><p><img src="/2019/06/17/baidupcs/85jz6g.png" alt="注册表"></p><center>注册表</center><h2 id="设置为开机自启"><a href="#设置为开机自启" class="headerlink" title="设置为开机自启"></a>设置为开机自启</h2><p>命令行输入sc config [服务名称] start=[启用填auto，禁用填demand]</p><h2 id="主要功能源码"><a href="#主要功能源码" class="headerlink" title="主要功能源码"></a>主要功能源码</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateService</span>(<span class="params"><span class="keyword">int</span> solution</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//新建文件流</span></span><br><span class="line">    FileStream fs = <span class="keyword">new</span> FileStream(startup_path + bat_directory, FileMode.Create);</span><br><span class="line">    StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">    <span class="keyword">string</span> createcommand = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//软件路径</span></span><br><span class="line">    <span class="keyword">string</span> path = <span class="string">&quot;\&quot;&quot;</span>.Insert(<span class="number">1</span>, startup_path);</span><br><span class="line">    <span class="keyword">switch</span> (solution)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//注册方法一</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            createcommand = <span class="string">&quot;sc create &quot;</span> + servicename + <span class="string">&quot; binpath=&quot;</span> + path + <span class="string">&quot;/script/srvany.exe\&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//注册方法二</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            createcommand = path + <span class="string">&quot;/script/instsrv.exe\&quot; &quot;</span> + servicename + <span class="string">&quot; &quot;</span> + path + <span class="string">&quot;/script/srvany.exe\&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//写入命令至bat文件里</span></span><br><span class="line">    sw.WriteLine(createcommand);</span><br><span class="line">    sw.Flush(); sw.Close(); fs.Close();</span><br><span class="line">    <span class="comment">//运行bat</span></span><br><span class="line">    <span class="keyword">string</span> output = RunBat(startup_path + bat_directory);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//检测服务是否添加成功</span></span><br><span class="line">    Thread.Sleep(refresh_delay_ms);</span><br><span class="line">    CheckService();</span><br><span class="line">    <span class="keyword">if</span> (isRecreate) output = recreate_log + output;</span><br><span class="line">    cmdLogTextArea.AppendText(output+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (IsServiceInstalled(servicename) != <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (solution == <span class="number">2</span>) DisplayError();</span><br><span class="line">        <span class="keyword">else</span> DisplayCreateError();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//写入注册表</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        RegistryKey key = Registry.LocalMachine;</span><br><span class="line">        <span class="keyword">string</span> directory = <span class="string">@&quot;System\CurrentControlSet\Services\&quot;</span> + servicename + <span class="string">@&quot;\Parameters&quot;</span>;</span><br><span class="line">        RegistryKey service = key.CreateSubKey(directory);</span><br><span class="line">        service.SetValue(<span class="string">&quot;Application&quot;</span>, startup_path + baidupcs_directory);</span><br><span class="line">        service.SetValue(<span class="string">&quot;AppDirectory&quot;</span>, startup_path + <span class="string">@&quot;\script&quot;</span>);</span><br><span class="line">        service.SetValue(<span class="string">&quot;AppParameters&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        service.Close();</span><br><span class="line">        key.Close();</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;注册表修改失败！请确保已关闭所有安全软件&quot;</span>, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">        DeleteService(<span class="number">0</span>);</span><br><span class="line">        CheckService();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/JamesHoi/BaiduPCS-service-win">Github源码</a></p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p><b>1.如何更新BaiduPCS-Web?</b><br>将script文件夹里的BaiduPCS-Go.exe替换为新版本即可</p><p><b>2.为何显示注册失败？</b><br>添加服务或写入注册表时失败，尝试将安全软件例如360关闭后重试</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://github.com/JamesHoi/BaiduPCS-service-win/releases">Github发布页</a><br><a href="https://share.weiyun.com/5SM9M79">微云下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学公式</title>
      <link href="/2019/04/26/statistics/"/>
      <url>/2019/04/26/statistics/</url>
      
        <content type="html"><![CDATA[<h1 id="统计学"><a href="#统计学" class="headerlink" title="统计学"></a>统计学</h1><h2 id="均值"><a href="#均值" class="headerlink" title="均值"></a>均值</h2><p>$$ \bar{x}=\frac{\sum_{n=1}^Nx_n}{N} $$</p><h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><ol><li>离散型<br>$$ {E(X)=\sum_{k=1}^\infty {x_k}{p_k}} $$</li><li>连续型<br>$$ E(X)=\int_{-\infty}^\infty xf(x)dx $$</li></ol><h2 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h2><ol><li>离散型<br>$$ {D(X)=\sum_{k=1}^\infty [x_k-E(X)]^2 {p_k}} $$<center>或</center>$$ s^2=\frac{\sum_{i=1}^n(X_i-\bar{X})^2}{n-1} $$</li><li>连续型<br>$$ {D(X)=\int_{-\infty}^\infty[x-E(X)]^2f(x)dx} $$<br>$$ f(x) $$为连续性随机变量X的概率密度函数</li></ol><h2 id="标准差"><a href="#标准差" class="headerlink" title="标准差"></a>标准差</h2><p>$$ s=\sqrt{\frac{\sum_{i=1}^n(X_i-\bar{X})^2}{n-1}} $$</p><h2 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h2><p>$$ {Cov(X,Y)=E{[X-E(X)][Y-E(Y)]}}\=E[XY]-E[X]E[Y] $$</p><h2 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h2><p>$$ {\rho_{XY}=\frac{Cov(X,Y)}{\sqrt{D(X)}\sqrt{D(Y)}}} $$</p><h1 id="资料来源"><a href="#资料来源" class="headerlink" title="资料来源"></a>资料来源</h1><p>百度百科<br><a href="https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412?fr=aladdin">方差</a><br><a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE/1415772?fr=aladdin">标准差</a><br><a href="https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E6%95%B0/11031224?fromtitle=%E5%9D%87%E5%80%BC&fromid=5922988">平均数</a><br><a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/5362790?fromtitle=%E6%9C%9F%E6%9C%9B&fromid=10318906&fr=aladdin">数学期望</a></p><p>CSDN<br><a href="https://blog.csdn.net/qq_25051779/article/details/51914534">方差与协方差</a><br><a href="https://blog.csdn.net/sinat_25873421/article/details/80469530">统计学理论基础 方差 &amp; 协方差 &amp; 标准差</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>真正的完美解决centos7.5的图形界面中文乱码的方法</title>
      <link href="/2019/04/10/pane-fixer/"/>
      <url>/2019/04/10/pane-fixer/</url>
      
        <content type="html"><![CDATA[<p>网上看了很多很多的办法，就是搞不定乱码的情况。本文目的是希望后人能够迅速解决这个问题，此方法在Centos 7.5亲测有效。</p><p>一键解决：<a href="https://github.com/JamesHoi/pane-fixer-centos">https://github.com/JamesHoi/pane-fixer-centos</a> （下面的都可以忽略了）</p><p>参考  <a href="https://www.linuxidc.com/Linux/2013-01/77362.htm">https://www.linuxidc.com/Linux/2013-01/77362.htm</a> , 安装语言包<br><code>yum -y install fonts-chinese</code><br><code>yum -y install fonts-ISO8859-2</code><br>但是却显示错误<code>No package fonts-chinese available.</code>，找不到安装包</p><p>经过一番寻找，找到了相应需要的<code>fonts-chinese-3.02-12.el5.noarch.rpm</code>和<code>fonts-ISO8859-2-75dpi-1.0-17.1.noarch.rpm</code>（请<a href="https://github.com/JamesHoi/pane-fixer-centos">前往</a>下载），显示错误缺乏依赖包<code>chkfontpath</code><br>查询<a href="https://altlinux.pkgs.org/sisyphus/classic-x86_64/chkfontpath-2.0.3-alt1.x86_64.rpm.html">chkfontpath官网</a>，<a href="http://ftp.altlinux.org/pub/distributions/ALTLinux/Sisyphus/x86_64/RPMS.classic//chkfontpath-2.0.3-alt1.x86_64.rpm">下载</a><code>wget http://ftp.altlinux.org/pub/distributions/ALTLinux/Sisyphus/x86_64/RPMS.classic//chkfontpath-2.0.3-alt1.x86_64.rpm</code></p><p>最后安装<br><code>yum install chkfontpath-2.0.3-alt1.x86_64.rpm</code><br><code>yum install fonts-ISO8859-2-75dpi-1.0-17.1.noarch.rpm</code><br><code>yum install fonts-chinese-3.02-12.el5.noarch.rpm</code></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
